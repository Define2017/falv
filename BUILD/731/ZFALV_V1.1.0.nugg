<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZFALV">
 <CLAS CLSNAME="ZCL_FALV" VERSION="1" LANGU="E" DESCRIPT="Fast ALV" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_GUI_ALV_GRID">
  <types CLSNAME="ZCL_FALV" CMPNAME="T_COLUMN" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="3" TYPE="ZCL_FALV_COLUMN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <friends CLSNAME="ZCL_FALV" REFCLSNAME="ZCL_FALV_LAYOUT" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <implementing CLSNAME="ZCL_FALV" REFCLSNAME="IF_OS_CLONE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
  <events CLSNAME="ZCL_FALV" CMPNAME="AT_SET_PF_STATUS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " EVTDECLTYP="0" BCEVTCAT="00"/>
  <events CLSNAME="ZCL_FALV" CMPNAME="AT_SET_TITLE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " EVTDECLTYP="0" BCEVTCAT="00"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_FALV" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="APPLICATION_LOG_EMBEDDED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUILT_IN_SCREEN" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_CHECKBOX" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="25 " ATTDECLTYP="2" ATTVALUE="&apos;5&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_MENU" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " ATTDECLTYP="2" ATTVALUE="&apos;2&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_MENU_DEFAULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " ATTDECLTYP="2" ATTVALUE="&apos;1&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_MENU_ENTRY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="26 " ATTDECLTYP="2" ATTVALUE="&apos;6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_NORMAL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " ATTDECLTYP="2" ATTVALUE="&apos;0&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_RADIOBUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " ATTDECLTYP="2" ATTVALUE="&apos;4&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_SEPARATOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " ATTDECLTYP="2" ATTVALUE="&apos;3&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="CC_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CC_GRID&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR30" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="COLUMNS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="67 " TYPESRC_LENG="65 " TYPESRC="columns TYPE SORTED TABLE OF t_column WITH UNIQUE KEY table_line
"/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="C_FSCR_REPID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;SAPLZFALV&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-REPID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="C_SCREEN_FULL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;0100&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-DYNNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="C_SCREEN_POPUP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;0200&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-DYNNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="EXCLUDE_FUNCTIONS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="31 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="UI_FUNCTIONS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FCAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="32 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_T_FCAT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_BACK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " ATTDECLTYP="2" ATTVALUE="&apos;BACK&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_CANCEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " ATTDECLTYP="2" ATTVALUE="&apos;CANCEL&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_EXIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " ATTDECLTYP="2" ATTVALUE="&apos;EXIT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_FIND" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " ATTDECLTYP="2" ATTVALUE="&apos;FIND&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_FIND_NEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " ATTDECLTYP="2" ATTVALUE="&apos;FINDNEXT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_FIRST_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " ATTDECLTYP="2" ATTVALUE="&apos;PGHOME&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_LAST_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " ATTDECLTYP="2" ATTVALUE="&apos;PGEND&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_MASS_REPLACE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " ATTDECLTYP="2" ATTVALUE="&apos;MASS_REPL&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_NEXT_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " ATTDECLTYP="2" ATTVALUE="&apos;PGDOWN&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_PREVIOUS_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " ATTDECLTYP="2" ATTVALUE="&apos;PGUP&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_PRINT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " ATTDECLTYP="2" ATTVALUE="&apos;PRINT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_SAVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " ATTDECLTYP="2" ATTVALUE="&apos;&amp;DATA_SAVE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_UP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " ATTDECLTYP="2" ATTVALUE="&apos;UP&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FILTER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="34 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_T_FILT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="GUI_STATUS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="37 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_FALV_DYNAMIC_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="HEIGHT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="LAYOUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="36 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_FALV_LAYOUT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="LAYOUT_SAVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="30 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR01" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="LVC_LAYOUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="35 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_S_LAYO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="MAIN_CONTAINER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="27 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="OUTTAB" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="39 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="RESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SCREEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="38 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-DYNNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SORT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="33 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_T_SORT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SPLIT_CONTAINER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="28 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_SPLITTER_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SUBCLASS_TYPE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_ABAP_TYPEDESCR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="40 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V2" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="41 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V3" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="42 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V4" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="43 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V5" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="44 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TOOLBAR_ADDED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TTB_BUTTON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TOOLBAR_DELETED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TTB_BUTTON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TOOLBAR_DISABLED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TTB_BUTTON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="VARIANT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="29 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DISVARIANT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_FALV" REFCLSNAME="CL_GUI_ALV_GRID" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZCL_FALV" REFCLSNAME="CL_GUI_ALV_GRID" VERSION="1" MTDNAME="SET_FRONTEND_FIELDCATALOG" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_FALV" REFCLSNAME="CL_GUI_ALV_GRID" VERSION="1" MTDNAME="SET_FRONTEND_LAYOUT" EXPOSURE="2"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZCL_FALV" CPDNAME="IF_OS_CLONE~CLONE">
   <source>METHOD if_os_clone~clone.
    SYSTEM-CALL OBJMGR CLONE me TO result.
  ENDMETHOD.                    &quot;if_os_clone~clone</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_ICON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ICON_D" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_QUICKINFO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ICONQUICK" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_BUTN_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TB_BTYPE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_DISABLED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TEXT40" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_CHECKED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <source>METHOD add_button.
*Begin SMD
*    if not line_exists( toolbar_added[ function = iv_function ] ).
*      insert value #( function = iv_function
*                      icon = conv #( iv_icon )
*                      quickinfo = iv_quickinfo
*                      butn_type = iv_butn_type
*                      disabled = iv_disabled
*                      text = iv_text
*                      checked = iv_checked
*                        ) into table toolbar_added .
    FIELD-SYMBOLS: &lt;toolbar_added&gt; LIKE LINE OF toolbar_added.
    DATA: ls_toolbar_added LIKE LINE OF toolbar_added.
    READ TABLE toolbar_added ASSIGNING &lt;toolbar_added&gt; WITH KEY function = iv_function.
    IF sy-subrc NE 0.
      CLEAR: ls_toolbar_added.
      ls_toolbar_added-function = iv_function.
      ls_toolbar_added-icon = iv_icon.
      ls_toolbar_added-quickinfo = iv_quickinfo.
      ls_toolbar_added-butn_type = iv_butn_type.
      ls_toolbar_added-disabled = iv_disabled.
      ls_toolbar_added-text = iv_text.
      ls_toolbar_added-checked = iv_checked.
      INSERT ls_toolbar_added INTO TABLE toolbar_added.
*End SMD
      DELETE toolbar_deleted WHERE function = iv_function.
      me-&gt;refresh_toolbar( ).
    ENDIF.

  ENDMETHOD.                    &quot;add_button</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="BUILD_COLUMNS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD build_columns.
*Begin SMD
*    loop at fcat assigning field-symbol(&lt;fcat&gt;).
*      data(column) = new zcl_falv_column( iv_fieldname = &lt;fcat&gt;-fieldname io_falv = me ).
    FIELD-SYMBOLS: &lt;fcat&gt; LIKE LINE OF fcat.
    DATA: column TYPE REF TO zcl_falv_column.
    LOOP AT fcat ASSIGNING &lt;fcat&gt;.
      CREATE OBJECT column
        EXPORTING
          iv_fieldname = &lt;fcat&gt;-fieldname
          io_falv      = me.
*End SMD
      INSERT column INTO TABLE columns.
    ENDLOOP.
  ENDMETHOD.                    &quot;build_columns</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="COLUMN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="COLUMN" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_FCAT-FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="COLUMN" SCONAME="RV_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_FALV_COLUMN"/>
   <source>METHOD column.
*Begin SMD
*  TRY.

*        rv_column = columns[  table_line-&gt;fieldname = iv_fieldname ].
*    CATCH cx_sy_itab_line_not_found.

*  ENDTRY.
    READ TABLE columns INTO rv_column WITH KEY table_line-&gt;fieldname = iv_fieldname.
*Begin SMD
  ENDMETHOD.                    &quot;column</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_SHELLSTYLE" VERSION="1" LANGU="E" DESCRIPT="Control Style" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PARVALUE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_LIFETIME" VERSION="1" LANGU="E" DESCRIPT="Lifetime" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_PARENT" VERSION="1" LANGU="E" DESCRIPT="Parent Container" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_APPL_EVENTS" VERSION="1" LANGU="E" DESCRIPT="Register Events as Application Events" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_PARENTDBG" VERSION="1" LANGU="E" DESCRIPT="Internal, Do not Use" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_APPLOGPARENT" VERSION="1" LANGU="E" DESCRIPT="Container for Application Log" CMPTYPE="1" MTDTYPE="2" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_GRAPHICSPARENT" VERSION="1" LANGU="E" DESCRIPT="Container for Graphics" CMPTYPE="1" MTDTYPE="2" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_NAME" VERSION="1" LANGU="E" DESCRIPT="Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="8 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_FCAT_COMPLETE" VERSION="1" LANGU="E" DESCRIPT="Boolean Variable (X=True, Space=False)" CMPTYPE="1" MTDTYPE="2" EDITORDER="9 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SAP_BOOL" PARVALUE="SPACE"/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_CNTL_CREATE" VERSION="1" LANGU="E" DESCRIPT="Error Creating Control" MTDTYPE="2" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_CNTL_INIT" VERSION="1" LANGU="E" DESCRIPT="Error While Initializing Control" MTDTYPE="2" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_CNTL_LINK" VERSION="1" LANGU="E" DESCRIPT="Error While Linking Control" MTDTYPE="2" EDITORDER="3 "/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_DP_CREATE" VERSION="1" LANGU="E" DESCRIPT="Error While Creating DataProvider Control" MTDTYPE="2" EDITORDER="4 "/>
   <source>METHOD constructor.
    super-&gt;constructor(
      EXPORTING
        i_shellstyle      = i_shellstyle    &quot; Control Style
        i_lifetime        = i_lifetime    &quot; Lifetime
        i_parent          = i_parent    &quot; Parent Container
        i_appl_events     = i_appl_events    &quot; Register Events as Application Events
        i_parentdbg       = i_parentdbg    &quot; Internal, Do not Use
        i_applogparent    = i_applogparent    &quot; Container for Application Log
        i_graphicsparent  = i_graphicsparent    &quot; Container for Graphics
        i_name            = i_name    &quot; Name
        i_fcat_complete   = i_fcat_complete  &quot; Boolean Variable (X=True, Space=False)
      EXCEPTIONS
        error_cntl_create = 1
        error_cntl_init   = 2
        error_cntl_link   = 3
        error_dp_create   = 4
        OTHERS            = 5
    ).
    IF sy-subrc &lt;&gt; 0.
      CASE sy-subrc.
        WHEN 1.
          RAISE error_cntl_create.
        WHEN 2.
          RAISE error_cntl_init.
        WHEN 3.
          RAISE error_cntl_link.
        WHEN 4.
          RAISE error_dp_create.
      ENDCASE.
    ENDIF.
  ENDMETHOD.                    &quot;constructor</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CREATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_PARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_APPLOGPARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_POPUP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_APPLOG_EMBEDDED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_SUBCLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_ABAP_TYPEDESCR" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="CT_TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="RV_FALV" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_FALV"/>
   <source>METHOD create.
    DATA: built_in_screen TYPE abap_bool.
    DATA: custom_container TYPE REF TO cl_gui_custom_container.
    DATA: parent TYPE REF TO cl_gui_container.
    DATA: applog TYPE REF TO cl_gui_container.
*Begin SMD En fondo 10/03/2016
    DATA: or_doc  TYPE REF TO cl_gui_docking_container.
*End SMD En fondo 10/03/2016
*Begin SMD
    DATA: lv_dynnr TYPE sydynnr.
    IF i_popup = abap_true.
      lv_dynnr = c_screen_popup.
    ELSE.
      lv_dynnr = c_screen_full.
    ENDIF.
    DATA split_container TYPE REF TO cl_gui_splitter_container.
*End SMD
*Begin SMD En fondo 10/03/2016
    IF cl_gui_alv_grid=&gt;offline( ) IS INITIAL.
*End SMD En fondo 10/03/2016
      &quot;We need to call full screen ALV as container was not passed
      IF i_parent IS INITIAL.

        built_in_screen = abap_true.
        TRY.
            CREATE OBJECT custom_container
              EXPORTING
                container_name          = cc_name
*Begin SMD
*              dynnr                   = switch #( i_popup when abap_true then c_screen_popup
*                                                          when abap_false then c_screen_full )
                dynnr                   = lv_dynnr
*End SMD
                repid                   = c_fscr_repid
                no_autodef_progid_dynnr = abap_true.

            IF i_applog_embedded EQ abap_true.
              &quot; Create split container, log at bottom, grid at top.
              &quot;Log hidden as default, will appear when error will be thrown.
*Begin SMD
*            data(split_container) = new cl_gui_splitter_container(
*                link_dynnr              = switch #( i_popup when abap_true then c_screen_popup
*                                                 when abap_false then c_screen_full )
*                link_repid              = c_fscr_repid
*                 parent                  = custom_container
*                 rows                    = 2
*                 columns                 = 1
*            ).

              CREATE OBJECT split_container
                EXPORTING
                  link_dynnr = lv_dynnr
                  link_repid = c_fscr_repid
                  parent     = custom_container
                  rows       = 2
                  columns    = 1.
*End SMD
              parent ?= split_container-&gt;get_container( row = 1 column    = 1 ).
              applog = split_container-&gt;get_container( row = 2 column    = 1 ).
            ELSE.
              parent ?= custom_container.
            ENDIF.
          CATCH cx_root.
            &quot;Something is wrong...
        ENDTRY.
      ELSE.

        applog ?= i_applogparent.
        IF applog IS INITIAL AND i_applog_embedded EQ abap_true.
          custom_container ?= i_parent.
*Begin SMD
*      split_container = new cl_gui_splitter_container(
*           parent                  = custom_container
*           ROWS                    = 2
*           COLUMNS                 = 1
*      ).
          CREATE OBJECT split_container
            EXPORTING
              parent  = custom_container
              rows    = 2
              columns = 1.
*End SMD
          parent ?= split_container-&gt;get_container( row = 1 column    = 1 ).
          applog = split_container-&gt;get_container( row = 2 column    = 1 ).
        ELSE.
          parent ?= i_parent.
          custom_container ?= i_parent.
        ENDIF.

      ENDIF.
*Begin SMD En fondo 10/03/2016
    ENDIF.
*End SMD En fondo 10/03/2016
    IF i_subclass IS NOT INITIAL.
      DATA: subclass TYPE REF TO object.
*Begin SMD
*    data(sublcass_abs_name) = i_subclass-&gt;absolute_name.
      DATA: sublcass_abs_name TYPE abap_abstypename.
      sublcass_abs_name = i_subclass-&gt;absolute_name.
*End SMD
*        data(subclass_type) = cl_abap_classdescr=&gt;describe_by_name( p_name = i_subclass ).
*Begin SMD En fondo 10/03/2016
      IF cl_gui_alv_grid=&gt;offline( ) IS INITIAL.
*End SMD En fondo 10/03/2016
        CREATE OBJECT subclass TYPE (sublcass_abs_name)
          EXPORTING
            i_parent       = parent
            i_applogparent = applog.
*Begin SMD En fondo 10/03/2016
      ELSE.
        CREATE OBJECT subclass TYPE (sublcass_abs_name)
          EXPORTING
            i_parent = or_doc.
      ENDIF.
*End SMD En fondo 10/03/2016
      rv_falv ?= subclass.
      rv_falv-&gt;subclass_type = i_subclass.
    ELSE.
*Begin SMD En fondo 10/03/2016
      IF cl_gui_alv_grid=&gt;offline( ) IS INITIAL.
*End SMD En fondo 10/03/2016
        CREATE OBJECT rv_falv
          EXPORTING
            i_parent       = parent
            i_applogparent = applog.
*Begin SMD En fondo 10/03/2016
      ELSE.
        CREATE OBJECT rv_falv
          EXPORTING
            i_parent = or_doc.
      ENDIF.
*End SMD En fondo 10/03/2016
    ENDIF.
    SET HANDLER rv_falv-&gt;evt_after_refresh FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_after_user_command FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_before_ucommand_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_before_user_command FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_button_click_falv FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_data_changed FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_data_changed_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_data_changed_finished FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_double_click FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_hotspot_click FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_menu_button FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_onf1 FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_onf4 FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_subtotal_text FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_toolbar_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_toolbar FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_user_command FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_user_command_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_at_set_pf_status FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_at_set_title FOR rv_falv.


    rv_falv-&gt;set_output_table( CHANGING ct_table = ct_table ).
    rv_falv-&gt;fcat = rv_falv-&gt;lvc_fcat_from_itab( it_table = ct_table ).
    rv_falv-&gt;set_frontend_fieldcatalog( it_fieldcatalog = rv_falv-&gt;fcat ).
    rv_falv-&gt;application_log_embedded = i_applog_embedded.
    rv_falv-&gt;built_in_screen = built_in_screen.
    rv_falv-&gt;build_columns( ).
*Begin SMD
*  rv_falv-&gt;layout = new zcl_falv_layout( rv_falv ).
*  rv_falv-&gt;gui_status = new zcl_falv_dynamic_status( ).
*  rv_falv-&gt;screen = switch #( i_popup WHEN abap_true THEN c_screen_popup
*                                      WHEN abap_false THEN c_screen_full ).


    DATA: lo_layout TYPE REF TO zcl_falv_layout.
    CREATE OBJECT lo_layout
      EXPORTING
        io_falv = rv_falv.
    rv_falv-&gt;layout = lo_layout.
    DATA: lo_gui_status TYPE REF TO zcl_falv_dynamic_status.
    CREATE OBJECT lo_gui_status.
    rv_falv-&gt;gui_status = lo_gui_status.
    rv_falv-&gt;screen = lv_dynnr.
*End SMD

    IF built_in_screen EQ abap_true AND rv_falv-&gt;screen EQ c_screen_full.
      &quot;default in full screen
      rv_falv-&gt;layout-&gt;set_no_toolbar( abap_true ).
    ENDIF.
    rv_falv-&gt;main_container ?= custom_container.
    rv_falv-&gt;split_container = split_container.
    rv_falv-&gt;variant-report = sy-repid.
    IF split_container IS NOT INITIAL.
      rv_falv-&gt;hide_applog( ).
    ENDIF.
*Begin SMD
*    Default initializations
    rv_falv-&gt;layout_save = &apos;A&apos;.
    rv_falv-&gt;variant-report = sy-cprog. &quot;This value should be informed as sy-repid when calling ZFALV
    rv_falv-&gt;variant-username = sy-uname.
    rv_falv-&gt;variant-handle = &apos;0001&apos;.
*End SMD
  ENDMETHOD.                    &quot;create</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="I_PARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="I_APPLOGPARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="I_POPUP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="RV_FALV" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_FALV"/>
   <source>METHOD create_by_copy.
    DATA: built_in_screen TYPE abap_bool.
*Begin SMD
    DATA: lv_dynnr TYPE sydynnr.
    IF i_popup = abap_true.
      lv_dynnr = c_screen_popup.
    ELSE.
      lv_dynnr = c_screen_full.
    ENDIF.
    DATA: custom_container TYPE REF TO cl_gui_custom_container,
          split_container TYPE REF TO cl_gui_splitter_container.
*End SMD

    &quot;We need to call full screen ALV as container was not passed
    IF i_parent IS INITIAL.
      built_in_screen = abap_true.
      TRY.
*Begin SMD
*        data(custom_container) = new cl_gui_custom_container(
*            container_name = cc_name
*            dynnr          = SWITCH #( i_popup WHEN abap_true THEN c_screen_popup
*                                               WHEN abap_false THEN c_screen_full )
*            repid          = c_fscr_repid ).
          CREATE OBJECT custom_container
            EXPORTING
              container_name = cc_name
              dynnr          = lv_dynnr
              repid          = c_fscr_repid.
*End SMD
          IF application_log_embedded EQ abap_true.
            &quot; Create split container, log at bottom, grid at top.
            &quot;Log hidden as default, will appear when error will be thrown.
*Begin SMD
*          data(split_container) = new cl_gui_splitter_container(
*              link_dynnr              = SWITCH #( i_popup WHEN abap_true THEN c_screen_popup
*                                               WHEN abap_false THEN c_screen_full )
*              link_repid              = c_fscr_repid
*               parent                  = custom_container
*               ROWS                    = 2
*               COLUMNS                 = 1
*          ).
            CREATE OBJECT split_container
              EXPORTING
                link_dynnr = lv_dynnr
                link_repid = c_fscr_repid
                parent     = custom_container
                rows       = 2
                columns    = 1.
*End SMD
            i_parent ?= split_container-&gt;get_container( row = 1 column    = 1 ).
            i_applogparent = split_container-&gt;get_container( row = 2 column    = 1 ).
          ELSE.
            i_parent ?= custom_container.
          ENDIF.
        CATCH cx_root.
          &quot;Something is wrong...
      ENDTRY.
    ELSE.
      custom_container ?= i_parent.
    ENDIF.

    IF me-&gt;subclass_type IS NOT INITIAL.
      DATA: subclass TYPE REF TO object.
*Begin SMD
*    data(sublcass_abs_name) = subclass_type-&gt;absolute_name.
      DATA: sublcass_abs_name TYPE abap_abstypename.
      sublcass_abs_name = subclass_type-&gt;absolute_name.
*End SMD
      CREATE OBJECT subclass TYPE (sublcass_abs_name)
        EXPORTING
          i_parent       = i_parent
          i_applogparent = i_applogparent.

      rv_falv ?= subclass.
      rv_falv-&gt;subclass_type = subclass_type.
    ELSE.
      CREATE OBJECT rv_falv
        EXPORTING
          i_parent       = i_parent
          i_applogparent = i_applogparent.
    ENDIF.

    SET HANDLER rv_falv-&gt;evt_after_refresh FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_after_user_command FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_before_ucommand_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_before_user_command FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_button_click_falv FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_data_changed FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_data_changed_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_data_changed_finished FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_double_click FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_hotspot_click FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_menu_button FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_onf1 FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_onf4 FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_subtotal_text FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_toolbar_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_toolbar FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_user_command FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_user_command_internal FOR rv_falv.
    SET HANDLER rv_falv-&gt;evt_at_set_pf_status FOR rv_falv.
*Begin SMD
    SET HANDLER rv_falv-&gt;evt_at_set_pf_status FOR rv_falv.
*End SMD
    SET HANDLER rv_falv-&gt;evt_at_set_title FOR rv_falv.

    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE.
    ASSIGN me-&gt;outtab-&gt;* TO &lt;outtab&gt;.
    rv_falv-&gt;set_output_table( CHANGING ct_table = &lt;outtab&gt; ).
    rv_falv-&gt;fcat = rv_falv-&gt;lvc_fcat_from_itab( it_table = &lt;outtab&gt; ).
    rv_falv-&gt;sort = me-&gt;sort.
    rv_falv-&gt;filter = me-&gt;filter.
    rv_falv-&gt;set_frontend_fieldcatalog( it_fieldcatalog = me-&gt;fcat ).
    rv_falv-&gt;application_log_embedded = application_log_embedded.
    rv_falv-&gt;built_in_screen = built_in_screen.
    rv_falv-&gt;build_columns( ).
*Begin SMD
*  rv_falv-&gt;layout = new zcl_falv_layout( io_falv = rv_falv ).
    DATA: lo_layout TYPE REF TO zcl_falv_layout.
    CREATE OBJECT lo_layout
      EXPORTING
        io_falv = rv_falv.
    rv_falv-&gt;layout = lo_layout.
*End SMD
    rv_falv-&gt;gui_status ?= me-&gt;gui_status-&gt;if_os_clone~clone( ). &quot;clone object
    rv_falv-&gt;lvc_layout = me-&gt;lvc_layout.
    rv_falv-&gt;variant = me-&gt;variant.
*Begin SMD
*  rv_falv-&gt;screen = switch #( i_popup WHEN abap_true THEN c_screen_popup
*                                      WHEN abap_false THEN c_screen_full ).
    rv_falv-&gt;screen = lv_dynnr.
*End SMD

    rv_falv-&gt;main_container ?= custom_container.
    rv_falv-&gt;split_container = split_container.
    IF split_container IS NOT INITIAL.
      rv_falv-&gt;hide_applog( ).
    ENDIF.
    rv_falv-&gt;title_v1 = me-&gt;title_v1.
    rv_falv-&gt;title_v2 = me-&gt;title_v2.
    rv_falv-&gt;title_v3 = me-&gt;title_v3.
    rv_falv-&gt;title_v4 = me-&gt;title_v4.
    rv_falv-&gt;exclude_functions = me-&gt;exclude_functions.
    rv_falv-&gt;toolbar_added = me-&gt;toolbar_added.
    rv_falv-&gt;toolbar_deleted = me-&gt;toolbar_deleted.
    rv_falv-&gt;toolbar_disabled = me-&gt;toolbar_disabled.
  ENDMETHOD.                    &quot;create_by_copy</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="DELETE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DELETE_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <source>METHOD delete_button.
    DELETE toolbar_added WHERE function = iv_function.
    IF sy-subrc NE 0.
*Begin SMD
*      insert value #( function = iv_function ) into table toolbar_deleted.
      DATA: ls_toolbar_deleted LIKE LINE OF toolbar_deleted.
      CLEAR: ls_toolbar_deleted.
      ls_toolbar_deleted-function = iv_function.
      INSERT ls_toolbar_deleted INTO TABLE toolbar_deleted.
*End SMD
      IF sy-subrc NE 0.
      ENDIF.
    ENDIF.
    me-&gt;refresh_toolbar( ).
  ENDMETHOD.                    &quot;delete_button</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="DISABLE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISABLE_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <source>METHOD disable_button.
*Begin SMD
*  TRY.
*      toolbar_added[ function = iv_function ]-disabled = abap_true.
*    CATCH cx_sy_itab_line_not_found.
*  ENDTRY.
*  INSERT value #( function = iv_function ) INTO TABLE toolbar_disabled.
    FIELD-SYMBOLS: &lt;toolbar_added&gt; LIKE LINE OF toolbar_added.
    DATA: ls_toolbar_added LIKE LINE OF toolbar_added.
    LOOP AT toolbar_added ASSIGNING &lt;toolbar_added&gt; WHERE function = iv_function.
      &lt;toolbar_added&gt;-disabled = abap_true.
    ENDLOOP.
    CLEAR: ls_toolbar_added.
    ls_toolbar_added-function = iv_function.
    INSERT ls_toolbar_added INTO TABLE toolbar_disabled.
*End SMD
    IF sy-subrc NE 0.
    ENDIF.
    me-&gt;refresh_toolbar( ).
  ENDMETHOD.                    &quot;disable_button</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_FORCE_GRID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_START_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_START_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_END_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_END_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <source>METHOD display.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE.
    IF built_in_screen EQ abap_true AND iv_force_grid EQ abap_false.
      IF screen EQ c_screen_popup AND iv_start_row IS INITIAL
                                  AND iv_start_column IS INITIAL
                                  AND iv_end_row IS INITIAL
                                  AND iv_end_column IS INITIAL.
        iv_start_row = 1.
        iv_start_column = 1.
        iv_end_row = 20.
        iv_end_column = 150.
      ENDIF.
      CALL FUNCTION &apos;Z_FALV_DISPLAY&apos;
        EXPORTING
          io_falv         = me
          iv_start_row    = iv_start_row
          iv_start_column = iv_start_column
          iv_end_row      = iv_end_row
          iv_end_column   = iv_end_column.
      .
    ELSE.
      ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
      me-&gt;set_table_for_first_display(
        EXPORTING
*            i_buffer_active               =     &quot; Buffering Active
*            i_bypassing_buffer            =     &quot; Switch Off Buffer
*            i_consistency_check           =     &quot; Starting Consistency Check for Interface Error Recognition
*            i_structure_name              =     &quot; Internal Output Table Structure Name
          is_variant                     =     variant
          i_save                        =      layout_save
*            i_default                     = &apos;X&apos;    &quot; Default Display Variant
          is_layout                     =      lvc_layout
*            is_print                      =     &quot; Print Control
*            it_special_groups            =     &quot; Field Groups
          it_toolbar_excluding          =     exclude_functions
*            it_hyperlink                  =     &quot; Hyperlinks
*            it_alv_graphics               =     &quot; Table of Structure DTC_S_TC
*            it_except_qinfo               =     &quot; Table for Exception Quickinfo
*            ir_salv_adapter               =     &quot; Interface ALV Adapter
        CHANGING
          it_outtab                     =    &lt;outtab&gt; &quot; Output Table
          it_fieldcatalog               =     fcat
          it_sort                       =     sort &quot; Sort Criteria
          it_filter                     =     filter &quot; Filter Criteria
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4
      ).
      IF sy-subrc EQ 0.
        IF split_container IS NOT INITIAL.
          split_container-&gt;set_focus(
            EXPORTING
              control           =     me
            EXCEPTIONS
              cntl_error        = 1
              cntl_system_error = 2
              OTHERS            = 3
          ).
          IF sy-subrc &lt;&gt; 0.
          ENDIF.
          me-&gt;hide_applog( ).
        ELSE.
          me-&gt;parent-&gt;set_focus(
            EXPORTING
              control           =  me
            EXCEPTIONS
              cntl_error        = 1
              cntl_system_error = 2
              OTHERS            = 3
          ).
          IF sy-subrc &lt;&gt; 0.
          ENDIF.
        ENDIF.
        cl_gui_cfw=&gt;flush(
          EXCEPTIONS
            cntl_system_error = 1
            cntl_error        = 2
            OTHERS            = 3
        ).
        IF sy-subrc &lt;&gt; 0.
        ENDIF.
        me-&gt;set_visible( abap_true ).
        me-&gt;parent-&gt;set_visible( abap_true ).
        me-&gt;main_container-&gt;set_visible( abap_true ).
        IF me-&gt;split_container IS NOT INITIAL.
          me-&gt;split_container-&gt;set_visible( abap_true ).
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;display</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="ENABLE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ENABLE_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <source>METHOD enable_button.
*Begin SMD
*    try.
*        toolbar_added[ function = iv_function ]-disabled = abap_false.
*      catch cx_sy_itab_line_not_found.
*    endtry.
    FIELD-SYMBOLS: &lt;toolbar_added&gt; LIKE LINE OF toolbar_added.
    LOOP AT toolbar_added ASSIGNING &lt;toolbar_added&gt; WHERE function = iv_function.
      &lt;toolbar_added&gt;-disabled = abap_false.
    ENDLOOP.
*End SMD
    DELETE toolbar_disabled WHERE function = iv_function.
    me-&gt;refresh_toolbar( ).
  ENDMETHOD.                    &quot;enable_button</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_REFRESH" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="AFTER_REFRESH" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD evt_after_refresh.
  ENDMETHOD.                    &quot;evt_after_refresh</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="AFTER_USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" SCONAME="E_SAVED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" SCONAME="E_NOT_PROCESSED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_after_user_command.
  ENDMETHOD.                    &quot;evt_after_user_command</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AT_SET_PF_STATUS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZCL_FALV" REFCMPNAME="AT_SET_PF_STATUS" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD evt_at_set_pf_status.
  ENDMETHOD.                    &quot;evt_at_set_pf_status</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AT_SET_TITLE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="21 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZCL_FALV" REFCMPNAME="AT_SET_TITLE" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD evt_at_set_title.
  ENDMETHOD.                    &quot;evt_at_set_title</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_UCOMMAND_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="BEFORE_USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_UCOMMAND_INTERNAL" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_before_ucommand_internal.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE.
*Begin SMD
    FIELD-SYMBOLS: &lt;fcat&gt; LIKE LINE OF fcat,
                   &lt;line&gt; TYPE any,
                   &lt;mark&gt; TYPE any.
*End SMD
    CASE e_ucomm.
      WHEN me-&gt;mc_fc_select_all.

        IF layout-&gt;mark_field IS NOT INITIAL. &quot; SMD and
*Begin SMD
*        line_exists( fcat[ fieldname = layout-&gt;mark_field CHECKBOX = abap_true ] ).
          READ TABLE fcat ASSIGNING &lt;fcat&gt; WITH KEY fieldname = layout-&gt;mark_field checkbox = abap_true.
          IF sy-subrc EQ 0.
*End SMD
            ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
*Begin SMD
*          LOOP AT &lt;outtab&gt; ASSIGNING field-symbol(&lt;line&gt;).
            LOOP AT &lt;outtab&gt; ASSIGNING &lt;line&gt;.
*            ASSIGN COMPONENT layout-&gt;mark_field OF STRUCTURE &lt;line&gt; TO field-symbol(&lt;mark&gt;).
              ASSIGN COMPONENT layout-&gt;mark_field OF STRUCTURE &lt;line&gt; TO &lt;mark&gt;.
*End SMD
              IF sy-subrc EQ 0.
                &lt;mark&gt; = abap_true.
              ENDIF.
            ENDLOOP.
            me-&gt;soft_refresh( ).
            set_user_command( i_ucomm = space ).
*Begin SMD
          ENDIF.
*End SMD
        ENDIF.
      WHEN me-&gt;mc_fc_deselect_all.
        IF layout-&gt;mark_field IS NOT INITIAL. &quot;SMD and
*Begin SMD
*        line_exists( fcat[ fieldname = layout-&gt;mark_field CHECKBOX = abap_true ] ).
          READ TABLE fcat ASSIGNING &lt;fcat&gt; WITH KEY fieldname = layout-&gt;mark_field checkbox = abap_true.
          IF sy-subrc EQ 0.
*End SMD
            ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
            LOOP AT &lt;outtab&gt; ASSIGNING &lt;line&gt;.
              ASSIGN COMPONENT layout-&gt;mark_field OF STRUCTURE &lt;line&gt; TO &lt;mark&gt;.
              IF sy-subrc EQ 0.
                &lt;mark&gt; = abap_false.
              ENDIF.
            ENDLOOP.
            me-&gt;soft_refresh( ).
            set_user_command( i_ucomm = space ).
*Begin SMD
          ENDIF.
*End SMD
        ENDIF.
    ENDCASE.
  ENDMETHOD.                    &quot;evt_before_ucommand_internal</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_USER_COMMAND" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="BEFORE_USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_before_user_command.
  ENDMETHOD.                    &quot;evt_before_user_command</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_BUTTON_CLICK_FALV" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="BUTTON_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BUTTON_CLICK_FALV" SCONAME="ES_COL_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BUTTON_CLICK_FALV" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_button_click_falv.
  ENDMETHOD.                    &quot;evt_button_click_falv</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DATA_CHANGED" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="ER_DATA_CHANGED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_ONF4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_ONF4_BEFORE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_ONF4_AFTER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_data_changed.

  ENDMETHOD.                    &quot;evt_data_changed</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_FINISHED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DATA_CHANGED_FINISHED" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_FINISHED" SCONAME="E_MODIFIED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_FINISHED" SCONAME="ET_GOOD_CELLS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_data_changed_finished.
  ENDMETHOD.                    &quot;evt_data_changed_finished</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DATA_CHANGED" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="ER_DATA_CHANGED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_ONF4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_ONF4_BEFORE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_ONF4_AFTER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_data_changed_internal.
    IF er_data_changed-&gt;mt_protocol IS NOT INITIAL.
      show_applog( ).
    ELSE.
      hide_applog( ).
    ENDIF.
  ENDMETHOD.                    &quot;evt_data_changed_internal</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DOUBLE_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" SCONAME="E_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" SCONAME="E_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_double_click.
  ENDMETHOD.                    &quot;evt_double_click</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="HOTSPOT_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" SCONAME="E_ROW_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" SCONAME="E_COLUMN_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_hotspot_click.
  ENDMETHOD.                    &quot;evt_hotspot_click</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_MENU_BUTTON" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="MENU_BUTTON" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_MENU_BUTTON" SCONAME="E_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_MENU_BUTTON" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_menu_button.
  ENDMETHOD.                    &quot;evt_menu_button</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONF1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" SCONAME="E_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" SCONAME="ER_EVENT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_onf1.
  ENDMETHOD.                    &quot;evt_onf1</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONF4" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="E_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="E_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="ER_EVENT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="ET_BAD_CELLS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="E_DISPLAY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_onf4.
  ENDMETHOD.                    &quot;evt_onf4</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="SUBTOTAL_TEXT" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" SCONAME="ES_SUBTOTTXT_INFO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" SCONAME="EP_SUBTOT_LINE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" SCONAME="E_EVENT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_subtotal_text.
  ENDMETHOD.                    &quot;evt_subtotal_text</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="TOOLBAR" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR" SCONAME="E_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR" SCONAME="E_INTERACTIVE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_toolbar.

  ENDMETHOD.                    &quot;evt_toolbar</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="TOOLBAR" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR_INTERNAL" SCONAME="E_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR_INTERNAL" SCONAME="E_INTERACTIVE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_toolbar_internal.
*Begin SMD
    FIELD-SYMBOLS: &lt;toolbar&gt; LIKE LINE OF e_object-&gt;mt_toolbar,
                   &lt;tb&gt; LIKE LINE OF toolbar_added.
    DATA: tabix TYPE sy-tabix.
*End SMD
*Begin SMD
*    loop at toolbar_added assigning field-symbol(&lt;tb&gt;).
    LOOP AT toolbar_added ASSIGNING &lt;tb&gt;.
*End SMD
      INSERT &lt;tb&gt; INTO TABLE e_object-&gt;mt_toolbar[].
    ENDLOOP.
    LOOP AT toolbar_disabled ASSIGNING &lt;tb&gt;.
*Begin SMD
*      try.
*          e_object-&gt;mt_toolbar[ function = &lt;tb&gt;-function ]-disabled = abap_true.
*        catch cx_sy_itab_line_not_found.
*
*      endtry.
      LOOP AT e_object-&gt;mt_toolbar ASSIGNING &lt;toolbar&gt; WHERE function = &lt;tb&gt;-function.
        &lt;toolbar&gt;-disabled = abap_true.
      ENDLOOP.
*End SMD
    ENDLOOP.
    LOOP AT toolbar_deleted ASSIGNING &lt;tb&gt;.
*Begin SMD
*      data(tabix) = sy-tabix.
      tabix = sy-tabix.
*End SMD
      DELETE e_object-&gt;mt_toolbar WHERE function = &lt;tb&gt;-function.
      IF sy-subrc NE 0.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.                    &quot;evt_toolbar_internal</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_user_command.

  ENDMETHOD.                    &quot;evt_user_command</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND_INTERNAL" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_user_command_internal.
    CASE e_ucomm.
      WHEN fc_back.
        LEAVE TO SCREEN 0.
      WHEN fc_exit.
        LEAVE TO SCREEN 0.
      WHEN fc_up.
        LEAVE TO SCREEN 0.
      WHEN fc_cancel.
        LEAVE TO SCREEN 0.
      WHEN fc_mass_replace.
        mass_replace( ).
    ENDCASE.
  ENDMETHOD.                    &quot;evt_user_command_internal</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EXCLUDE_FUNCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EXCLUDE_FUNCTION" SCONAME="IV_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UCOMM"/>
   <source>METHOD exclude_function.
*Begin SMD
    FIELD-SYMBOLS: &lt;exclude_functions&gt; LIKE LINE OF exclude_functions.
*    if not line_exists( exclude_functions[ table_line = iv_ucomm ] ).
    READ TABLE exclude_functions ASSIGNING &lt;exclude_functions&gt; WITH KEY table_line = iv_ucomm.
    IF sy-subrc NE 0.
*End SMD
      INSERT iv_ucomm INTO TABLE exclude_functions.
    ENDIF.
  ENDMETHOD.                    &quot;exclude_function</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="HIDE_APPLOG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD hide_applog.
    IF split_container IS NOT INITIAL.
      split_container-&gt;set_row_sash(
        EXPORTING
          id                =  1   &quot; Row Splitter Bar ID
          type              =  split_container-&gt;type_sashvisible   &quot; Attribute
          value             =  0   &quot; Value
        EXCEPTIONS
          cntl_error        = 1
          cntl_system_error = 2
          OTHERS            = 3
      ).
      IF sy-subrc &lt;&gt; 0.
      ENDIF.
      split_container-&gt;set_row_height(
        EXPORTING
          id                =   2 &quot; Row ID
          height            =   0  &quot; Height
        EXCEPTIONS
          cntl_error        = 1
          cntl_system_error = 2
          OTHERS            = 3
      ).
      IF sy-subrc &lt;&gt; 0.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;hide_applog</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="LVC_FCAT_FROM_ITAB" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="LVC_FCAT_FROM_ITAB" SCONAME="IT_TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="LVC_FCAT_FROM_ITAB" SCONAME="RT_FCAT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_T_FCAT"/>
   <source>METHOD lvc_fcat_from_itab.
    DATA: table TYPE REF TO data.
*Begin SMD
    FIELD-SYMBOLS: &lt;table&gt; TYPE STANDARD TABLE.
*End SMD
    CREATE DATA table LIKE it_table.
*Begin SMD
*    assign table-&gt;* to field-symbol(&lt;table&gt;).
    ASSIGN table-&gt;* TO &lt;table&gt;.

    DATA: salv_table TYPE REF TO cl_salv_table.
*End SMD
    TRY.
        cl_salv_table=&gt;factory( IMPORTING
*Begin SMD
*                                r_salv_table   = data(salv_table)
                                  r_salv_table   = salv_table
*End SMD
                                CHANGING
                                  t_table        = &lt;table&gt;  ).
        rt_fcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(
            r_columns      = salv_table-&gt;get_columns( ) &quot; ALV Filter
            r_aggregations = salv_table-&gt;get_aggregations( ) &quot; ALV Aggregations
    ).
      CATCH cx_root.
    ENDTRY.
  ENDMETHOD.                    &quot;lvc_fcat_from_itab</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="MASS_REPLACE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD mass_replace.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
      DATA: lo_grid TYPE REF TO cl_gui_alv_grid.
      lo_grid ?= me.
*End SMD
      CALL FUNCTION &apos;Z_FALV_MASS_REPLACE&apos;
        EXPORTING
*Begin SMD
*          io_grid   = cast cl_gui_alv_grid( me )
          io_grid   = lo_grid
*End SMD
        CHANGING
          ct_outtab = &lt;outtab&gt;.

    ENDIF.
  ENDMETHOD.                    &quot;mass_replace</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="PAI" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="PAI" SCONAME="IV_DYNNR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-DYNNR" PARVALUE="SY-DYNNR"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="PAI" SCONAME="C_UCOMM" VERSION="1" LANGU="E" DESCRIPT="ABAP System Field: PAI-Triggering Function Code" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-UCOMM" PARVALUE="SY-UCOMM"/>
   <source>METHOD pai.
    RAISE EVENT user_command EXPORTING e_ucomm = c_ucomm.

    me-&gt;set_function_code(
       CHANGING
         c_ucomm = c_ucomm ).
  ENDMETHOD.                    &quot;pai</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="PBO" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="PBO" SCONAME="IV_DYNNR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-DYNNR" PARVALUE="SY-DYNNR"/>
   <source>METHOD pbo.

    gui_status-&gt;show_gui_status( ).
    RAISE EVENT at_set_pf_status .

    gui_status-&gt;show_title(
      EXPORTING
        iv_text1 = title_v1
        iv_text2 = title_v2
        iv_text3 = title_v3
        iv_text4 = title_v4
        iv_text5 = title_v5
    ).
    RAISE EVENT at_set_title.

  ENDMETHOD.                    &quot;pbo</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="REFRESH_TOOLBAR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD refresh_toolbar.
    TRY.
        me-&gt;set_toolbar_interactive(  ).
      CATCH cx_root.
        &quot;in case method is called before the display of grid
        &quot;no need to do anything with that
    ENDTRY.
  ENDMETHOD.                    &quot;refresh_toolbar</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_BUTTON" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_BUTTON" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>METHOD set_cell_button.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE,
                   &lt;styles&gt; TYPE lvc_t_styl.
*Begin SMD
    FIELD-SYMBOLS: &lt;row&gt; TYPE any,
                   &lt;fs_style&gt; LIKE LINE OF &lt;styles&gt;.
    DATA: ls_style LIKE LINE OF &lt;styles&gt;.
*End SMD
    get_frontend_layout( IMPORTING es_layout =  lvc_layout ).
    CHECK lvc_layout-stylefname IS NOT INITIAL.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
*      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      READ TABLE &lt;outtab&gt; ASSIGNING &lt;row&gt; INDEX iv_row.
*End SMD
      IF sy-subrc EQ 0.
        ASSIGN COMPONENT lvc_layout-stylefname OF STRUCTURE &lt;row&gt; TO &lt;styles&gt;.
        IF sy-subrc EQ 0.
*Begin SMD
*          try.
*              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_button.
*            catch cx_sy_itab_line_not_found.
*              insert value #( fieldname = iv_fieldname style = mc_style_button ) into table &lt;styles&gt;.
*          endtry.
          LOOP AT &lt;styles&gt; ASSIGNING &lt;fs_style&gt; WHERE fieldname = iv_fieldname.
            &lt;fs_style&gt;-style = mc_style_button.
          ENDLOOP.
          IF sy-subrc NE 0.
            CLEAR: ls_style.
            ls_style-fieldname = iv_fieldname.
            ls_style-style = mc_style_button.
            INSERT ls_style INTO TABLE &lt;styles&gt;.
          ENDIF.
*End SMD
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_cell_button</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" SCONAME="IV_COLOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_COLO"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>METHOD set_cell_color.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE,
                   &lt;colors&gt; TYPE lvc_t_scol.
*Begin SMD
    FIELD-SYMBOLS: &lt;row&gt; TYPE any,
                   &lt;fs_color&gt; LIKE LINE OF &lt;colors&gt;.
    DATA: ls_color LIKE LINE OF &lt;colors&gt;.
*End SMD
    get_frontend_layout( IMPORTING es_layout =  lvc_layout ).
    CHECK lvc_layout-ctab_fname IS NOT INITIAL.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
*      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      READ TABLE &lt;outtab&gt; ASSIGNING &lt;row&gt; INDEX iv_row.
*End SMD
      IF sy-subrc EQ 0.
        ASSIGN COMPONENT lvc_layout-ctab_fname OF STRUCTURE &lt;row&gt; TO &lt;colors&gt;.
        IF sy-subrc EQ 0.
*Begin SMD
*          try.
*              &lt;colors&gt;[ fname = iv_fieldname ]-color = iv_color.
*            catch cx_sy_itab_line_not_found.
*              insert value #( fname = iv_fieldname color = iv_color ) into table &lt;colors&gt;.
*          endtry.
          LOOP AT &lt;colors&gt; ASSIGNING &lt;fs_color&gt; WHERE fname = iv_fieldname.
            &lt;fs_color&gt;-color = iv_color.
          ENDLOOP.
          IF sy-subrc NE 0.
            CLEAR: ls_color.
            ls_color-fname = iv_fieldname.
            ls_color-color = iv_color.
            INSERT ls_color INTO TABLE &lt;colors&gt;.
          ENDIF.
*End SMD
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_cell_color</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_DISABLED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_DISABLED" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_DISABLED" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>METHOD set_cell_disabled.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE,
                   &lt;styles&gt; TYPE lvc_t_styl.
*Begin SMD
    FIELD-SYMBOLS: &lt;row&gt; TYPE any,
                   &lt;fs_style&gt; LIKE LINE OF &lt;styles&gt;.
    DATA: ls_style LIKE LINE OF &lt;styles&gt;.
*End SMD
    get_frontend_layout( IMPORTING es_layout =  lvc_layout ).
    CHECK lvc_layout-stylefname IS NOT INITIAL.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
*    ASSIGN &lt;outtab&gt;[ iv_row ] TO field-symbol(&lt;row&gt;).
      READ TABLE &lt;outtab&gt; ASSIGNING &lt;row&gt; INDEX iv_row.
*End SMD
      IF sy-subrc EQ 0.
        ASSIGN COMPONENT lvc_layout-stylefname OF STRUCTURE &lt;row&gt; TO &lt;styles&gt;.
        IF sy-subrc EQ 0.
*Begin SMD
*          try.
*              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_disabled.
*            catch cx_sy_itab_line_not_found.
*              insert value #( fieldname = iv_fieldname style = mc_style_disabled ) into table &lt;styles&gt;.
*          endtry.
          LOOP AT &lt;styles&gt; ASSIGNING &lt;fs_style&gt; WHERE fieldname = iv_fieldname.
            &lt;fs_style&gt;-style = mc_style_disabled.
          ENDLOOP.
          IF sy-subrc NE 0.
            CLEAR: ls_style.
            ls_style-fieldname = iv_fieldname.
            ls_style-style = mc_style_disabled.
            INSERT ls_style INTO TABLE &lt;styles&gt;.
          ENDIF.
*End SMD
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_cell_disabled</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_ENABLED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_ENABLED" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_ENABLED" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>METHOD set_cell_enabled.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE,
                   &lt;styles&gt; TYPE lvc_t_styl.
*Begin SMD
    FIELD-SYMBOLS: &lt;row&gt; TYPE any,
                   &lt;fs_style&gt; LIKE LINE OF &lt;styles&gt;.
    DATA: ls_style LIKE LINE OF &lt;styles&gt;.
*End SMD
    get_frontend_layout( IMPORTING es_layout =  lvc_layout ).
    CHECK lvc_layout-stylefname IS NOT INITIAL.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
*      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      READ TABLE &lt;outtab&gt; ASSIGNING &lt;row&gt; INDEX iv_row.
*End SMD
      IF sy-subrc EQ 0.
        ASSIGN COMPONENT lvc_layout-stylefname OF STRUCTURE &lt;row&gt; TO &lt;styles&gt;.
        IF sy-subrc EQ 0.
*Begin SMD
*          try.
*              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_enabled.
*            catch cx_sy_itab_line_not_found.
*              insert value #( fieldname = iv_fieldname style = mc_style_enabled ) into table &lt;styles&gt;.
*          endtry.
          LOOP AT &lt;styles&gt; ASSIGNING &lt;fs_style&gt; WHERE fieldname = iv_fieldname.
            &lt;fs_style&gt;-style = mc_style_enabled.
          ENDLOOP.
          IF sy-subrc NE 0.
            CLEAR: ls_style.
            ls_style-fieldname = iv_fieldname.
            ls_style-style = mc_style_enabled.
            INSERT ls_style INTO TABLE &lt;styles&gt;.
          ENDIF.
*End SMD
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_cell_enabled</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_HOTSPOT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_HOTSPOT" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_HOTSPOT" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>METHOD set_cell_hotspot.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE,
                   &lt;styles&gt; TYPE lvc_t_styl.
*Begin SMD
    FIELD-SYMBOLS: &lt;row&gt; TYPE any,
                   &lt;fs_style&gt; LIKE LINE OF &lt;styles&gt;.
    DATA: ls_style LIKE LINE OF &lt;styles&gt;.
*End SMD
    get_frontend_layout( IMPORTING es_layout =  lvc_layout ).
    CHECK lvc_layout-stylefname IS NOT INITIAL.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
*      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      READ TABLE &lt;outtab&gt; ASSIGNING &lt;row&gt; INDEX iv_row.
*End SMD
      IF sy-subrc EQ 0.
        ASSIGN COMPONENT lvc_layout-stylefname OF STRUCTURE &lt;row&gt; TO &lt;styles&gt;.
        IF sy-subrc EQ 0.
*Begin SMD
*          try.
*              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_hotspot.
*            catch cx_sy_itab_line_not_found.
*              insert value #( fieldname = iv_fieldname style = mc_style_hotspot ) into table &lt;styles&gt;.
*          endtry.
          LOOP AT &lt;styles&gt; ASSIGNING &lt;fs_style&gt; WHERE fieldname = iv_fieldname.
            &lt;fs_style&gt;-style = mc_style_hotspot.
          ENDLOOP.
          IF sy-subrc NE 0.
            CLEAR: ls_style.
            ls_style-fieldname = iv_fieldname.
            ls_style-style = mc_style_hotspot.
            INSERT ls_style INTO TABLE &lt;styles&gt;.
          ENDIF.
*End SMD
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_cell_hotspot</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_EDITABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_EDITABLE" SCONAME="IV_MODIFY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <source>METHOD set_editable.
    me-&gt;set_ready_for_input( i_ready_for_input = 1 ).
    IF iv_modify EQ abap_true.
      me-&gt;register_edit_event(
        EXPORTING
          i_event_id =  me-&gt;mc_evt_modified
        EXCEPTIONS
          error      = 1
          OTHERS     = 2
      ).
      IF sy-subrc &lt;&gt; 0.
*        message id sy-msgid type sy-msgty number sy-msgno
*                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
    ELSE.
      me-&gt;register_edit_event(
        EXPORTING
          i_event_id =  me-&gt;mc_evt_enter
        EXCEPTIONS
          error      = 1
          OTHERS     = 2
      ).
      IF sy-subrc &lt;&gt; 0.
*        message id sy-msgid type sy-msgty number sy-msgno
*                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_editable</source>
  </method>
  <method CLSNAME="CL_GUI_ALV_GRID" CMPNAME="SET_FRONTEND_FIELDCATALOG" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD set_frontend_fieldcatalog.
    fcat = it_fieldcatalog.
    super-&gt;set_frontend_fieldcatalog( fcat ).
  ENDMETHOD.                    &quot;set_frontend_fieldcatalog</source>
  </method>
  <method CLSNAME="CL_GUI_ALV_GRID" CMPNAME="SET_FRONTEND_LAYOUT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD set_frontend_layout.
    lvc_layout = is_layout.
    super-&gt;set_frontend_layout( is_layout ).
  ENDMETHOD.                    &quot;set_frontend_layout</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_MARK_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_MARK_FIELD" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_FCAT-FIELDNAME"/>
   <source>METHOD set_mark_field.
*Begin SMD
    FIELD-SYMBOLS: &lt;fcat&gt; LIKE LINE OF fcat.
*    if line_exists( fcat[ fieldname = iv_fieldname ] ).
    READ TABLE fcat ASSIGNING &lt;fcat&gt; WITH KEY fieldname = iv_fieldname.
    IF sy-subrc EQ 0.
*End SMD
      layout-&gt;mark_field = iv_fieldname.
      CHECK iv_fieldname IS NOT INITIAL.
      column( iv_fieldname )-&gt;set_checkbox( abap_true ).
    ENDIF.
  ENDMETHOD.                    &quot;set_mark_field</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_OUTPUT_TABLE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_OUTPUT_TABLE" SCONAME="CT_TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <source>METHOD set_output_table.
    GET REFERENCE OF ct_table INTO outtab.
  ENDMETHOD.                    &quot;set_output_table</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_PARENT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_PARENT" SCONAME="IO_PARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <source>METHOD set_parent.
    me-&gt;parent ?= io_parent.
  ENDMETHOD.                    &quot;set_parent</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_READONLY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD set_readonly.
    me-&gt;set_ready_for_input( i_ready_for_input = 1 ).
  ENDMETHOD.                    &quot;set_readonly</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_ROW_COLOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_ROW_COLOR" SCONAME="IV_COLOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR04"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_ROW_COLOR" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>METHOD set_row_color.
    FIELD-SYMBOLS: &lt;outtab&gt; TYPE STANDARD TABLE,
                   &lt;color&gt;  TYPE char04.
*Begin SMD
    FIELD-SYMBOLS: &lt;row&gt; TYPE any.
*End SMD
    get_frontend_layout( IMPORTING es_layout =  lvc_layout ).
    CHECK lvc_layout-info_fname IS NOT INITIAL.
    ASSIGN outtab-&gt;* TO &lt;outtab&gt;.
    IF sy-subrc EQ 0.
*Begin SMD
*      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      READ TABLE &lt;outtab&gt; ASSIGNING &lt;row&gt; INDEX iv_row.
*End SMD
      IF sy-subrc EQ 0.
        ASSIGN COMPONENT lvc_layout-info_fname OF STRUCTURE &lt;row&gt; TO &lt;color&gt;.
        IF sy-subrc EQ 0.
          &lt;color&gt; = iv_color.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;set_row_color</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SHOW_APPLOG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD show_applog.
    IF split_container IS NOT INITIAL.
      split_container-&gt;set_row_sash(
        EXPORTING
          id                =  1   &quot; Row Splitter Bar ID
          type              =  split_container-&gt;type_sashvisible   &quot; Attribute
          value             =  1   &quot; Value
        EXCEPTIONS
          cntl_error        = 1
          cntl_system_error = 2
          OTHERS            = 3
      ).
      IF sy-subrc &lt;&gt; 0.
      ENDIF.
      split_container-&gt;get_row_height(
        EXPORTING
          id                =  2   &quot; Row ID
        IMPORTING
          result            =  height   &quot; Result Code
        EXCEPTIONS
          cntl_error        = 1
          cntl_system_error = 2
          OTHERS            = 3
      ).
      IF sy-subrc EQ 0 AND height EQ 0.
        split_container-&gt;set_row_height(
          EXPORTING
            id                =   2 &quot; Row ID
            height            =   15  &quot; Height
          IMPORTING
            result           = result
          EXCEPTIONS
            cntl_error        = 1
            cntl_system_error = 2
            OTHERS            = 3
        ).
        IF sy-subrc &lt;&gt; 0.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    &quot;show_applog</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SOFT_REFRESH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD soft_refresh.
*Begin SMD
    DATA: ls_stable TYPE lvc_s_stbl.
    CLEAR: ls_stable.
    ls_stable-row = &apos;X&apos;.
    ls_stable-col = &apos;X&apos;.
*End SMD
    me-&gt;refresh_table_display(
      EXPORTING
*Begin SMD
*        is_stable      =     conv #(&apos;XX&apos;) &quot; With Stable Rows/Columns
        is_stable      =     ls_stable &quot; With Stable Rows/Columns
*End SMD
        i_soft_refresh =     abap_true&quot; Without Sort, Filter, etc.
      EXCEPTIONS
        finished       = 1
        OTHERS         = 2
    ).
    IF sy-subrc &lt;&gt; 0.
*     message id sy-msgid type sy-msgty number sy-msgno
*                with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ENDMETHOD.                    &quot;soft_refresh</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_FALV_COLUMN" VERSION="1" LANGU="E" DESCRIPT="FALV column" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_FALV_COLUMN" CMPNAME="FALV" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_FALV" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_COLUMN" CMPNAME="FIELDNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_S_FCAT-FIELDNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="CHANGE_SETTING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="CHANGE_SETTING" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="CHANGE_SETTING" SCONAME="IV_SETTING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD change_setting.
  falv-&gt;get_frontend_fieldcatalog( IMPORTING et_fieldcatalog = falv-&gt;fcat ).
*Begin SMD
*    assign falv-&gt;fcat[ fieldname = fieldname ] to field-symbol(&lt;fcat&gt;).
  FIELD-SYMBOLS: &lt;fcat&gt; LIKE LINE OF falv-&gt;fcat.
  READ TABLE falv-&gt;fcat ASSIGNING &lt;fcat&gt; WITH KEY fieldname = fieldname.
*End SMD
  IF sy-subrc EQ 0.
*Begin SMD
*    data(fcat_field) = |&lt;fcat&gt;-{ iv_setting }|.
*    ASSIGN (fcat_field) TO field-symbol(&lt;field&gt;).
    DATA: fcat_field TYPE string.
    FIELD-SYMBOLS: &lt;field&gt; TYPE any.
    fcat_field = |&lt;fcat&gt;-{ iv_setting }|.
    ASSIGN (fcat_field) TO &lt;field&gt;.
*End SMD
    IF sy-subrc EQ 0.
      &lt;field&gt; = iv_value.
    ENDIF.
    falv-&gt;set_frontend_fieldcatalog( it_fieldcatalog = falv-&gt;fcat ).
  ENDIF.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="T" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="CONSTRUCTOR" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_FCAT-FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="CONSTRUCTOR" SCONAME="IO_FALV" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_FALV"/>
   <source>method constructor.
    fieldname = iv_fieldname.
    falv = io_falv.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_AUTO_VALUE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="51 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_AUTO_VALUE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_AUTO"/>
   <source>method set_auto_value.
    change_setting( iv_value = iv_value iv_setting = &apos;AUTO_VALUE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CFIELDNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CFIELDNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CFNAME"/>
   <source>method set_cfieldname.
    change_setting( iv_value = iv_value iv_setting = &apos;CFIELDNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CHECKBOX" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CHECKBOX" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CHECKB"/>
   <source>method set_checkbox.
    change_setting( iv_value = iv_value iv_setting = &apos;CHECKBOX&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CHECKTABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="52 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CHECKTABLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TABNAME"/>
   <source>method set_checktable.
    change_setting( iv_value = iv_value iv_setting = &apos;CHECKTABLE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COLDDICTXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="90 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COLDDICTXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DDICT"/>
   <source>method set_colddictxt.
    change_setting( iv_value = iv_value iv_setting = &apos;COLDDICTXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COLOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="27 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COLOR" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EMPHSZ"/>
   <source>method set_color.
    set_emphasize( iv_value = iv_value ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COLTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="86 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COLTEXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TXTCOL"/>
   <source>method set_coltext.
    change_setting( iv_value = iv_value iv_setting = &apos;COLTEXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COL_ID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="49 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COL_ID" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_COLID"/>
   <source>method set_col_id.
    change_setting( iv_value = iv_value iv_setting = &apos;COL_ID&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COL_OPT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="64 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COL_OPT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_COLOPT"/>
   <source>method set_col_opt.
    change_setting( iv_value = iv_value iv_setting = &apos;COL_OPT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COL_POS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_COL_POS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_COLPOS"/>
   <source>method set_col_pos.
    change_setting( iv_value = iv_value iv_setting = &apos;COL_POS&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CONVEXIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="34 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CONVEXIT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CONVEXIT"/>
   <source>method set_convexit.
    change_setting( iv_value = iv_value iv_setting = &apos;CONVEXIT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CURRENCY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_CURRENCY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CURR"/>
   <source>method set_currency.
    change_setting( iv_value = iv_value iv_setting = &apos;CURRENCY&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DATATYPE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="38 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DATATYPE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="DATATYPE_D"/>
   <source>method set_datatype.
    change_setting( iv_value = iv_value iv_setting = &apos;DATATYPE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DD_OUTLEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="84 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DD_OUTLEN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DDLEN"/>
   <source>method set_dd_outlen.
    change_setting( iv_value = iv_value iv_setting = &apos;DD_OUTLEN&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DD_ROLL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="100 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DD_ROLL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ROLLNAME"/>
   <source>method set_dd_roll.
    change_setting( iv_value = iv_value iv_setting = &apos;DD_ROLL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECFLOAT_STYLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="67 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECFLOAT_STYLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="OUTPUTSTYLE"/>
   <source>method set_decfloat_style.
    change_setting( iv_value = iv_value iv_setting = &apos;DECFLOAT_STYLE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECIMALS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="85 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECIMALS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="DECIMALS"/>
   <source>method set_decimals.
    change_setting( iv_value = iv_value iv_setting = &apos;DECIMALS&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECIMALS_O" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="82 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECIMALS_O" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DECMLS"/>
   <source>method set_decimals_o.
    change_setting( iv_value = iv_value iv_setting = &apos;DECIMALS_O&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECMLFIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="83 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DECMLFIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DFNAME"/>
   <source>method set_decmlfield.
    change_setting( iv_value = iv_value iv_setting = &apos;DECMLFIELD&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DFIELDNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="48 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DFIELDNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVCDBGFN"/>
   <source>method set_dfieldname.
    change_setting( iv_value = iv_value iv_setting = &apos;DFIELDNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DOMNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="45 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DOMNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="DOMNAME"/>
   <source>method set_domname.
    change_setting( iv_value = iv_value iv_setting = &apos;DOMNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DO_SUM" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="29 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DO_SUM" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DOSUM"/>
   <source>method set_do_sum.
    change_setting( iv_value = iv_value iv_setting = &apos;DO_SUM&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRAGDROPID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="101 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRAGDROPID" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DDID"/>
   <source>method set_dragdropid.
    change_setting( iv_value = iv_value iv_setting = &apos;DRAGDROPID&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRDN_ALIAS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="66 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRDN_ALIAS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_drdn_alias.
    change_setting( iv_value = iv_value iv_setting = &apos;DRDN_ALIAS&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRDN_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="61 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRDN_FIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_drdn_field.
    change_setting( iv_value = iv_value iv_setting = &apos;DRDN_FIELD&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRDN_HNDL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="60 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_DRDN_HNDL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_drdn_hndl.
    change_setting( iv_value = iv_value iv_setting = &apos;DRDN_HNDL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EDIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="93 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EDIT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EDIT"/>
   <source>method set_edit.
    change_setting( iv_value = iv_value iv_setting = &apos;EDIT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EDITABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method set_editable.
    change_setting( iv_value = abap_true iv_setting = &apos;EDIT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EDIT_MASK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="25 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EDIT_MASK" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EDTMSK"/>
   <source>method set_edit_mask.
    change_setting( iv_value = iv_value iv_setting = &apos;EDIT_MASK&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EMPHASIZE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="26 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EMPHASIZE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EMPHSZ"/>
   <source>method set_emphasize.
    change_setting( iv_value = iv_value iv_setting = &apos;EMPHASIZE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EXPONENT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_EXPONENT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EXPONT"/>
   <source>method set_exponent.
    change_setting( iv_value = iv_value iv_setting = &apos;EXPONENT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_F4AVAILABL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="50 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_F4AVAILABL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="DDF4AVAIL"/>
   <source>method set_f4availabl.
    change_setting( iv_value = iv_value iv_setting = &apos;F4AVAILABL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_FIELDNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_FIELDNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_fieldname.
    change_setting( iv_value = iv_value iv_setting = &apos;FIELDNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_FIX_COLUMN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="28 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_FIX_COLUMN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FIXCOL"/>
   <source>method set_fix_column.
    change_setting( iv_value = iv_value iv_setting = &apos;FIX_COLUMN&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_GET_STYLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="109 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_GET_STYLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_get_style.
    change_setting( iv_value = iv_value iv_setting = &apos;GET_STYLE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HIER_CPOS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="97 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HIER_CPOS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVCHCOLPOS"/>
   <source>method set_hier_cpos.
    change_setting( iv_value = iv_value iv_setting = &apos;HIER_CPOS&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HIER_LEVEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="43 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HIER_LEVEL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_HIERL"/>
   <source>method set_hier_level.
    change_setting( iv_value = iv_value iv_setting = &apos;HIER_LEVEL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HOTSPOT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="47 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HOTSPOT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_HOTSPT"/>
   <source>method set_hotspot.
    change_setting( iv_value = iv_value iv_setting = &apos;HOTSPOT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HREF_HNDL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="55 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_HREF_HNDL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_href_hndl.
    change_setting( iv_value = iv_value iv_setting = &apos;HREF_HNDL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_H_COL_KEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="98 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_H_COL_KEY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TV_ITMNAME"/>
   <source>method set_h_col_key.
    change_setting( iv_value = iv_value iv_setting = &apos;H_COL_KEY&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_H_FTYPE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="63 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_H_FTYPE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FTYPE"/>
   <source>method set_h_ftype.
    change_setting( iv_value = iv_value iv_setting = &apos;H_FTYPE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_H_SELECT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="99 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_H_SELECT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_SELECT"/>
   <source>method set_h_select.
    change_setting( iv_value = iv_value iv_setting = &apos;H_SELECT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ICON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ICON" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_ICON"/>
   <source>method set_icon.
    change_setting( iv_value = iv_value iv_setting = &apos;ICON&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_IFIELDNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_IFIELDNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_ifieldname.
    change_setting( iv_value = iv_value iv_setting = &apos;IFIELDNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_CFIEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="104 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_CFIEL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_indx_cfiel.
    change_setting( iv_value = iv_value iv_setting = &apos;INDX_CFIEL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_DECML" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="108 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_DECML" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_indx_decml.
    change_setting( iv_value = iv_value iv_setting = &apos;INDX_DECML&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="103 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_FIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_indx_field.
    change_setting( iv_value = iv_value iv_setting = &apos;INDX_FIELD&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_IFIEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="106 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_IFIEL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_indx_ifiel.
    change_setting( iv_value = iv_value iv_setting = &apos;INDX_IFIEL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_QFIEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="105 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_QFIEL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_indx_qfiel.
    change_setting( iv_value = iv_value iv_setting = &apos;INDX_QFIEL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_ROUND" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="107 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INDX_ROUND" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_indx_round.
    change_setting( iv_value = iv_value iv_setting = &apos;INDX_ROUND&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INTLEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="40 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INTLEN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INTLEN"/>
   <source>method set_intlen.
    change_setting( iv_value = iv_value iv_setting = &apos;INTLEN&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INTTYPE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="39 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_INTTYPE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INTTYPE"/>
   <source>method set_inttype.
    change_setting( iv_value = iv_value iv_setting = &apos;INTTYPE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_JUST" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_JUST" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_JUST"/>
   <source>method set_just.
    change_setting( iv_value = iv_value iv_setting = &apos;JUST&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_KEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_KEY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_KEY"/>
   <source>method set_key.
    change_setting( iv_value = iv_value iv_setting = &apos;KEY&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_KEY_SEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_KEY_SEL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_KEYSEL"/>
   <source>method set_key_sel.
    change_setting( iv_value = iv_value iv_setting = &apos;KEY_SEL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_LOWERCASE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="41 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_LOWERCASE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LOWERCASE"/>
   <source>method set_lowercase.
    change_setting( iv_value = iv_value iv_setting = &apos;LOWERCASE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_LZERO" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_LZERO" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_LZERO"/>
   <source>method set_lzero.
    change_setting( iv_value = iv_value iv_setting = &apos;LZERO&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_MAC" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="102 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_MAC" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_mac.
    change_setting( iv_value = iv_value iv_setting = &apos;MAC&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_MARK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="110 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_MARK" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_mark.
    change_setting( iv_value = iv_value iv_setting = &apos;MARK&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_CONVEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_CONVEXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOCONV"/>
   <source>method set_no_convext.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_CONVEXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_INIT_CH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="65 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_INIT_CH" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_init_ch.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_INIT_CH&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_MERGING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="62 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_MERGING" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_merging.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_MERGING&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_OUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="31 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_OUT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOOUT"/>
   <source>method set_no_out.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_OUT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_SIGN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_SIGN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOSIGN"/>
   <source>method set_no_sign.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_SIGN&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_SUM" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="30 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_SUM" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOSUM"/>
   <source>method set_no_sum.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_SUM&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_ZERO" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_NO_ZERO" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOZERO"/>
   <source>method set_no_zero.
    change_setting( iv_value = iv_value iv_setting = &apos;NO_ZERO&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_OUTPUTLEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="33 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_OUTPUTLEN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_OUTLEN"/>
   <source>method set_outputlen.
    change_setting( iv_value = iv_value iv_setting = &apos;OUTPUTLEN&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER0" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="68 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER0" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR30"/>
   <source>method set_parameter0.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER0&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="69 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER1" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR30"/>
   <source>method set_parameter1.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER1&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER2" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="70 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER2" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR30"/>
   <source>method set_parameter2.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER2&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER3" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="71 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER3" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR30"/>
   <source>method set_parameter3.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER3&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER4" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="72 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER4" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR30"/>
   <source>method set_parameter4.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER4&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER5" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="73 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER5" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_parameter5.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER5&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER6" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="74 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER6" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_parameter6.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER6&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER7" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="75 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER7" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_parameter7.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER7&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER8" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="76 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER8" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_parameter8.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER8&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER9" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="77 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_PARAMETER9" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_parameter9.
    change_setting( iv_value = iv_value iv_setting = &apos;PARAMETER9&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_QFIELDNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_QFIELDNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_QFNAME"/>
   <source>method set_qfieldname.
    change_setting( iv_value = iv_value iv_setting = &apos;QFIELDNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_QUANTITY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_QUANTITY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_QUAN"/>
   <source>method set_quantity.
    change_setting( iv_value = iv_value iv_setting = &apos;QUANTITY&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_READONLY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method set_readonly.
    change_setting( iv_value = abap_false iv_setting = &apos;EDIT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REF_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="78 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REF_FIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_RFNAME"/>
   <source>method set_ref_field.
    change_setting( iv_value = iv_value iv_setting = &apos;REF_FIELD&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REF_TABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="79 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REF_TABLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_RTNAME"/>
   <source>method set_ref_table.
    change_setting( iv_value = iv_value iv_setting = &apos;REF_TABLE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REPREP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="44 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REPREP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CRPRP"/>
   <source>method set_reprep.
    change_setting( iv_value = iv_value iv_setting = &apos;REPREP&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REPTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="42 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_REPTEXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="REPTEXT"/>
   <source>method set_reptext.
    change_setting( iv_value = iv_value iv_setting = &apos;REPTEXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROLLNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="37 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROLLNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_ROLL"/>
   <source>method set_rollname.
    change_setting( iv_value = iv_value iv_setting = &apos;ROLLNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROUND" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROUND" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_ROUND"/>
   <source>method set_round.
    change_setting( iv_value = iv_value iv_setting = &apos;ROUND&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROUNDFIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="81 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROUNDFIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_RNDFN"/>
   <source>method set_roundfield.
    change_setting( iv_value = iv_value iv_setting = &apos;ROUNDFIELD&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROW_POS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_ROW_POS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_ROWPOS"/>
   <source>method set_row_pos.
    change_setting( iv_value = iv_value iv_setting = &apos;ROW_POS&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SCRTEXT_L" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="87 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SCRTEXT_L" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SCRTEXT_L"/>
   <source>method set_scrtext_l.
    change_setting( iv_value = iv_value iv_setting = &apos;SCRTEXT_L&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SCRTEXT_M" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="88 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SCRTEXT_M" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SCRTEXT_M"/>
   <source>method set_scrtext_m.
    change_setting( iv_value = iv_value iv_setting = &apos;SCRTEXT_M&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SCRTEXT_S" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="89 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SCRTEXT_S" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SCRTEXT_S"/>
   <source>method set_scrtext_s.
    change_setting( iv_value = iv_value iv_setting = &apos;SCRTEXT_S&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SELDDICTXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="91 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SELDDICTXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DDICT"/>
   <source>method set_selddictxt.
    change_setting( iv_value = iv_value iv_setting = &apos;SELDDICTXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SELTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="35 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SELTEXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TXT"/>
   <source>method set_seltext.
    change_setting( iv_value = iv_value iv_setting = &apos;SELTEXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SP_GROUP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="46 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SP_GROUP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_SPGRP"/>
   <source>method set_sp_group.
    change_setting( iv_value = iv_value iv_setting = &apos;SP_GROUP&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="56 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_STYLE"/>
   <source>method set_style.
    change_setting( iv_value = iv_value iv_setting = &apos;STYLE&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE2" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="57 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE2" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_STYLE"/>
   <source>method set_style2.
    change_setting( iv_value = iv_value iv_setting = &apos;STYLE2&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE3" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="58 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE3" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_STYLE"/>
   <source>method set_style3.
    change_setting( iv_value = iv_value iv_setting = &apos;STYLE3&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE4" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="59 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_STYLE4" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_STYLE"/>
   <source>method set_style4.
    change_setting( iv_value = iv_value iv_setting = &apos;STYLE4&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SYMBOL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_SYMBOL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_SYMBOL"/>
   <source>method set_symbol.
    change_setting( iv_value = iv_value iv_setting = &apos;SYMBOL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TABNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TABNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TNAME"/>
   <source>method set_tabname.
    change_setting( iv_value = iv_value iv_setting = &apos;TABNAME&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="32 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TECH"/>
   <source>method set_tech.
    change_setting( iv_value = iv_value iv_setting = &apos;TECH&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH_COL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="94 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH_COL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TCOL"/>
   <source>method set_tech_col.
    change_setting( iv_value = iv_value iv_setting = &apos;TECH_COL&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH_COMP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="96 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH_COMP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TCOMP"/>
   <source>method set_tech_comp.
    change_setting( iv_value = iv_value iv_setting = &apos;TECH_COMP&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH_FORM" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="95 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TECH_FORM" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TFORM"/>
   <source>method set_tech_form.
    change_setting( iv_value = iv_value iv_setting = &apos;TECH_FORM&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TIPDDICTXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="92 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TIPDDICTXT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DDICT"/>
   <source>method set_tipddictxt.
    change_setting( iv_value = iv_value iv_setting = &apos;TIPDDICTXT&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TOOLTIP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="36 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TOOLTIP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TIP"/>
   <source>method set_tooltip.
    change_setting( iv_value = iv_value iv_setting = &apos;TOOLTIP&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TXT_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="80 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_TXT_FIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_txt_field.
    change_setting( iv_value = iv_value iv_setting = &apos;TXT_FIELD&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_VALEXI" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="53 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_VALEXI" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="VALEXI"/>
   <source>method set_valexi.
    change_setting( iv_value = iv_value iv_setting = &apos;VALEXI&apos;).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_WEB_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="54 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_COLUMN" CMPNAME="SET_WEB_FIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_web_field.
    change_setting( iv_value = iv_value iv_setting = &apos;WEB_FIELD&apos;).
  endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_FALV_DYNAMIC_STATUS" VERSION="1" LANGU="E" DESCRIPT="FALV Dynamic Status" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="T_BUTTONS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="47 " SRCCOLUMN2="26 " TYPESRC_LENG="0 " TYPESRC="begin of t_buttons,
             f01 type rsfunc_txt,
             f02 type rsfunc_txt,
             f03 type rsfunc_txt,
             f04 type rsfunc_txt,
             f05 type rsfunc_txt,
             f06 type rsfunc_txt,
             f07 type rsfunc_txt,
             f08 type rsfunc_txt,
             f09 type rsfunc_txt,
             f10 type rsfunc_txt,
             f11 type rsfunc_txt,
             f12 type rsfunc_txt,
             f13 type rsfunc_txt,
             f14 type rsfunc_txt,
             f15 type rsfunc_txt,
             f16 type rsfunc_txt,
             f17 type rsfunc_txt,
             f18 type rsfunc_txt,
             f19 type rsfunc_txt,
             f20 type rsfunc_txt,
             f21 type rsfunc_txt,
             f22 type rsfunc_txt,
             f23 type rsfunc_txt,
             f24 type rsfunc_txt,
             f25 type rsfunc_txt,
             f26 type rsfunc_txt,
             f27 type rsfunc_txt,
             f28 type rsfunc_txt,
             f29 type rsfunc_txt,
             f30 type rsfunc_txt,
             f31 type rsfunc_txt,
             f32 type rsfunc_txt,
             f33 type rsfunc_txt,
             f34 type rsfunc_txt,
             f35 type rsfunc_txt,
           end of t_buttons
"/>
  <types CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="T_ALLOWED_BUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="49 " SRCCOLUMN1="4 " SRCROW2="51 " SRCCOLUMN2="30 " TYPESRC_LENG="0 " TYPESRC="begin of t_allowed_but,
             function type sy-ucomm,
           end of t_allowed_but
"/>
  <types CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="TT_EXCLUDED_BUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="53 " SRCCOLUMN1="4 " SRCROW2="53 " SRCCOLUMN2="50 " TYPESRC_LENG="0 " TYPESRC="tt_excluded_but type standard table of sy-ucomm
"/>
  <types CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="TT_ALLOWED_BUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="55 " SRCCOLUMN1="4 " SRCROW2="55 " SRCCOLUMN2="54 " TYPESRC_LENG="0 " TYPESRC="tt_allowed_but type standard table of t_allowed_but
"/>
  <implementing CLSNAME="ZCL_FALV_DYNAMIC_STATUS" REFCLSNAME="IF_OS_CLONE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ALLOWED_BUTTONS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TT_ALLOWED_BUT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="BUTTONS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="38 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="T_BUTTONS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_01" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;F01&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_02" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;F02&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_03" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;F03&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_04" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;F04&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_05" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="&apos;F05&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_06" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="2" ATTVALUE="&apos;F06&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_07" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " ATTDECLTYP="2" ATTVALUE="&apos;F07&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_08" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " ATTDECLTYP="2" ATTVALUE="&apos;F08&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_09" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " ATTDECLTYP="2" ATTVALUE="&apos;F09&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_10" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " ATTDECLTYP="2" ATTVALUE="&apos;F10&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_11" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " ATTDECLTYP="2" ATTVALUE="&apos;F11&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_12" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " ATTDECLTYP="2" ATTVALUE="&apos;F12&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_13" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " ATTDECLTYP="2" ATTVALUE="&apos;F13&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_14" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " ATTDECLTYP="2" ATTVALUE="&apos;F14&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_15" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " ATTDECLTYP="2" ATTVALUE="&apos;F15&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_16" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " ATTDECLTYP="2" ATTVALUE="&apos;F16&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_17" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " ATTDECLTYP="2" ATTVALUE="&apos;F17&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_18" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " ATTDECLTYP="2" ATTVALUE="&apos;F18&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_19" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " ATTDECLTYP="2" ATTVALUE="&apos;F19&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_20" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " ATTDECLTYP="2" ATTVALUE="&apos;F20&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_21" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " ATTDECLTYP="2" ATTVALUE="&apos;F21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_22" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " ATTDECLTYP="2" ATTVALUE="&apos;F22&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_23" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " ATTDECLTYP="2" ATTVALUE="&apos;F23&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_24" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " ATTDECLTYP="2" ATTVALUE="&apos;F24&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_25" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="25 " ATTDECLTYP="2" ATTVALUE="&apos;F25&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_26" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="26 " ATTDECLTYP="2" ATTVALUE="&apos;F26&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_27" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="27 " ATTDECLTYP="2" ATTVALUE="&apos;F27&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_28" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="28 " ATTDECLTYP="2" ATTVALUE="&apos;F28&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_29" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="29 " ATTDECLTYP="2" ATTVALUE="&apos;F29&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_30" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="30 " ATTDECLTYP="2" ATTVALUE="&apos;F30&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_31" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="31 " ATTDECLTYP="2" ATTVALUE="&apos;F31&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_32" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="32 " ATTDECLTYP="2" ATTVALUE="&apos;F32&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_33" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="33 " ATTDECLTYP="2" ATTVALUE="&apos;F33&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_34" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="34 " ATTDECLTYP="2" ATTVALUE="&apos;F34&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="B_35" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="35 " ATTDECLTYP="2" ATTVALUE="&apos;F35&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="EXCLUDED_BUTTONS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="37 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TT_EXCLUDED_BUT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="FULLY_DYNAMIC" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="36 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <interfaceMethod CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CPDNAME="IF_OS_CLONE~CLONE">
   <source>method if_os_clone~clone.
      system-call objmgr clone me to result.
    endmethod.</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="IV_BUTTON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UCOMM"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SMP_DYNTXT-TEXT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="IV_ICON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SMP_DYNTXT-ICON_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="IV_QINFO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SMP_DYNTXT-QUICKINFO" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="IV_ALLOWED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_TRUE"/>
   <exception CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="BUTTON_ALREADY_FILLED" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="BUTTON_DOES_NOT_EXISTS" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_BUTTON" SCONAME="ICON_AND_TEXT_EMPTY" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="3 "/>
   <source>method add_button.
    data button type smp_dyntxt.
    check iv_button is not initial.

    if iv_text is initial and iv_icon is initial.
      raise icon_and_text_empty.
      return.
    endif.

    button-icon_id = iv_icon.
    button-icon_text = iv_text.
    button-text      = iv_text.
    button-quickinfo = iv_qinfo.
*Begin SMD
*    assign component iv_button of structure buttons to field-symbol(&lt;bt&gt;).
    FIELD-SYMBOLS: &lt;bt&gt; type rsfunc_txt.
    assign component iv_button of structure buttons to &lt;bt&gt;.
*End SMD
    if &lt;bt&gt; is assigned.
      if &lt;bt&gt; is initial.
        &lt;bt&gt; = button.
        if iv_allowed eq abap_true.
          show_button( iv_button = iv_button ).
        endif.
      else.
        raise button_already_filled.
      endif.
    else.
      raise button_does_not_exists.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_SEPARATOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="ADD_SEPARATOR" SCONAME="IV_BUTTON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UCOMM"/>
   <source>method add_separator.
    add_button(
      exporting
        iv_button              = iv_button
        iv_text                = |{ cl_abap_char_utilities=&gt;minchar }|
*        iv_icon                = iv_icon
*        iv_qinfo               = iv_qinfo
         iv_allowed             = abap_true
      exceptions
        button_already_filled  = 1
        button_does_not_exists = 2
        icon_and_text_empty    = 3
        others                 = 4
    ).
    if sy-subrc &lt;&gt; 0.
*     message id sy-msgid type sy-msgty number sy-msgno
*                with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
*Begin SMD
*  excluded_buttons = value #( ( b_01 ) ( b_02 ) ( b_03 ) ( b_04 ) ( b_05 ) ( b_06 ) ( b_07 ) ( b_08 ) ( b_09 )
*                              ( b_10 ) ( b_11 ) ( b_12 ) ( b_13 ) ( b_14 ) ( b_15 ) ( b_16 ) ( b_17 ) ( b_18 ) ( b_19 )
*                              ( b_20 ) ( b_21 ) ( b_22 ) ( b_23 ) ( b_24 ) ( b_25 ) ( b_26 ) ( b_27 ) ( b_28 ) ( b_29 )
*                              ( b_30 ) ( b_31 ) ( b_32 ) ( b_33 ) ( b_34 ) ( b_35 )
*                              ( zcl_falv=&gt;mc_fc_data_save ) ( zcl_falv=&gt;fc_find ) ( zcl_falv=&gt;fc_find_next ) ( zcl_falv=&gt;fc_first_page )
*                              ( zcl_falv=&gt;fc_last_page ) ( zcl_falv=&gt;fc_next_page ) ( zcl_falv=&gt;fc_previous_page ) ( zcl_falv=&gt;fc_print ) ).
  DATA: ls_excluded_buttons LIKE LINE OF excluded_buttons.
  REFRESH: excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_01 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_02 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_03 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_04 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_05 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_06 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_07 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_08 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_09 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_10 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_11 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_12 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_13 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_14 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_15 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_16 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_17 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_18 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_19 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_20 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_21 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_22 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_23 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_24 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_25 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_26 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_27 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_28 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_29 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_30 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_31 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_32 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_33 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_34 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( b_35 ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;mc_fc_data_save ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_find ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_find_next ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_first_page ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_last_page ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_next_page ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_previous_page ).
  APPEND ls_excluded_buttons TO excluded_buttons.
  CLEAR: ls_excluded_buttons.
  ls_excluded_buttons = ( zcl_falv=&gt;fc_print ).
  APPEND ls_excluded_buttons TO excluded_buttons.
*End SMD
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="GET_TOOLBAR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="GET_TOOLBAR" SCONAME="E_TOOLBAR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BUTTONS"/>
   <source>method get_toolbar.
    e_toolbar = buttons.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="HIDE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="HIDE_BUTTON" SCONAME="IV_BUTTON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UCOMM"/>
   <source>method hide_button.
    check iv_button is not initial.
*Begin SMD
*    if line_exists( allowed_buttons[ function = iv_button ] ).
    FIELD-SYMBOLS: &lt;allowed_buttons&gt; like LINE OF allowed_buttons.
    READ TABLE allowed_buttons ASSIGNING &lt;allowed_buttons&gt; with key function = iv_button.
    IF sy-subrc eq 0.
*End SMD
      delete allowed_buttons where function = iv_button.
      append iv_button to excluded_buttons.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_BUTTON" SCONAME="IV_BUTTON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UCOMM"/>
   <source>METHOD show_button.
  CHECK iv_button IS NOT INITIAL.
*Begin SMD
*    if not line_exists( allowed_buttons[ function = iv_button ] ).
*      data(allowed) = value t_allowed_but( function = iv_button ).
  FIELD-SYMBOLS: &lt;allowed_buttons&gt; LIKE LINE OF allowed_buttons.
  DATA: allowed type t_allowed_but.
  READ TABLE allowed_buttons ASSIGNING &lt;allowed_buttons&gt; WITH KEY function = iv_button.
  IF sy-subrc NE 0.
    CLEAR: allowed.
    allowed-function = iv_button.
*End SMD
    APPEND allowed TO allowed_buttons.
    DELETE excluded_buttons WHERE table_line EQ iv_button.
  ENDIF.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_GUI_STATUS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method show_gui_status.
   if sy-dynnr eq zcl_falv=&gt;c_screen_full and fully_dynamic eq abap_true.
      set pf-status &apos;DYNAMIC_STATUS&apos; of program zcl_falv=&gt;c_fscr_repid excluding excluded_buttons.
    elseif sy-dynnr eq zcl_falv=&gt;c_screen_full.
      set pf-status &apos;DYNAMIC_STATUS_PART&apos; of program zcl_falv=&gt;c_fscr_repid excluding excluded_buttons.
    else.
      set pf-status &apos;STATUS_0200&apos; of program zcl_falv=&gt;c_fscr_repid excluding excluded_buttons.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_TITLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_TITLE" SCONAME="IV_TEXT1" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_TITLE" SCONAME="IV_TEXT2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_TITLE" SCONAME="IV_TEXT3" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_TITLE" SCONAME="IV_TEXT4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV_DYNAMIC_STATUS" CMPNAME="SHOW_TITLE" SCONAME="IV_TEXT5" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method show_title.
    set titlebar &apos;TITLE&apos; of program zcl_falv=&gt;c_fscr_repid with iv_text1 iv_text2 iv_text3 iv_text4 iv_text5.
  endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_FALV_LAYOUT" VERSION="1" LANGU="E" DESCRIPT="FALV layout" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <friends CLSNAME="ZCL_FALV_LAYOUT" REFCLSNAME="ZCL_FALV" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="FALV" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_FALV" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="MARK_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_FNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="CHANGE_SETTING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="CHANGE_SETTING" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="CHANGE_SETTING" SCONAME="IV_SETTING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method change_setting.
    falv-&gt;get_frontend_layout(  importing  es_layout = falv-&gt;lvc_layout ).
*Begin SMD
*    data(layout_field) = |falv-&gt;lvc_layout-{ iv_setting }|.
*    assign (layout_field) to field-symbol(&lt;field&gt;).
    DATA: layout_field TYPE string.
    FIELD-SYMBOLS: &lt;field&gt; TYPE any.
    layout_field = |falv-&gt;lvc_layout-{ iv_setting }|.
    assign (layout_field) to &lt;field&gt;.
*End SMD
    if sy-subrc eq 0.
      &lt;field&gt; = iv_value.
    endif.
    falv-&gt;set_frontend_layout( is_layout = falv-&gt;lvc_layout  ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="CONSTRUCTOR" SCONAME="IO_FALV" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_FALV"/>
   <source>method constructor.
    falv = io_falv.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_FLAVOUR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="29 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_FLAVOUR" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SALV_BS_BLOB_FLAVOUR"/>
   <source>method set_blob_flavour.  change_setting( iv_value = iv_value iv_setting = &apos;BLOB_FLAVOUR&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_KEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="31 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_KEY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SLIS_BLOB_KEY"/>
   <source>method set_blob_key.  change_setting( iv_value = iv_value iv_setting = &apos;BLOB_KEY&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="30 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_NAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SALV_BS_BLOB_NAME"/>
   <source>method set_blob_name.  change_setting( iv_value = iv_value iv_setting = &apos;BLOB_NAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_SCOPE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="28 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_SCOPE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SALV_BS_BLOB_SCOPE"/>
   <source>method set_blob_scope.  change_setting( iv_value = iv_value iv_setting = &apos;BLOB_SCOPE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_TYPE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="32 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BLOB_TYPE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SLIS_BLOB_TYPE"/>
   <source>method set_blob_type.  change_setting( iv_value = iv_value iv_setting = &apos;BLOB_TYPE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BOX_FNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="38 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_BOX_FNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_box_fname.  change_setting( iv_value = iv_value iv_setting = &apos;BOX_FNAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_COL_OPT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="26 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_COL_OPT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_col_opt.  change_setting( iv_value = iv_value iv_setting = &apos;COL_OPT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_COUNTFNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="25 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_COUNTFNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_countfname.  change_setting( iv_value = iv_value iv_setting = &apos;COUNTFNAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_CTAB_FNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="56 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_CTAB_FNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CTFNM"/>
   <source>method set_ctab_fname.  change_setting( iv_value = iv_value iv_setting = &apos;CTAB_FNAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_CWIDTH_OPT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_CWIDTH_OPT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CWO"/>
   <source>method set_cwidth_opt.  change_setting( iv_value = iv_value iv_setting = &apos;CWIDTH_OPT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_DETAILINIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="48 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_DETAILINIT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DETINI"/>
   <source>method set_detailinit.  change_setting( iv_value = iv_value iv_setting = &apos;DETAILINIT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_DETAILTITL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="49 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_DETAILTITL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_DETTIT"/>
   <source>method set_detailtitl.  change_setting( iv_value = iv_value iv_setting = &apos;DETAILTITL&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_DOC_ID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_DOC_ID" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="BDS_DOCID"/>
   <source>method set_doc_id.  change_setting( iv_value = iv_value iv_setting = &apos;DOC_ID&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EDIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EDIT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EDIT"/>
   <source>method set_edit.  change_setting( iv_value = iv_value iv_setting = &apos;EDIT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EDIT_MODE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EDIT_MODE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EDMO"/>
   <source>method set_edit_mode.  change_setting( iv_value = iv_value iv_setting = &apos;EDIT_MODE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_CONDS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="45 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_CONDS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EXCON"/>
   <source>method set_excp_conds.  change_setting( iv_value = iv_value iv_setting = &apos;EXCP_CONDS&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_FNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="43 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_FNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EXFNM"/>
   <source>method set_excp_fname.  change_setting( iv_value = iv_value iv_setting = &apos;EXCP_FNAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_GROUP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="47 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_GROUP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EXGRP"/>
   <source>method set_excp_group.  change_setting( iv_value = iv_value iv_setting = &apos;EXCP_GROUP&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_LED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="46 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_LED" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EXLED"/>
   <source>method set_excp_led.  change_setting( iv_value = iv_value iv_setting = &apos;EXCP_LED&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_ROLLN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="44 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_EXCP_ROLLN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_EXROL"/>
   <source>method set_excp_rolln.  change_setting( iv_value = iv_value iv_setting = &apos;EXCP_ROLLN&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_FRONTEND" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_FRONTEND" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FRONT"/>
   <source>method set_frontend.  change_setting( iv_value = iv_value iv_setting = &apos;FRONTEND&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_GRAPHICS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_GRAPHICS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="GUID_32"/>
   <source>method set_graphics.  change_setting( iv_value = iv_value iv_setting = &apos;GRAPHICS&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_GRID_TITLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="36 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_GRID_TITLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TITLE"/>
   <source>method set_grid_title.  change_setting( iv_value = iv_value iv_setting = &apos;GRID_TITLE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_INFO_FNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="55 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_INFO_FNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_CIFNM"/>
   <source>method set_info_fname.  change_setting( iv_value = iv_value iv_setting = &apos;INFO_FNAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_KEYHOT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="50 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_KEYHOT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_KEYHOT"/>
   <source>method set_keyhot.  change_setting( iv_value = iv_value iv_setting = &apos;KEYHOT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_LANGUAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_LANGUAGE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LANG"/>
   <source>method set_language.  change_setting( iv_value = iv_value iv_setting = &apos;LANGUAGE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_AUTHOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="51 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_AUTHOR" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOAUTH"/>
   <source>method set_no_author.  change_setting( iv_value = iv_value iv_setting = &apos;NO_AUTHOR&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_COLEXPD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_COLEXPD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_colexpd.  change_setting( iv_value = iv_value iv_setting = &apos;NO_COLEXPD&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_F4" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_F4" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_f4.  change_setting( iv_value = iv_value iv_setting = &apos;NO_F4&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_HEADERS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_HEADERS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_HEADS"/>
   <source>method set_no_headers.  change_setting( iv_value = iv_value iv_setting = &apos;NO_HEADERS&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_HGRIDLN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_HGRIDLN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_HGRID"/>
   <source>method set_no_hgridln.  change_setting( iv_value = iv_value iv_setting = &apos;NO_HGRIDLN&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_KEYFIX" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_KEYFIX" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOKFIX"/>
   <source>method set_no_keyfix.  change_setting( iv_value = iv_value iv_setting = &apos;NO_KEYFIX&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_MERGING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_MERGING" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_MERGE"/>
   <source>method set_no_merging.  change_setting( iv_value = iv_value iv_setting = &apos;NO_MERGING&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_ROWINS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_ROWINS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_rowins.  change_setting( iv_value = iv_value iv_setting = &apos;NO_ROWINS&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_ROWMARK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="34 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_ROWMARK" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_ROWMK"/>
   <source>method set_no_rowmark.  change_setting( iv_value = iv_value iv_setting = &apos;NO_ROWMARK&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_ROWMOVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_ROWMOVE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_rowmove.  change_setting( iv_value = iv_value iv_setting = &apos;NO_ROWMOVE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOOLBAR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="35 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOOLBAR" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TOOLB"/>
   <source>method set_no_toolbar.  change_setting( iv_value = iv_value iv_setting = &apos;NO_TOOLBAR&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOTARR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOTARR" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_totarr.  change_setting( iv_value = iv_value iv_setting = &apos;NO_TOTARR&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOTEXP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOTEXP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_no_totexp.  change_setting( iv_value = iv_value iv_setting = &apos;NO_TOTEXP&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOTLINE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="40 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_TOTLINE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NOTOTL"/>
   <source>method set_no_totline.  change_setting( iv_value = iv_value iv_setting = &apos;NO_TOTLINE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_UTSPLIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="42 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_UTSPLIT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_UNITSP"/>
   <source>method set_no_utsplit.  change_setting( iv_value = iv_value iv_setting = &apos;NO_UTSPLIT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_VGRIDLN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NO_VGRIDLN" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_VGRID"/>
   <source>method set_no_vgridln.  change_setting( iv_value = iv_value iv_setting = &apos;NO_VGRIDLN&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NUMC_TOTAL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="41 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_NUMC_TOTAL" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_NUMCTO"/>
   <source>method set_numc_total.  change_setting( iv_value = iv_value iv_setting = &apos;NUMC_TOTAL&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_OBJECT_KEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_OBJECT_KEY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="BDS_TYPEID"/>
   <source>method set_object_key.  change_setting( iv_value = iv_value iv_setting = &apos;OBJECT_KEY&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_SEL_MODE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="37 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_SEL_MODE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_LIBOX"/>
   <source>method set_sel_mode.  change_setting( iv_value = iv_value iv_setting = &apos;SEL_MODE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_SGL_CLK_HD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="39 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_SGL_CLK_HD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_SGLCLH"/>
   <source>method set_sgl_clk_hd.  change_setting( iv_value = iv_value iv_setting = &apos;SGL_CLK_HD&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_SMALLTITLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_SMALLTITLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TITSZ"/>
   <source>method set_smalltitle.  change_setting( iv_value = iv_value iv_setting = &apos;SMALLTITLE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_STYLEFNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="33 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_STYLEFNAME" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_FNAME"/>
   <source>method set_stylefname.  change_setting( iv_value = iv_value iv_setting = &apos;STYLEFNAME&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_S_DRAGDROP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="54 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_S_DRAGDROP" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_DD01"/>
   <source>method set_s_dragdrop.  change_setting( iv_value = iv_value iv_setting = &apos;S_DRAGDROP&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_TEMPLATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_TEMPLATE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="BDS_FILENA"/>
   <source>method set_template.  change_setting( iv_value = iv_value iv_setting = &apos;TEMPLATE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_TOTALS_BEF" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_TOTALS_BEF" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_TOTBEF"/>
   <source>method set_totals_bef.  change_setting( iv_value = iv_value iv_setting = &apos;TOTALS_BEF&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_VAL_DATA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="27 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_VAL_DATA" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01"/>
   <source>method set_val_data.  change_setting( iv_value = iv_value iv_setting = &apos;VAL_DATA&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBLOOK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="57 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBLOOK" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_LOOK"/>
   <source>method set_weblook.  change_setting( iv_value = iv_value iv_setting = &apos;WEBLOOK&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBROWS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="59 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBROWS" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_WEBROW"/>
   <source>method set_webrows.  change_setting( iv_value = iv_value iv_setting = &apos;WEBROWS&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBSTYLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="58 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBSTYLE" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_STYLE"/>
   <source>method set_webstyle.  change_setting( iv_value = iv_value iv_setting = &apos;WEBSTYLE&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBXHEIGHT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="61 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBXHEIGHT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_webxheight.  change_setting( iv_value = iv_value iv_setting = &apos;WEBXHEIGHT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBXWIDTH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="60 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_WEBXWIDTH" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INT4"/>
   <source>method set_webxwidth.  change_setting( iv_value = iv_value iv_setting = &apos;WEBXWIDTH&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_XIDIRECT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="53 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_XIDIRECT" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method set_xidirect.  change_setting( iv_value = iv_value iv_setting = &apos;XIDIRECT&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_XIFUNCKEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="52 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_XIFUNCKEY" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="AQS_XIKEY"/>
   <source>method set_xifunckey.  change_setting( iv_value = iv_value iv_setting = &apos;XIFUNCKEY&apos;). endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_ZEBRA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV_LAYOUT" CMPNAME="SET_ZEBRA" SCONAME="IV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_ZEBRA"/>
   <source>method set_zebra.  change_setting( iv_value = iv_value iv_setting = &apos;ZEBRA&apos;). endmethod.</source>
  </method>
 </CLAS>
 <FUGR AREA="ZFALV" SPRAS="E" AREAT="Fast ALV Grid">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZFALV" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="001" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool>
    <language SPRAS="E">
     <textElement ID="I" KEY="E01" ENTRY="Grid should be in edit mode in order to use this!" LENGTH="120 "/>
     <textElement ID="I" KEY="E02" ENTRY="No editable fields in the grid" LENGTH="120 "/>
     <textElement ID="I" KEY="E03" ENTRY="Please select editable fields only" LENGTH="120 "/>
     <textElement ID="I" KEY="E04" ENTRY="Please select at least one column!" LENGTH="120 "/>
     <textElement ID="I" KEY="E05" ENTRY="Select max 10 columns!" LENGTH="120 "/>
     <textElement ID="I" KEY="E06" ENTRY="No more free sessions. Close one window." LENGTH="120 "/>
     <textElement ID="I" KEY="S01" ENTRY="Mass replace function" LENGTH="50 "/>
     <textElement ID="I" KEY="S02" ENTRY="with:" LENGTH="20 "/>
     <textElement ID="I" KEY="S03" ENTRY="Fill" LENGTH="20 "/>
    </language>
   </textPool>
   <dynpros>
    <dynpro PROG="SAPLZFALV" DNUM="0100" FNUM="0100" BZMX="200 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="200 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="Full screen">
     <dynprofield FNAM="CC_GRID" DIDX="00C8" FLG1="00" FLG2="30" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="FF" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="0A" ADEZ="0A"/>
     <dynprofield FNAM="OKCODE" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                       00"/>
     <dynproflowsource>process before output.
  module pbo.
*
process after input.
  module pai.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZFALV" DNUM="0200" TYPE="M" FNUM="0200" BZMX="200 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="200 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="Popup screen">
     <dynprofield FNAM="CC_GRID" DIDX="00C8" FLG1="00" FLG2="30" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="FF" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="0A" ADEZ="0A"/>
     <dynprofield FNAM="OKCODE" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                       00"/>
     <dynproflowsource>process before output.
  module pbo.
*
process after input.
  module pai.</dynproflowsource>
    </dynpro>
   </dynpros>
   <pfstatus>
    <pfstatus_sta CODE="DYNAMIC_STATUS" MODAL="D" ACTCODE="000002" PFKCODE="000003" BUTCODE="0001" INT_NOTE="Dynamic status"/>
    <pfstatus_sta CODE="DYNAMIC_STATUS_PART" MODAL="D" ACTCODE="000004" PFKCODE="000005" BUTCODE="0001" INT_NOTE="Standard for General List Output in Fullscreen Grid"/>
    <pfstatus_sta CODE="STATUS_0200" MODAL="P" PFKCODE="000002" BUTCODE="0001" INT_NOTE="STATUS_0200"/>
    <pfstatus_fun CODE="%ML" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Folder" PATH="F"/>
    <pfstatus_fun CODE="%PC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_EXPORT" ICON_ID="@49@" FUN_TEXT="Local File..." PATH="L"/>
    <pfstatus_fun CODE="%SC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SEARCH" ICON_ID="@13@" FUN_TEXT="Find" PATH="N"/>
    <pfstatus_fun CODE="%SL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_MAIL" ICON_ID="@1S@" FUN_TEXT="Mail Recipient" PATH="M"/>
    <pfstatus_fun CODE="&amp;ABC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ABC" ICON_ID="@DL@" FUN_TEXT="ABC Analysis" PATH="A"/>
    <pfstatus_fun CODE="&amp;ALL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SELECT_ALL" ICON_ID="@4B@" FUN_TEXT="Select All" PATH="S"/>
    <pfstatus_fun CODE="&amp;AQW" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_WORD_PROCESSING" ICON_ID="@DK@" FUN_TEXT="Word Processing..." PATH="W"/>
    <pfstatus_fun CODE="&amp;AUF" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Define Totals Drilldown..." PATH="S"/>
    <pfstatus_fun CODE="&amp;AVE" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Saving..." PATH="S"/>
    <pfstatus_fun CODE="&amp;AVE" TEXTNO="002" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANT_SAVE" ICON_ID="@DN@" FUN_TEXT="Save Layout..."/>
    <pfstatus_fun CODE="&amp;AVR" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Mean Value" PATH="M"/>
    <pfstatus_fun CODE="&amp;CDF" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Unfreeze Columns" PATH="U"/>
    <pfstatus_fun CODE="&amp;CFI" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Freeze to Column" PATH="F"/>
    <pfstatus_fun CODE="&amp;COL0" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANTS" ICON_ID="@LZ@" FUN_TEXT="Current Variant"/>
    <pfstatus_fun CODE="&amp;COUNT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Count" PATH="C"/>
    <pfstatus_fun CODE="&amp;DATA_SAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SYSTEM_SAVE" ICON_ID="@2L@" FUN_TEXT="Save"/>
    <pfstatus_fun CODE="&amp;EB9" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_TABLE_SETTINGS" ICON_ID="@36@" FUN_TEXT="Call Up Report..." PATH="B"/>
    <pfstatus_fun CODE="&amp;ERW" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Manage..." PATH="M"/>
    <pfstatus_fun CODE="&amp;ETA" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SELECT_DETAIL" ICON_ID="@16@" FUN_TEXT="Details"/>
    <pfstatus_fun CODE="&amp;F03" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Back" PATH="B"/>
    <pfstatus_fun CODE="&amp;F12" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Cancel" PATH="A"/>
    <pfstatus_fun CODE="&amp;F15" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Exit" PATH="X"/>
    <pfstatus_fun CODE="&amp;FILTER" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_FILTER" ICON_ID="@4G@" FUN_TEXT="Filter"/>
    <pfstatus_fun CODE="&amp;GRAPH" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_GRAPHICS" ICON_ID="@0N@" FUN_TEXT="Graphic" PATH="G"/>
    <pfstatus_fun CODE="&amp;ILD" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_FILTER_UNDO" ICON_ID="@GD@" FUN_TEXT="Delete Filter" PATH="E"/>
    <pfstatus_fun CODE="&amp;ILT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_FILTER" ICON_ID="@4G@" FUN_TEXT="Set Filter" PATH="F"/>
    <pfstatus_fun CODE="&amp;INFO" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_INFORMATION" ICON_ID="@0S@" FUN_TEXT="Information"/>
    <pfstatus_fun CODE="&amp;LOAD" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANT_CHOOSE" ICON_ID="@DM@" FUN_TEXT="Load Variant"/>
    <pfstatus_fun CODE="&amp;MAX" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Maximum" PATH="A"/>
    <pfstatus_fun CODE="&amp;MIN" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Minimum" PATH="I"/>
    <pfstatus_fun CODE="&amp;OAD" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Choose..." PATH="H"/>
    <pfstatus_fun CODE="&amp;OAD" TEXTNO="002" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANT_CHOOSE" ICON_ID="@DM@" FUN_TEXT="Select Layout..."/>
    <pfstatus_fun CODE="&amp;ODN" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SORT_DOWN" ICON_ID="@3F@" FUN_TEXT="Sort in Descending Order" PATH="O"/>
    <pfstatus_fun CODE="&amp;OL0" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANTS" ICON_ID="@LZ@" FUN_TEXT="Change Layout..."/>
    <pfstatus_fun CODE="&amp;OLX" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_VARIANTS" ICON_ID="@0R@" FUN_TEXT="Change..." PATH="C"/>
    <pfstatus_fun CODE="&amp;OPT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Optimize Width" PATH="P"/>
    <pfstatus_fun CODE="&amp;OUP" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SORT_UP" ICON_ID="@3E@" FUN_TEXT="Sort in Ascending Order" PATH="I"/>
    <pfstatus_fun CODE="&amp;REFRESH" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_REFRESH" ICON_ID="@42@" FUN_TEXT="Refresh"/>
    <pfstatus_fun CODE="&amp;RNT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_PRINT" ICON_ID="@0X@" FUN_TEXT="Print" PATH="P"/>
    <pfstatus_fun CODE="&amp;RNT_PREV" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_LAYOUT_CONTROL" ICON_ID="@3G@" FUN_TEXT="Print Preview" PATH="R"/>
    <pfstatus_fun CODE="&amp;SAL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_DESELECT_ALL" ICON_ID="@4D@" FUN_TEXT="Deselect All" PATH="D"/>
    <pfstatus_fun CODE="&amp;SAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANT_SAVE" ICON_ID="@DN@" FUN_TEXT="Save Variant"/>
    <pfstatus_fun CODE="&amp;SORT_ASC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SORT_UP" ICON_ID="@3E@" FUN_TEXT="Sort Ascending"/>
    <pfstatus_fun CODE="&amp;SORT_DSC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SORT_DOWN" ICON_ID="@3F@" FUN_TEXT="Sort Descending"/>
    <pfstatus_fun CODE="&amp;SUBTOT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_INTERMEDIATE_SUM" ICON_ID="@5V@" FUN_TEXT="Subtotal"/>
    <pfstatus_fun CODE="&amp;SUM" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_INTERMEDIATE_SUM" ICON_ID="@5V@" FUN_TEXT="Subtotals..." PATH="T"/>
    <pfstatus_fun CODE="&amp;SUMC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SUM" ICON_ID="@3Z@" FUN_TEXT="Sum"/>
    <pfstatus_fun CODE="&amp;UMC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SUM" ICON_ID="@3Z@" FUN_TEXT="Total" PATH="T"/>
    <pfstatus_fun CODE="&amp;VCRYSTAL" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Crystal Reports" PATH="C"/>
    <pfstatus_fun CODE="&amp;VEXCEL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_XLS" ICON_ID="@J2@" FUN_TEXT="Microsoft Excel" PATH="M"/>
    <pfstatus_fun CODE="&amp;VGRID" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="SAP List Viewer" PATH="S"/>
    <pfstatus_fun CODE="&amp;VLOTUS" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Lotus 1-2-3" PATH="L"/>
    <pfstatus_fun CODE="&amp;XINT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Additional Functions of SAP Query" PATH="E"/>
    <pfstatus_fun CODE="&amp;XXL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_XLS" ICON_ID="@J2@" FUN_TEXT="Export Excel"/>
    <pfstatus_fun CODE="&amp;XXL" TEXTNO="002" TEXT_TYPE="S" TEXT_NAME="ICON_XXL" ICON_ID="@DJ@" FUN_TEXT="Spreadsheet..." PATH="A"/>
    <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Back"/>
    <pfstatus_fun CODE="CANCEL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Cancel" PATH="A"/>
    <pfstatus_fun CODE="CONTINUE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_OKAY" ICON_ID="@0V@" FUN_TEXT="Continue"/>
    <pfstatus_fun CODE="EXIT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Cancel"/>
    <pfstatus_fun CODE="F01" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F01"/>
    <pfstatus_fun CODE="F02" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F02"/>
    <pfstatus_fun CODE="F03" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F03"/>
    <pfstatus_fun CODE="F04" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F04"/>
    <pfstatus_fun CODE="F05" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F05"/>
    <pfstatus_fun CODE="F06" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F06"/>
    <pfstatus_fun CODE="F07" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F07"/>
    <pfstatus_fun CODE="F08" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F08"/>
    <pfstatus_fun CODE="F09" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F09"/>
    <pfstatus_fun CODE="F10" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F10"/>
    <pfstatus_fun CODE="F11" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F11"/>
    <pfstatus_fun CODE="F12" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F12"/>
    <pfstatus_fun CODE="F13" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F13"/>
    <pfstatus_fun CODE="F14" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F14"/>
    <pfstatus_fun CODE="F15" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F15"/>
    <pfstatus_fun CODE="F16" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F16"/>
    <pfstatus_fun CODE="F17" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F17"/>
    <pfstatus_fun CODE="F18" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F18"/>
    <pfstatus_fun CODE="F19" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F19"/>
    <pfstatus_fun CODE="F20" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F20"/>
    <pfstatus_fun CODE="F21" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F21"/>
    <pfstatus_fun CODE="F22" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F23"/>
    <pfstatus_fun CODE="F23" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F23"/>
    <pfstatus_fun CODE="F24" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F24"/>
    <pfstatus_fun CODE="F25" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F25"/>
    <pfstatus_fun CODE="F26" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F26"/>
    <pfstatus_fun CODE="F27" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F27"/>
    <pfstatus_fun CODE="F28" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F28"/>
    <pfstatus_fun CODE="F29" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F29"/>
    <pfstatus_fun CODE="F30" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F30"/>
    <pfstatus_fun CODE="F31" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F31"/>
    <pfstatus_fun CODE="F32" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F32"/>
    <pfstatus_fun CODE="F33" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F33"/>
    <pfstatus_fun CODE="F34" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F34"/>
    <pfstatus_fun CODE="F35" TEXTNO="001" TEXT_TYPE="D" TEXT_NAME="&lt;OUT&gt;-&gt;FALV-&gt;GUI_STATUS-&gt;BUTTONS-F35"/>
    <pfstatus_fun CODE="FIND" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SEARCH" ICON_ID="@13@" FUN_TEXT="Find"/>
    <pfstatus_fun CODE="FINDNEXT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SEARCH_NEXT" ICON_ID="@4E@" FUN_TEXT="Find next"/>
    <pfstatus_fun CODE="PGDOWN" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_NEXT_PAGE" ICON_ID="@30@" FUN_TEXT="Next page"/>
    <pfstatus_fun CODE="PGEND" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_LAST_PAGE" ICON_ID="@31@" FUN_TEXT="Last Page"/>
    <pfstatus_fun CODE="PGHOME" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_FIRST_PAGE" ICON_ID="@2Y@" FUN_TEXT="First Page"/>
    <pfstatus_fun CODE="PGUP" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_PREVIOUS_PAGE" ICON_ID="@2Z@" FUN_TEXT="Previous Page"/>
    <pfstatus_fun CODE="PRINT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_PRINT" ICON_ID="@0X@" FUN_TEXT="Print"/>
    <pfstatus_fun CODE="SAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SYSTEM_SAVE" ICON_ID="@2L@" FUN_TEXT="Save"/>
    <pfstatus_fun CODE="UP" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Exit"/>
    <pfstatus_men CODE="000001" NO="01" REF_TYPE="F" REF_CODE="&amp;RNT_PREV" REF_NO="001"/>
    <pfstatus_men CODE="000001" NO="02" REF_TYPE="F" REF_CODE="&amp;RNT" REF_NO="001"/>
    <pfstatus_men CODE="000001" NO="03" REF_TYPE="S"/>
    <pfstatus_men CODE="000001" NO="04" REF_TYPE="M" REF_CODE="000002"/>
    <pfstatus_men CODE="000001" NO="05" REF_TYPE="M" REF_CODE="000003"/>
    <pfstatus_men CODE="000001" NO="06" REF_TYPE="S"/>
    <pfstatus_men CODE="000001" NO="07" REF_TYPE="F" REF_CODE="&amp;F15" REF_NO="001"/>
    <pfstatus_men CODE="000002" NO="01" REF_TYPE="F" REF_CODE="&amp;AQW" REF_NO="001"/>
    <pfstatus_men CODE="000002" NO="02" REF_TYPE="F" REF_CODE="&amp;XXL" REF_NO="002"/>
    <pfstatus_men CODE="000002" NO="03" REF_TYPE="F" REF_CODE="%PC" REF_NO="001"/>
    <pfstatus_men CODE="000002" NO="04" REF_TYPE="F" REF_CODE="&amp;XINT" REF_NO="001"/>
    <pfstatus_men CODE="000003" NO="01" REF_TYPE="F" REF_CODE="%SL" REF_NO="001"/>
    <pfstatus_men CODE="000003" NO="02" REF_TYPE="F" REF_CODE="%ML" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="01" REF_TYPE="F" REF_CODE="&amp;ALL" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="02" REF_TYPE="F" REF_CODE="&amp;SAL" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="03" REF_TYPE="S"/>
    <pfstatus_men CODE="000004" NO="04" REF_TYPE="F" REF_CODE="&amp;ILT" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="05" REF_TYPE="F" REF_CODE="&amp;ILD" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="06" REF_TYPE="S"/>
    <pfstatus_men CODE="000004" NO="07" REF_TYPE="F" REF_CODE="&amp;OUP" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="08" REF_TYPE="F" REF_CODE="&amp;ODN" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="09" REF_TYPE="S"/>
    <pfstatus_men CODE="000004" NO="10" REF_TYPE="M" REF_CODE="000005"/>
    <pfstatus_men CODE="000004" NO="11" REF_TYPE="F" REF_CODE="&amp;SUM" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="12" REF_TYPE="S"/>
    <pfstatus_men CODE="000004" NO="13" REF_TYPE="F" REF_CODE="%SC" REF_NO="001"/>
    <pfstatus_men CODE="000004" NO="14" REF_TYPE="S"/>
    <pfstatus_men CODE="000004" NO="15" REF_TYPE="F" REF_CODE="&amp;F12" REF_NO="001"/>
    <pfstatus_men CODE="000005" NO="01" REF_TYPE="F" REF_CODE="&amp;UMC" REF_NO="001"/>
    <pfstatus_men CODE="000005" NO="02" REF_TYPE="F" REF_CODE="&amp;AVR" REF_NO="001"/>
    <pfstatus_men CODE="000005" NO="03" REF_TYPE="F" REF_CODE="&amp;MIN" REF_NO="001"/>
    <pfstatus_men CODE="000005" NO="04" REF_TYPE="F" REF_CODE="&amp;MAX" REF_NO="001"/>
    <pfstatus_men CODE="000005" NO="05" REF_TYPE="F" REF_CODE="&amp;COUNT" REF_NO="001"/>
    <pfstatus_men CODE="000006" NO="01" REF_TYPE="F" REF_CODE="&amp;ABC" REF_NO="001"/>
    <pfstatus_men CODE="000006" NO="02" REF_TYPE="S"/>
    <pfstatus_men CODE="000006" NO="03" REF_TYPE="F" REF_CODE="&amp;F03" REF_NO="001"/>
    <pfstatus_men CODE="000007" NO="01" REF_TYPE="F" REF_CODE="&amp;VGRID" REF_NO="001"/>
    <pfstatus_men CODE="000007" NO="02" REF_TYPE="F" REF_CODE="&amp;VEXCEL" REF_NO="001"/>
    <pfstatus_men CODE="000007" NO="03" REF_TYPE="F" REF_CODE="&amp;VLOTUS" REF_NO="001"/>
    <pfstatus_men CODE="000007" NO="04" REF_TYPE="F" REF_CODE="&amp;VCRYSTAL" REF_NO="001"/>
    <pfstatus_men CODE="000007" NO="05" REF_TYPE="S"/>
    <pfstatus_men CODE="000007" NO="06" REF_TYPE="F" REF_CODE="&amp;GRAPH" REF_NO="001"/>
    <pfstatus_men CODE="000008" NO="01" REF_TYPE="M" REF_CODE="000009"/>
    <pfstatus_men CODE="000008" NO="02" REF_TYPE="M" REF_CODE="000010"/>
    <pfstatus_men CODE="000008" NO="03" REF_TYPE="F" REF_CODE="&amp;AUF" REF_NO="001"/>
    <pfstatus_men CODE="000009" NO="01" REF_TYPE="F" REF_CODE="&amp;OLX" REF_NO="001"/>
    <pfstatus_men CODE="000009" NO="02" REF_TYPE="F" REF_CODE="&amp;OAD" REF_NO="001"/>
    <pfstatus_men CODE="000009" NO="03" REF_TYPE="S"/>
    <pfstatus_men CODE="000009" NO="04" REF_TYPE="F" REF_CODE="&amp;AVE" REF_NO="001"/>
    <pfstatus_men CODE="000009" NO="05" REF_TYPE="S"/>
    <pfstatus_men CODE="000009" NO="06" REF_TYPE="F" REF_CODE="&amp;ERW" REF_NO="001"/>
    <pfstatus_men CODE="000010" NO="01" REF_TYPE="F" REF_CODE="&amp;OPT" REF_NO="001"/>
    <pfstatus_men CODE="000010" NO="02" REF_TYPE="S"/>
    <pfstatus_men CODE="000010" NO="03" REF_TYPE="F" REF_CODE="&amp;CFI" REF_NO="001"/>
    <pfstatus_men CODE="000010" NO="04" REF_TYPE="F" REF_CODE="&amp;CDF" REF_NO="001"/>
    <pfstatus_mtx CODE="000001" TEXT_TYPE="S" TEXT="List" PATH="L" INT_NOTE="STANDARD_FULLSCREEN List"/>
    <pfstatus_mtx CODE="000002" TEXT_TYPE="S" TEXT="Export" PATH="E" INT_NOTE="STANDARD Save"/>
    <pfstatus_mtx CODE="000003" TEXT_TYPE="S" TEXT="Send To" PATH="S"/>
    <pfstatus_mtx CODE="000004" TEXT_TYPE="S" TEXT="Edit" PATH="E" INT_NOTE="STANDARD"/>
    <pfstatus_mtx CODE="000005" TEXT_TYPE="S" TEXT="Calculate" PATH="C"/>
    <pfstatus_mtx CODE="000006" TEXT_TYPE="S" TEXT="Goto" PATH="G" INT_NOTE="STANDARD"/>
    <pfstatus_mtx CODE="000007" TEXT_TYPE="S" TEXT="Views" PATH="I"/>
    <pfstatus_mtx CODE="000008" TEXT_TYPE="S" TEXT="Settings" PATH="S" INT_NOTE="STANDARD_FULLSCREEN"/>
    <pfstatus_mtx CODE="000009" TEXT_TYPE="S" TEXT="Layout" PATH="A" INT_NOTE="Sub STANDARD"/>
    <pfstatus_mtx CODE="000010" TEXT_TYPE="S" TEXT="Columns" PATH="C"/>
    <pfstatus_act CODE="000004" NO="01" MENUCODE="000001"/>
    <pfstatus_act CODE="000004" NO="02" MENUCODE="000004"/>
    <pfstatus_act CODE="000004" NO="03" MENUCODE="000006"/>
    <pfstatus_act CODE="000004" NO="04" MENUCODE="000007"/>
    <pfstatus_act CODE="000004" NO="05" MENUCODE="000008"/>
    <pfstatus_but PFK_CODE="000002" CODE="0001" NO="01" PFNO="08"/>
    <pfstatus_but PFK_CODE="000002" CODE="0001" NO="02" PFNO="12"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="01" PFNO="02"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="02" PFNO="05"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="03" PFNO="06"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="04" PFNO="07"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="05" PFNO="08"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="06" PFNO="09"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="07" PFNO="13"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="08" PFNO="14"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="09" PFNO="16"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="10" PFNO="17"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="11" PFNO="18"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="12" PFNO="19"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="13" PFNO="20"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="14" PFNO="21"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="15" PFNO="22"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="16" PFNO="23"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="17" PFNO="24"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="18" PFNO="25"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="19" PFNO="26"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="20" PFNO="27"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="21" PFNO="28"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="22" PFNO="29"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="23" PFNO="30"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="24" PFNO="31"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="25" PFNO="32"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="26" PFNO="33"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="27" PFNO="34"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="28" PFNO="35"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="29" PFNO="36"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="30" PFNO="37"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="31" PFNO="38"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="32" PFNO="39"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="33" PFNO="40"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="34" PFNO="41"/>
    <pfstatus_but PFK_CODE="000003" CODE="0001" NO="35" PFNO="42"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="01" PFNO="08"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="02" PFNO="S"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="03" PFNO="05"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="04" PFNO="06"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="05" PFNO="28"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="06" PFNO="40"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="07" PFNO="29"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="08" PFNO="38"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="09" PFNO="30"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="10" PFNO="42"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="11" PFNO="S"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="12" PFNO="09"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="13" PFNO="32"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="14" PFNO="33"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="15" PFNO="34"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="16" PFNO="S"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="17" PFNO="02"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="18" PFNO="36"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="19" PFNO="27"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="20" PFNO="07"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="21" PFNO="35"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="22" PFNO="94"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="23" PFNO="13"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="24" PFNO="14"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="25" PFNO="16"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="26" PFNO="17"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="27" PFNO="18"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="28" PFNO="19"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="29" PFNO="20"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="30" PFNO="21"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="31" PFNO="22"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="32" PFNO="23"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="33" PFNO="24"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="34" PFNO="25"/>
    <pfstatus_but PFK_CODE="000005" CODE="0001" NO="35" PFNO="26"/>
    <pfstatus_pfk CODE="000002" PFNO="08" FUNCODE="CONTINUE" FUNNO="001"/>
    <pfstatus_pfk CODE="000002" PFNO="12" FUNCODE="CANCEL" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="02" FUNCODE="F01" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="05" FUNCODE="F02" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="06" FUNCODE="F03" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="07" FUNCODE="F04" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="08" FUNCODE="F05" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="09" FUNCODE="F06" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="11" FUNCODE="&amp;DATA_SAVE" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="12" FUNCODE="EXIT" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="13" FUNCODE="F07" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="14" FUNCODE="F08" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="15" FUNCODE="UP" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="16" FUNCODE="F09" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="17" FUNCODE="F10" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="18" FUNCODE="F11" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="19" FUNCODE="F12" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="20" FUNCODE="F13" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="21" FUNCODE="F14" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="22" FUNCODE="F15" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="23" FUNCODE="F16" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="24" FUNCODE="F17" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="25" FUNCODE="F18" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="26" FUNCODE="F19" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="27" FUNCODE="F20" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="28" FUNCODE="F21" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="29" FUNCODE="F22" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="30" FUNCODE="F23" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="31" FUNCODE="F24" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="32" FUNCODE="F25" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="33" FUNCODE="F26" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="34" FUNCODE="F27" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="35" FUNCODE="F28" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="36" FUNCODE="F29" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="37" FUNCODE="F30" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="38" FUNCODE="F31" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="39" FUNCODE="F32" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="40" FUNCODE="F33" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="41" FUNCODE="F34" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="42" FUNCODE="F35" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="71" FUNCODE="FIND" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="80" FUNCODE="PGHOME" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="81" FUNCODE="PGUP" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="82" FUNCODE="PGDOWN" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="83" FUNCODE="PGEND" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="84" FUNCODE="FINDNEXT" FUNNO="001"/>
    <pfstatus_pfk CODE="000003" PFNO="86" FUNCODE="PRINT" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="02" FUNCODE="F01" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="05" FUNCODE="&amp;ALL" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="06" FUNCODE="&amp;SAL" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="07" FUNCODE="F04" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="08" FUNCODE="&amp;REFRESH" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="09" FUNCODE="&amp;XXL" FUNNO="002"/>
    <pfstatus_pfk CODE="000005" PFNO="11" FUNCODE="&amp;DATA_SAVE" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="12" FUNCODE="EXIT" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="13" FUNCODE="F07" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="14" FUNCODE="F08" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="15" FUNCODE="UP" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="16" FUNCODE="F09" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="17" FUNCODE="F10" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="18" FUNCODE="F11" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="19" FUNCODE="F12" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="20" FUNCODE="F13" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="21" FUNCODE="F14" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="22" FUNCODE="F15" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="23" FUNCODE="F16" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="24" FUNCODE="F17" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="25" FUNCODE="F18" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="26" FUNCODE="F19" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="27" FUNCODE="F03" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="28" FUNCODE="&amp;OUP" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="29" FUNCODE="&amp;ILT" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="30" FUNCODE="&amp;UMC" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="31" FUNCODE="%SL" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="32" FUNCODE="&amp;OL0" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="33" FUNCODE="&amp;OAD" FUNNO="002"/>
    <pfstatus_pfk CODE="000005" PFNO="34" FUNCODE="&amp;AVE" FUNNO="002"/>
    <pfstatus_pfk CODE="000005" PFNO="35" FUNCODE="F05" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="36" FUNCODE="F02" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="37" FUNCODE="&amp;EB9" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="38" FUNCODE="&amp;ILD" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="39" FUNCODE="&amp;ETA" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="40" FUNCODE="&amp;ODN" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="41" FUNCODE="&amp;VGRID" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="42" FUNCODE="&amp;SUM" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="43" FUNCODE="&amp;VEXCEL" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="44" FUNCODE="&amp;AQW" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="45" FUNCODE="%PC" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="46" FUNCODE="&amp;RNT_PREV" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="47" FUNCODE="&amp;GRAPH" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="48" FUNCODE="&amp;VCRYSTAL" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="71" FUNCODE="FIND" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="80" FUNCODE="PGHOME" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="81" FUNCODE="PGUP" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="82" FUNCODE="PGDOWN" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="83" FUNCODE="PGEND" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="84" FUNCODE="FINDNEXT" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="86" FUNCODE="PRINT" FUNNO="001"/>
    <pfstatus_pfk CODE="000005" PFNO="94" FUNCODE="F06" FUNNO="001"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="&amp;DATA_SAVE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="BACK"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="EXIT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F01"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F02"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F03"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F04"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F05"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F06"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F07"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F08"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F09"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F10"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F11"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F12"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F13"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F14"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F15"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F16"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F17"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F18"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F19"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F20"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F21"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F22"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F23"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F24"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F25"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F26"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F27"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F28"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F29"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F30"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F31"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F32"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F33"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F34"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="F35"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="FIND"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="FINDNEXT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="PGDOWN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="PGEND"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="PGHOME"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="PGUP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="PRINT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="SAVE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS" FUNCTION="UP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="%CH"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="%ML"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="%PC"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="%SC"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="%SL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ABC"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ALL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;AQW"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;AUF"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;AVE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;AVR"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;BS"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;BS+"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;BS-"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CDF"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CFI"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;COUNT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRB"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRBATCH"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRDESIG"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRR"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRTEMPL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;CRYSTAL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;DATA_SAVE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;DAU"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;DOF"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;DON"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;EB3"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;EB9"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ERW"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ETA"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;F03"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;F12"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;F15"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;GRAPH"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ILD"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ILT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;INFO"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;KOM"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;LFO"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;LIS"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;MAX"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;MIN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;NFO"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;NTE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;OAD"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;ODN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;OL0"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;OLX"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;OMP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;OPT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;OUP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;REFRESH"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;RNT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;RNT_PREV"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;SAL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;SAVE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;SUM"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;UMC"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;URL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;VCRYSTAL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;VEXCEL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;VGRID"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;VLOTUS"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;XML"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;XPA"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="&amp;XXL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BAC1"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BACK"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BEB1"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BEB2"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BEB3"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BEB9"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="BEBN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="COL0"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="COLX"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="DETA"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="DRUK"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="DSAL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="ENTE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="EXIT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="EXPA"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F01"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F02"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F03"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F04"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F05"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F06"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F07"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F08"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F09"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F10"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F11"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F12"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F13"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F14"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F15"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F16"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F17"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F18"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="F19"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="FILD"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="FILT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="FIND"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="FINDNEXT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="GLIS"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="HELP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="INFO"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="KOMP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="P+"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="P++"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="P-"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="P--"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PF09"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PF13"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PGDOWN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PGEND"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PGHOME"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PGUP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PIC1"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PICK"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PRI"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PRIN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PRINT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="PRNT"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="RW"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SALL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SAUF"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SAVE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SCRB"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SCRE"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SCRL"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SCRR"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SKOM"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SODN"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SOUP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="SUMC"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="UP"/>
    <pfstatus_set STATUS="DYNAMIC_STATUS_PART" FUNCTION="ZSUM"/>
    <pfstatus_set STATUS="STATUS_0200" FUNCTION="CANCEL"/>
    <pfstatus_set STATUS="STATUS_0200" FUNCTION="CONTINUE"/>
    <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000002" MODAL="P" INT_NOTE="STATUS_0200"/>
    <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000002" SUB_CODE="0001" MODAL="P" INT_NOTE="STATUS_0200"/>
    <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000002" MODAL="D" INT_NOTE="Dynamic status"/>
    <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000003" MODAL="D" INT_NOTE="Dynamic status"/>
    <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000003" SUB_CODE="0001" MODAL="D" INT_NOTE="Dynamic status"/>
    <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000004" MODAL="D" INT_NOTE="Standard Interface              STANDARD_FULLSCREEN"/>
    <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000005" MODAL="D" NORM="X" INT_NOTE="Standard Maximum Interaction STANDARD_FULLSCREEN"/>
    <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000005" SUB_CODE="0001" INT_NOTE="STANDARD_FULLSCREEN"/>
    <pfstatus_tit CODE="TITLE" TEXT="&amp;1 &amp;2 &amp;3 &amp;4 &amp;5"/>
   </pfstatus>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  include lzfalvtop.                         &quot; Global Data
  include lzfalvuxx.                         &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZFALVF...                         &quot; Subroutines
* INCLUDE LZFALVO...                         &quot; PBO-Modules
* INCLUDE LZFALVI...                         &quot; PAI-Modules
* INCLUDE LZFALVE...                         &quot; Events
  INCLUDE LZFALVP01.                         &quot; Local class implement.
* INCLUDE LZFALVT99.                         &quot; ABAP Unit tests

  include lzfalvoim. &quot; PBO / PAI - modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZFALVD01" VARCL="X" SUBC="I" RMAND="001" RLOAD="E" UCCHECK="X">
    <include_source>class lcl_output definition.

  public section.
    data: okcode type sy-ucomm.
    data: guid type char22 read-only.
    methods: constructor importing io_falv type ref to zcl_falv.
    methods: pbo importing value(iv_dynnr) type sy-dynnr default sy-dynnr.
    methods: pai changing c_ucomm type sy-ucomm.
    class-methods: end_of_ss1001 importing !p_task type clike.
    class-methods: set_ss1001_status.
    data: falv type ref to zcl_falv.
    class-data: wait_for_mass_repl type abap_bool.
    class-data: mass_repl_params type rsparams_tt.
  protected section.
    data: first_output type abap_bool value abap_true.
  private section.
    methods: hide.
    methods: show.


endclass.</include_source>
   </include>
   <include NAME="LZFALVOIM" VARCL="X" SUBC="I" RMAND="001" RLOAD="E" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
*  MODULE pbo OUTPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE pbo OUTPUT.
*Begin SMD
*  assign outputs[ table_line-&gt;guid = current_guid ] to &lt;out&gt;.
  READ TABLE outputs ASSIGNING &lt;out&gt; WITH KEY table_line-&gt;guid = current_guid.
*End SMD
  IF sy-subrc EQ 0.
    &lt;out&gt;-&gt;pbo( iv_dynnr = sy-dynnr ).
  ENDIF.

ENDMODULE.                    &quot;pbo OUTPUT

*----------------------------------------------------------------------*
*  MODULE pai INPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE pai INPUT.
*Begin SMD
*  assign outputs[ table_line-&gt;guid = current_guid ] to &lt;out&gt;.
  READ TABLE outputs ASSIGNING &lt;out&gt; WITH KEY table_line-&gt;guid = current_guid.
*End SMD
  IF sy-subrc EQ 0.
    &lt;out&gt;-&gt;pai( CHANGING c_ucomm = okcode  ).
  ENDIF.
ENDMODULE.                    &quot;pai INPUT</include_source>
   </include>
   <include NAME="LZFALVP01" VARCL="X" SUBC="I" RMAND="001" RLOAD="E" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
*       CLASS lcl_output IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_output IMPLEMENTATION.

  METHOD constructor.
    CALL FUNCTION &apos;GUID_CREATE&apos;
      IMPORTING
        ev_guid_22 = guid.
    falv = io_falv.
  ENDMETHOD.                    &quot;constructor
  METHOD show.
*Begin SMD
*    loop at outputs assigning field-symbol(&lt;hide&gt;) where table_line-&gt;guid ne me-&gt;guid.
    FIELD-SYMBOLS: &lt;hide&gt; LIKE LINE OF outputs.
    LOOP AT outputs ASSIGNING &lt;hide&gt; WHERE table_line-&gt;guid NE me-&gt;guid.
*End SMD
      &lt;hide&gt;-&gt;hide( ).
    ENDLOOP.
    falv-&gt;set_visible( abap_true ).
    falv-&gt;parent-&gt;set_visible( abap_true ).
    falv-&gt;main_container-&gt;set_visible( abap_true ).
  ENDMETHOD.                    &quot;show
  METHOD hide.
    falv-&gt;set_visible( abap_false ).
    falv-&gt;parent-&gt;set_visible( abap_false ).
    falv-&gt;main_container-&gt;set_visible( abap_false ).
  ENDMETHOD.                    &quot;hide

  METHOD pbo.
    show( ).
    IF sy-dynnr EQ zcl_falv=&gt;c_screen_popup AND first_output EQ abap_true.
      cl_gui_cfw=&gt;flush(
        EXCEPTIONS
          cntl_system_error = 1
          cntl_error        = 2
          OTHERS            = 3
      ).
      IF sy-subrc &lt;&gt; 0.
*       message id sy-msgid type sy-msgty number sy-msgno
*                  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
      falv-&gt;parent-&gt;set_enable(
        EXPORTING
          enable            =  abap_true   &quot; Enable/disable state flag
        EXCEPTIONS
          cntl_error        = 1
          cntl_system_error = 2
          OTHERS            = 3
      ).
      IF sy-subrc &lt;&gt; 0.
*       message id sy-msgid type sy-msgty number sy-msgno
*                  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
      IF first_output EQ abap_true.
*Begin SMD
*        data(falv_popup) = falv-&gt;create_by_copy(
**                       i_parent          =
**                        i_applogparent    =
*                          i_popup           = abap_true
**                       i_applog_embedded = ABAP_FALSE
*                     ).
        DATA: falv_popup TYPE REF TO zcl_falv.
        falv_popup = falv-&gt;create_by_copy(
*                       i_parent          =
*                        i_applogparent    =
                          i_popup           = abap_true
*                       i_applog_embedded = ABAP_FALSE
                     ).
*End SMD
        falv  ?= falv_popup.
      ENDIF.
    ENDIF.
    falv-&gt;pbo( iv_dynnr = iv_dynnr ).
    IF first_output EQ abap_true.

      cl_gui_cfw=&gt;flush(
  EXCEPTIONS
    cntl_system_error = 1
    cntl_error        = 2
    OTHERS            = 3
).
      IF sy-subrc &lt;&gt; 0.
*       message id sy-msgid type sy-msgty number sy-msgno
*                  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
      falv-&gt;display( iv_force_grid = abap_true ).
      CLEAR first_output.
      IF falv-&gt;split_container IS NOT INITIAL.
        &quot;! When I use embedded applog then although it&apos;s container is hidden
        &quot;! then you can still see the place for it until some pbo will happen.
        &quot;! I force dummy user-command to get rid of it
        CALL FUNCTION &apos;SAPGUI_SET_FUNCTIONCODE&apos;
          EXPORTING
            functioncode           = &apos;DUMMY&apos;    &quot; Function code
          EXCEPTIONS
            function_not_supported = 1
            OTHERS                 = 2.
        IF sy-subrc &lt;&gt; 0.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDMETHOD.                    &quot;pbo

  METHOD pai.
    CHECK c_ucomm IS NOT INITIAL.
    falv-&gt;pai( EXPORTING iv_dynnr = sy-dynnr CHANGING c_ucomm  = c_ucomm ).
  ENDMETHOD.                    &quot;pai

  METHOD end_of_ss1001.
    RECEIVE RESULTS FROM FUNCTION &apos;Z_FALV_CALL_MASS_SS&apos;
      IMPORTING
        et_rsparams       = mass_repl_params.
    wait_for_mass_repl = space.
  ENDMETHOD.                    &quot;end_of_ss1001

  METHOD set_ss1001_status.
    DATA: exclude TYPE STANDARD TABLE OF rsexfcode.
    IF sy-dynnr EQ 1001.
*Begin SMD
*      exclude = value #( ( fcode = &apos;GET&apos; ) ( fcode = &apos;SPOS&apos; ) ( fcode = &apos;NONE&apos; ) ).
      DATA: ls_exclude LIKE LINE OF exclude.
      REFRESH: exclude.
      CLEAR: ls_exclude.
      ls_exclude-fcode = &apos;GET&apos;.
      APPEND ls_exclude TO exclude.
      CLEAR: ls_exclude.
      ls_exclude-fcode = &apos;SPOS&apos;.
      APPEND ls_exclude TO exclude.
      CLEAR: ls_exclude.
      ls_exclude-fcode = &apos;NONE&apos;.
      APPEND ls_exclude TO exclude.
*End SMD
      CALL FUNCTION &apos;RS_SET_SELSCREEN_STATUS&apos;
        EXPORTING
          p_status  = space
          p_program = sy-repid
        TABLES
          p_exclude = exclude.
    ENDIF.

  ENDMETHOD.                    &quot;set_ss1001_status

ENDCLASS.                    &quot;lcl_output IMPLEMENTATION</include_source>
   </include>
   <include NAME="LZFALVTOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>function-pool zfalv.                        &quot;MESSAGE-ID ..
class lcl_output definition deferred.

types: t_output type ref to lcl_output.
types: tt_output type sorted table of t_output with unique key table_line.
data: current_guid type char22.
data: outputs type tt_output.
data: okcode type sy-ucomm.
field-symbols: &lt;out&gt; type t_output.
include lzfalvd01.                         &quot; Local class definition

data: g_par01_type type char255.
data: g_par02_type type char255.
data: g_par03_type type char255.
data: g_par04_type type char255.
data: g_par05_type type char255.
data: g_par06_type type char255.
data: g_par07_type type char255.
data: g_par08_type type char255.
data: g_par09_type type char255.
data: g_par10_type type char255.
data: g_wait type c.
data: g_fieldname type string.
data: g_okcode type sy-ucomm.
field-symbols: &lt;fcat&gt; type lvc_s_fcat.
field-symbols: &lt;any&gt; type any.

define add_param_descr.
  concatenate &apos;P_DESC&apos; &amp;1 into g_fieldname.
  assign (g_fieldname) to &lt;any&gt;.
  if sy-subrc eq 0.
    &lt;any&gt; = &amp;2.
  endif.
  concatenate &apos;P_WITH&apos; &amp;1 into g_fieldname.
  assign (g_fieldname) to &lt;any&gt;.
  if sy-subrc eq 0.
    &lt;any&gt; = text-s02.
  endif.
  concatenate &apos;P_CLEA&apos; &amp;1 into g_fieldname.
  assign (g_fieldname) to &lt;any&gt;.
  if sy-subrc eq 0.
    &lt;any&gt; = text-s03.
  endif.
end-of-definition.

define change_parametr_type.
  data: f_type type string.
  concatenate &apos;G_PAR&apos; &amp;1 &apos;_TYPE&apos; into g_fieldname.
  concatenate &amp;2 &apos;-&apos; &amp;3 into f_type.
  assign (g_fieldname) to &lt;any&gt;.
  if sy-subrc eq 0.
    &lt;any&gt; = f_type.
  endif.
end-of-definition.


*--------------------------------------------------------------------*
* begin of selection screens
*--
define add_ss_line.
  selection-screen begin of line.
  selection-screen comment 1(14) p_clea&amp;1.
  parameters: p_parc&amp;1 as checkbox user-command p_parc&amp;1.
  selection-screen comment 18(10) p_desc&amp;1.
  parameters: p_parf&amp;1 like (g_par&amp;1_type) lower case.
  selection-screen comment 77(6) p_with&amp;1.
  parameters: p_part&amp;1 like (g_par&amp;1_type) lower case.

  &quot;selection-screen comment 51(10) p_with&amp;1.
  selection-screen end of line.
end-of-definition.



&quot;mass replace ss
selection-screen begin of screen 1001.
add_ss_line: 01, 02, 03, 04, 05, 06, 07, 08, 09, 10.
selection-screen end of screen 1001.


at selection-screen output.
  if sy-dynnr eq 1001.
    lcl_output=&gt;set_ss1001_status( ).
     set titlebar &apos;TITLE&apos; with text-s01.
    loop at screen.
      if screen-name cp &apos;*P_*01*&apos; and g_par01_type is initial.
        clear: p_parf01, p_part01.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*02*&apos; and g_par02_type is initial.
        clear: p_parf02, p_part02.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*03*&apos; and g_par03_type is initial.
        clear: p_parf03, p_part03.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*04*&apos; and g_par04_type is initial.
        clear: p_parf04, p_part04.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*05*&apos; and g_par05_type is initial.
        clear: p_parf05, p_part05.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*06*&apos; and g_par06_type is initial.
        clear: p_parf06, p_part06.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*07*&apos; and g_par07_type is initial.
        clear: p_parf07, p_part07.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*08*&apos; and g_par08_type is initial.
        clear: p_parf08, p_part08.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*09*&apos; and g_par09_type is initial.
        clear: p_parf09, p_part09.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name cp &apos;*P_*10*&apos; and g_par10_type is initial.
        clear: p_parf10, p_part10.
        screen-active = 0.
        modify screen.
      endif.
      if screen-name+0(6) eq &apos;P_PARF&apos;.
        concatenate &apos;P_PARC&apos; screen-name+6(2) into g_fieldname.
        assign (g_fieldname) to &lt;any&gt;.
        if sy-subrc eq 0 and &lt;any&gt; is not initial.
          assign (screen-name) to &lt;any&gt;.
          if sy-subrc eq 0.
            clear &lt;any&gt;.
          endif.
          screen-input = 0.
          modify screen.
        elseif sy-subrc eq 0.
          screen-input = 1.
          modify screen.
        endif.
      endif.
    endloop.
  endif.


  if sy-dynnr eq 1001.
    g_okcode = sy-ucomm.
    clear sy-ucomm.
    case g_okcode.
      when &apos;ENTER&apos;.
        &quot; return.
      when &apos;CANCEL&apos;.
        clear: p_parf01, p_parf02, p_parf03, p_parf04, p_parf05, p_parf06, p_parf07, p_parf08, p_parf09, p_parf10,
        p_part01, p_part02, p_part03, p_part04, p_part05, p_part06, p_part07, p_part08, p_part09, p_part10        .
        &quot;return.
      when &apos;P_PARC01&apos; or &apos;P_PARC02&apos; or &apos;P_PARC03&apos; or &apos;P_PARC04&apos; or &apos;P_PARC05&apos; or &apos;P_PARC06&apos; or &apos;P_PARC07&apos; or &apos;P_PARC08&apos; or
      &apos;P_PARC09&apos; or &apos;P_PARC10&apos;.

    endcase.
  endif.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="Z_FALV_DISPLAY" STEXT="Display FALV">
    <importing PARAMETER="IO_FALV" REFERENCE="X" TYP="REF TO ZCL_FALV" REF_CLASS="X"/>
    <importing PARAMETER="IV_START_ROW" OPTIONAL="X" TYP="I"/>
    <importing PARAMETER="IV_START_COLUMN" OPTIONAL="X" TYP="I"/>
    <importing PARAMETER="IV_END_ROW" OPTIONAL="X" TYP="I"/>
    <importing PARAMETER="IV_END_COLUMN" OPTIONAL="X" TYP="I"/>
    <documentation PARAMETER="IO_FALV" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="IV_START_ROW" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="IV_START_COLUMN" KIND="P" INDEX=" 003"/>
    <documentation PARAMETER="IV_END_ROW" KIND="P" INDEX=" 004"/>
    <documentation PARAMETER="IV_END_COLUMN" KIND="P" INDEX=" 005"/>
    <fm_source_new>*Begin SMD
  DATA: output TYPE REF TO lcl_output.
  FIELD-SYMBOLS: &lt;output&gt; LIKE LINE OF outputs.
*if not line_exists( outputs[ table_line-&gt;falv = io_falv ] ).
  READ TABLE outputs ASSIGNING &lt;output&gt; WITH KEY table_line-&gt;falv = io_falv.
  IF sy-subrc NE 0.
*        data(output) = new lcl_output( io_falv ).
    CREATE OBJECT output
      EXPORTING
        io_falv = io_falv.
*End SMD
    INSERT output INTO TABLE outputs.
    current_guid = output-&gt;guid.
    ASSIGN output TO &lt;out&gt;.
    IF sy-subrc EQ 0.

    ENDIF.

  ELSE.
*Begin SMD
*    ASSIGN outputs[ table_line-&gt;falv = io_falv ] TO &lt;out&gt;.
    READ TABLE outputs ASSIGNING &lt;output&gt; WITH KEY table_line-&gt;falv = io_falv.
    IF sy-subrc EQ 0.
      ASSIGN &lt;output&gt; TO &lt;out&gt;.
*End SMD
      IF sy-subrc EQ 0.
        current_guid = &lt;out&gt;-&gt;guid.
      ENDIF.
*Begin SMD
    ENDIF.
*End SMD
  ENDIF.

  IF io_falv-&gt;screen EQ io_falv-&gt;c_screen_popup.
    CALL SCREEN io_falv-&gt;screen STARTING AT  iv_start_column iv_start_row
                                ENDING AT    iv_end_column iv_end_row
                                .
  ELSE.
    CALL SCREEN io_falv-&gt;screen.
  ENDIF.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="Z_FALV_MASS_REPLACE" STEXT="Mass replace for grid">
    <importing PARAMETER="IO_GRID" REFERENCE="X" TYP="REF TO CL_GUI_ALV_GRID" REF_CLASS="X"/>
    <changing PARAMETER="CT_OUTTAB" REFERENCE="X" TYP="STANDARD TABLE"/>
    <documentation PARAMETER="IO_GRID" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="CT_OUTTAB" KIND="P" INDEX=" 002"/>
    <fm_source_new>.

  DATA: ft_rsparams TYPE rsparams_tt.
  DATA: f_lines TYPE i.
  DATA: f_num(2) TYPE n.
  DATA: f_index TYPE i.
  DATA: f_field TYPE string.
  DATA: f_changed TYPE flag.
  DATA: f_tabix TYPE i.
  DATA: f_space LIKE LINE OF ft_rsparams.
  FIELD-SYMBOLS: &lt;paramsf&gt; LIKE LINE OF ft_rsparams.
  FIELD-SYMBOLS: &lt;paramst&gt; LIKE LINE OF ft_rsparams.
  FIELD-SYMBOLS: &lt;paramsc&gt; LIKE LINE OF ft_rsparams.
  FIELD-SYMBOLS: &lt;params_save&gt; LIKE LINE OF ft_rsparams.
  FIELD-SYMBOLS: &lt;outtab&gt; TYPE ANY TABLE.
  FIELD-SYMBOLS: &lt;outtab_ref&gt; TYPE ANY TABLE.
  FIELD-SYMBOLS: &lt;outp&gt; TYPE any.
  FIELD-SYMBOLS: &lt;value&gt; TYPE lvc_s_modi-value.
  FIELD-SYMBOLS: &lt;out_line&gt; TYPE lvc_t_styl.
  FIELD-SYMBOLS: &lt;style&gt; TYPE lvc_s_styl.
  FIELD-SYMBOLS: &lt;any&gt; TYPE any.
  IF io_grid-&gt;is_ready_for_input( ) EQ 0.
    MESSAGE s001(00) DISPLAY LIKE &apos;W&apos; WITH &apos;Grid should be in edit mode in order to use this function!&apos;(e01).
    RETURN.
  ENDIF.

*Begin SMD
  DATA: layout TYPE lvc_s_layo.
*End SMD
  io_grid-&gt;get_frontend_layout(
    IMPORTING
*Begin SMD
*      es_layout = data(layout)
      es_layout = layout
*End SMD
  ).

*Begin SMD
  DATA: fcat TYPE lvc_t_fcat.
*End SMD
  io_grid-&gt;get_frontend_fieldcatalog(
  IMPORTING
*Begin SMD
*    et_fieldcatalog = data(fcat)
et_fieldcatalog = fcat
*End SMD
    ).
*Begin SMD
  DATA: filtered TYPE lvc_t_fidx.
*End SMD
  io_grid-&gt;get_filtered_entries(
      IMPORTING
*Begin SMD
*        et_filtered_entries = data(filtered)
et_filtered_entries = filtered
*End SMD
     ).

*Begin SMD
  DATA: selected_rows TYPE lvc_t_roid.
*End SMD
  io_grid-&gt;get_selected_rows(
      IMPORTING
*Begin SMD
*        et_row_no     =  data(selected_rows)
        et_row_no     =  selected_rows
*End SMD
    ).

*Begin SMD
  DATA: selected_cols TYPE lvc_t_col.
*End SMD
  io_grid-&gt;get_selected_columns(
  IMPORTING
*Begin SMD
*    et_index_columns = data(selected_cols)
    et_index_columns = selected_cols
*End SMD
    ).

  SORT selected_rows BY row_id.

  &quot;remove not editable fields
  IF layout-edit EQ abap_false. &quot;full grid editable
    DELETE fcat WHERE edit EQ abap_false.
    IF fcat IS INITIAL.
      MESSAGE s001(00) DISPLAY LIKE &apos;W&apos; WITH &apos;No editable fields in the grid&apos;(e02).
      RETURN.
    ENDIF.
  ENDIF.
  SORT fcat BY fieldname.
*Begin SMD

*  loop at selected_cols assigning field-symbol(&lt;col&gt;).
  FIELD-SYMBOLS: &lt;col&gt; LIKE LINE OF selected_cols.
  DATA: tabix TYPE sy-tabix.
  LOOP AT selected_cols ASSIGNING &lt;col&gt;.

*    data(tabix) = sy-tabix.
    tabix = sy-tabix.
*End SMD
    READ TABLE fcat WITH KEY fieldname = &lt;col&gt;-fieldname TRANSPORTING NO FIELDS BINARY SEARCH.
    IF sy-subrc NE 0.
      DELETE selected_cols INDEX tabix.
    ENDIF.
  ENDLOOP.
  IF sy-subrc EQ 0.
    IF selected_cols[] IS INITIAL.
      MESSAGE s001(00) DISPLAY LIKE &apos;W&apos; WITH &apos;Please select editable fields only&apos;(e03).
      RETURN.
    ENDIF.
  ENDIF.

  IF selected_cols[] IS INITIAL.
    MESSAGE s001(00) DISPLAY LIKE &apos;W&apos; WITH &apos;Please select at least one column!&apos;(e04).
    RETURN.
  ENDIF.

  IF lines( selected_cols ) GT 10.
    MESSAGE s001(00) DISPLAY LIKE &apos;W&apos; WITH &apos;Maximum number of columns in mass change function is 10&apos;(e05).
    RETURN.
  ENDIF.

*Begin SMD
DATA: fieldname TYPE string.
FIELD-SYMBOLS: &lt;fcat&gt; like LINE OF fcat.
*End SMD
  LOOP AT selected_cols ASSIGNING &lt;col&gt;.
*Begin SMD
*    data(fieldname) = |G_{ &lt;col&gt;-fieldname }|.
    fieldname = |G_{ &lt;col&gt;-fieldname }|.
*End SMD
    ASSIGN (fieldname) TO &lt;any&gt;.
    IF sy-subrc EQ 0.
      &lt;any&gt; = &apos;X&apos;.
*Begin SMD
*      READ TABLE fcat WITH KEY fieldname = &lt;col&gt;-fieldname ASSIGNING field-symbol(&lt;fcat&gt;) BINARY SEARCH.
      READ TABLE fcat WITH KEY fieldname = &lt;col&gt;-fieldname ASSIGNING &lt;fcat&gt; BINARY SEARCH.
*End SMD
      IF sy-subrc EQ 0.
        fieldname = |PD{ &lt;col&gt;-fieldname }|.
        ASSIGN (fieldname) TO &lt;any&gt;.
        IF sy-subrc EQ 0.
          &lt;any&gt; = &lt;fcat&gt;-scrtext_s.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.

  REFRESH &lt;out&gt;-&gt;mass_repl_params .
  SORT fcat BY col_pos.
  CALL FUNCTION &apos;RM_FREE_SESSION_CHECK&apos;
    EXCEPTIONS
      no_free_session = 1
      OTHERS          = 2.
  IF sy-subrc EQ 0.
    &lt;out&gt;-&gt;wait_for_mass_repl = abap_true.
    CALL FUNCTION &apos;Z_FALV_CALL_MASS_SS&apos;
      DESTINATION &apos;NONE&apos;
      STARTING NEW TASK &apos;ZFALVMASSR&apos;
      CALLING &lt;out&gt;-&gt;end_of_ss1001 ON END OF TASK
      EXPORTING
        it_mass_sel_columns = selected_cols
        it_fcat_mass        = fcat.
  ELSE.
    MESSAGE s001(00) DISPLAY LIKE &apos;W&apos; WITH &apos;No more free sessions. Close one window.&apos;(e06).
    RETURN.
  ENDIF.
  WAIT UNTIL &lt;out&gt;-&gt;wait_for_mass_repl EQ abap_false.

  SORT &lt;out&gt;-&gt;mass_repl_params BY selname.
  CLEAR f_num.
  DATA: f_row TYPE i.
  DATA: ft_delta TYPE lvc_t_modi.
  DATA: fs_delta TYPE lvc_s_modi.
  ft_rsparams[] = &lt;out&gt;-&gt;mass_repl_params[].
  SORT ft_rsparams BY selname.
  CLEAR f_num.
  LOOP AT fcat ASSIGNING &lt;fcat&gt;.
    READ TABLE selected_cols[] WITH KEY fieldname = &lt;fcat&gt;-fieldname TRANSPORTING NO FIELDS.&quot; binary search.
    IF sy-subrc EQ 0.
      ADD 1 TO f_num.
      CONCATENATE &apos;P_PARC&apos; f_num INTO f_field.
      READ TABLE ft_rsparams ASSIGNING &lt;paramsc&gt; WITH KEY selname = f_field BINARY SEARCH.
      IF sy-subrc NE 0.
        ASSIGN f_space TO &lt;paramsc&gt;.
      ENDIF.
      CONCATENATE &apos;P_PARF&apos; f_num INTO f_field.
      READ TABLE ft_rsparams ASSIGNING &lt;paramsf&gt; WITH KEY selname = f_field BINARY SEARCH.
      IF sy-subrc EQ 0.
        CONCATENATE &apos;P_PART&apos; f_num INTO f_field.
        READ TABLE ft_rsparams ASSIGNING &lt;paramst&gt; WITH KEY selname = f_field BINARY SEARCH.
        IF sy-subrc EQ 0 AND ( &lt;paramsf&gt;-low NE &lt;paramst&gt;-low  OR &lt;paramsc&gt;-low EQ abap_true ).
          LOOP AT ct_outtab ASSIGNING &lt;outp&gt;.
            f_row = sy-tabix.
            IF filtered[] IS NOT INITIAL.
              READ TABLE filtered WITH KEY table_line = f_row TRANSPORTING NO FIELDS.
              IF sy-subrc EQ 0.
                CONTINUE.
              ENDIF.
            ENDIF.
            IF selected_rows[] IS NOT INITIAL.
              READ TABLE selected_rows WITH KEY row_id = f_row TRANSPORTING NO FIELDS BINARY SEARCH.
              IF sy-subrc NE 0. &quot;only selected rows can be changed.
                CONTINUE.
              ENDIF.
            ENDIF.
            ASSIGN COMPONENT &lt;fcat&gt;-fieldname OF STRUCTURE &lt;outp&gt; TO &lt;any&gt;.
            IF sy-subrc EQ 0 AND ( &lt;any&gt; EQ &lt;paramsf&gt;-low OR &lt;paramsc&gt;-low EQ abap_true ).
              &quot;check if field is not disabled in row :)
              IF layout-stylefname IS NOT INITIAL.
                ASSIGN COMPONENT layout-stylefname OF STRUCTURE &lt;outp&gt; TO &lt;out_line&gt;.
                IF sy-subrc EQ 0.
                  READ TABLE &lt;out_line&gt; WITH KEY fieldname = &lt;fcat&gt;-fieldname ASSIGNING &lt;style&gt;.
                  IF sy-subrc EQ 0 AND &lt;style&gt;-style EQ cl_gui_alv_grid=&gt;mc_style_disabled.
                    &quot;do not change that cell as it&apos;s not editable.
                    CONTINUE.
                  ENDIF.
                ENDIF.
              ENDIF.

              &lt;any&gt; = &lt;paramst&gt;-low.
              CLEAR fs_delta.
              fs_delta-fieldname = &lt;fcat&gt;-fieldname.
              fs_delta-row_id    = f_row.
              fs_delta-value = &lt;paramst&gt;-low.
              APPEND fs_delta TO ft_delta.

              f_changed = abap_true.
            ENDIF.
          ENDLOOP.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.

  IF f_changed EQ abap_true.
    sy-ucomm = &apos;MASSREPL&apos;.
    &quot;&lt;outtab_ref&gt; = &lt;outtab&gt;.
    io_grid-&gt;set_delta_cells(
      EXPORTING
        it_delta_cells  = ft_delta    &quot; Delta Table
        i_modified      = abap_true    &quot; Modified
        i_frontend_only = abap_true   &quot; Update only at Frontend
    ).
    sy-ucomm = space.
    io_grid-&gt;check_changed_data( ).
  ENDIF.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="Z_FALV_CALL_MASS_SS" REMOTE="R" STEXT="Call mass replace selection screen">
    <importing PARAMETER="IT_MASS_SEL_COLUMNS" TYP="LVC_T_COL"/>
    <importing PARAMETER="IT_FCAT_MASS" TYP="LVC_T_FCAT"/>
    <exporting PARAMETER="ET_RSPARAMS" TYP="RSPARAMS_TT"/>
    <documentation PARAMETER="IT_MASS_SEL_COLUMNS" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="IT_FCAT_MASS" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="ET_RSPARAMS" KIND="P" INDEX=" 003"/>
    <fm_source_new>field-symbols: &lt;col&gt; like line of it_mass_sel_columns.
  data: ft_mass_sel_columns like it_mass_sel_columns.
  data: f_num(2) type n.


  ft_mass_sel_columns = it_mass_sel_columns.
  loop at it_fcat_mass assigning &lt;fcat&gt;.
    read table ft_mass_sel_columns[] with key fieldname = &lt;fcat&gt;-fieldname transporting no fields.
    if sy-subrc eq 0.
      add 1 to f_num.
      add_param_descr: f_num &lt;fcat&gt;-scrtext_s.
      change_parametr_type: f_num &lt;fcat&gt;-ref_table &lt;fcat&gt;-ref_field.
    endif.
  endloop.

  call selection-screen 1001 starting at 1 1.

  call function &apos;RS_REFRESH_FROM_SELECTOPTIONS&apos;
    exporting
      curr_report           = sy-repid
* IMPORTING
*   SP                    = SP
    tables
      selection_table       = et_rsparams
   exceptions
     not_found             = 1
     no_report             = 2
     others                = 3
            .
  if sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <PROG NAME="ZDEMO_FALV01" VARCL="X" SUBC="1" APPL="*" RSTAT="K" RMAND="001" RLOAD="E" FIXPT="X" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Simple Full Screen Call" LENGTH="34 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV standard fast call
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv01.

DATA: sflight TYPE STANDARD TABLE OF sflight.


START-OF-SELECTION.

  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD

  FROM sflight.


  &quot;FALV creation with only table passed
*Begin SMD
  DATA: falv TYPE REF TO zcl_falv.

*  data(falv) = zcl_falv=&gt;create( changing ct_table = sflight ).
  zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV01&apos;.

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV02" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Redefinitions" LENGTH="24 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV with redefinition of hotspot event handler
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv02.

DATA: sflight TYPE STANDARD TABLE OF sflight.


*----------------------------------------------------------------------*
*       CLASS lcl_test DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test DEFINITION INHERITING FROM zcl_falv.
  PUBLIC SECTION.

  PROTECTED SECTION.
    &quot;redefinition of event handler
    METHODS evt_hotspot_click REDEFINITION.
  PRIVATE SECTION.

ENDCLASS.                    &quot;lcl_test DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_test IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test IMPLEMENTATION.

  METHOD evt_hotspot_click.
    CASE e_column_id-fieldname.
      WHEN &apos;SEATSMAX&apos;.
        CALL FUNCTION &apos;POPUP_DISPLAY_MESSAGE&apos;
          EXPORTING
            titel = &apos;Hotspot is working&apos;   &quot; Title
            msgid = &apos;00&apos;
            msgty = &apos;I&apos;
            msgno = &apos;001&apos;
            msgv1 = &apos;Yupi!&apos;.
    ENDCASE.
  ENDMETHOD.                    &quot;evt_hotspot_click

ENDCLASS.                    &quot;lcl_test IMPLEMENTATION

START-OF-SELECTION.

  SELECT * UP TO 100 ROWS
*Begin SMD
*  into corresponding fields of table @sflight
    INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;creation of falv with local redefinition
  DATA falv TYPE REF TO lcl_test.
*Begin SMD
*  falv ?= lcl_test=&gt;create( exporting  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*                              CHANGING ct_table = sflight    ) .
  DATA: lo_falv TYPE REF TO zcl_falv.
  lcl_test=&gt;create( EXPORTING  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
                              CHANGING ct_table = sflight rv_falv = lo_falv    ) .
  falv ?= lo_falv.
*End SMD

  &quot;Add hotspot to column &apos;SEATSMAX&apos;
  falv-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_hotspot( abap_true ).
  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV02&apos;.
  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV03" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Full Screen GUI Status Dynamic Partly" LENGTH="48 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV full screen with partly dynamic GUI STATUS
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv03.

DATA: sflight TYPE STANDARD TABLE OF sflight.

*----------------------------------------------------------------------*
*       CLASS lcl_test DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test DEFINITION INHERITING FROM zcl_falv.
  PUBLIC SECTION.

  PROTECTED SECTION.
    &quot;redefinition of event handler
    METHODS evt_user_command REDEFINITION.
  PRIVATE SECTION.

ENDCLASS.                    &quot;lcl_test DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_test IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test IMPLEMENTATION.

  METHOD evt_user_command.
    CASE e_ucomm.
      WHEN zcl_falv_dynamic_status=&gt;b_01.
        CALL FUNCTION &apos;POPUP_DISPLAY_MESSAGE&apos;
          EXPORTING
            titel = &apos;Popup&apos;   &quot; Title
            msgid = &apos;00&apos;
            msgty = &apos;S&apos;
            msgno = &apos;001&apos;
            msgv1 = &apos;Button 1 clicked&apos;.
      WHEN zcl_falv_dynamic_status=&gt;b_02.
        CALL FUNCTION &apos;POPUP_DISPLAY_MESSAGE&apos;
          EXPORTING
            titel = &apos;Popup&apos;   &quot; Title
            msgid = &apos;00&apos;
            msgty = &apos;S&apos;
            msgno = &apos;001&apos;
            msgv1 = &apos;Button 2 clicked&apos;.
    ENDCASE.
  ENDMETHOD.                    &quot;evt_user_command
ENDCLASS.                    &quot;lcl_test IMPLEMENTATION

START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  into corresponding fields of table @sflight
INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;creation of falv with local redefinition
  DATA falv TYPE REF TO lcl_test.
*Begin SMD
*  falv ?= lcl_test=&gt;create( exporting  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*                              changing ct_table = sflight    ) .
  DATA: lo_falv TYPE REF TO zcl_falv.
  lcl_test=&gt;create( EXPORTING  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
                              CHANGING ct_table = sflight  rv_falv = lo_falv  ) .
  falv ?= lo_falv.
*End SMD
  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV03&apos;.

  &quot;Add button into GUI status at for function F01 (in partial dynamic GUI Status we can have up to 19 buttons)
  falv-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = zcl_falv_dynamic_status=&gt;b_01
      iv_text                = &apos;POPUP 01&apos;
      iv_icon                = icon_abc
*      iv_qinfo               =
*      iv_allowed             = ABAP_TRUE
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.
  ENDIF.

  &quot;Add button into GUI status at for function F02
  falv-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = zcl_falv_dynamic_status=&gt;b_02
      iv_text                = &apos;POPUP 02&apos;
      iv_icon                = icon_address
*      iv_qinfo               =
*      iv_allowed             = ABAP_TRUE
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.
  ENDIF.

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV04" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Full Screen GUI Status Dynamic Fully" LENGTH="47 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV full screen with fully dynamic GUI STATUS
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv04.

DATA: sflight TYPE STANDARD TABLE OF sflight.

*----------------------------------------------------------------------*
*       CLASS lcl_test DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test DEFINITION INHERITING FROM zcl_falv.
  PUBLIC SECTION.

  PROTECTED SECTION.
    &quot;redefinition of event handler
    METHODS evt_user_command REDEFINITION.
  PRIVATE SECTION.

ENDCLASS.                    &quot;lcl_test DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_test IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test IMPLEMENTATION.

  METHOD evt_user_command.
    CASE e_ucomm.
      WHEN zcl_falv_dynamic_status=&gt;b_01.
        CALL FUNCTION &apos;POPUP_DISPLAY_MESSAGE&apos;
          EXPORTING
            titel = &apos;Popup&apos;   &quot; Title
            msgid = &apos;00&apos;
            msgty = &apos;S&apos;
            msgno = &apos;001&apos;
            msgv1 = &apos;Button 1 clicked&apos;.
      WHEN zcl_falv_dynamic_status=&gt;b_02.
        CALL FUNCTION &apos;POPUP_DISPLAY_MESSAGE&apos;
          EXPORTING
            titel = &apos;Popup&apos;   &quot; Title
            msgid = &apos;00&apos;
            msgty = &apos;S&apos;
            msgno = &apos;001&apos;
            msgv1 = &apos;Button 2 clicked&apos;.
    ENDCASE.
  ENDMETHOD.                    &quot;evt_user_command

ENDCLASS.                    &quot;lcl_test IMPLEMENTATION

START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  into corresponding fields of table @sflight
    INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;creation of falv with local redefinition
  DATA falv TYPE REF TO lcl_test.
*Begin SMD
  DATA: lo_falv TYPE REF TO zcl_falv.
*  falv ?= lcl_test=&gt;create( exporting  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*                              changing ct_table = sflight    ) .

  lcl_test=&gt;create( EXPORTING  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
                               CHANGING ct_table = sflight rv_falv = lo_falv   ) .
  falv ?= lo_falv.
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV04&apos;.

  &quot;Set Gui status to fully dynamic (no standard buttons of ALV Grid)
  falv-&gt;gui_status-&gt;fully_dynamic = abap_true.

  &quot;Add button into GUI status at for function F01 (in partial dynamic GUI Status we can have up to 19 buttons)
  falv-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = zcl_falv_dynamic_status=&gt;b_01
      iv_text                = &apos;POPUP 01&apos;
      iv_icon                = icon_abc
*      iv_qinfo               =
*      iv_allowed             = ABAP_TRUE
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
  &quot;Add button into GUI status at for function F02
  falv-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = zcl_falv_dynamic_status=&gt;b_02
      iv_text                = &apos;POPUP 02&apos;
      iv_icon                = icon_address
*      iv_qinfo               =
*      iv_allowed             = ABAP_TRUE
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV05" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Full Screen ALV Toolbar" LENGTH="34 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV grid button adding, deleting, enabling, disabling
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv05.


DATA: sflight TYPE STANDARD TABLE OF sflight.


*----------------------------------------------------------------------*
*       CLASS lcl_test DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test DEFINITION INHERITING FROM zcl_falv.
  PUBLIC SECTION.

  PROTECTED SECTION.
    &quot;redefinition of event handler
    METHODS evt_user_command REDEFINITION.
  PRIVATE SECTION.

ENDCLASS.                    &quot;lcl_test DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_test IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test IMPLEMENTATION.

  METHOD evt_user_command.
    CASE e_ucomm.
      WHEN zcl_falv_dynamic_status=&gt;b_01.
        me-&gt;enable_button( me-&gt;mc_fc_print_back ).
      WHEN zcl_falv_dynamic_status=&gt;b_02.
        me-&gt;disable_button( me-&gt;mc_fc_print_back ).
        me-&gt;add_button(
          EXPORTING
            iv_function  = zcl_falv_dynamic_status=&gt;b_03
             iv_icon      = icon_alarm
        ).
      WHEN zcl_falv_dynamic_status=&gt;b_03.
        me-&gt;delete_button( zcl_falv_dynamic_status=&gt;b_03 ).
    ENDCASE.
  ENDMETHOD.                    &quot;evt_user_command

ENDCLASS.                    &quot;lcl_test IMPLEMENTATION

START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  into corresponding fields of table @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;creation of falv with local redefinition
  DATA falv TYPE REF TO lcl_test.
*Begin SMD
  DATA: lo_falv TYPE REF TO zcl_falv.
*  falv ?= lcl_test=&gt;create( exporting  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*                              changing ct_table = sflight    ) .
  lcl_test=&gt;create( exporting  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
                              CHANGING ct_table = sflight  rv_falv = lo_falv  ) .
  falv ?= lo_falv.
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV05&apos;.

  &quot;Set Gui status to fully dynamic (no standard buttons of ALV Grid)
  falv-&gt;gui_status-&gt;fully_dynamic = abap_true.

  &quot;Add button into GUI status at for function F01 (in partial dynamic GUI Status we can have up to 19 buttons)
  falv-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = zcl_falv_dynamic_status=&gt;b_01
      iv_text                = &apos;Enable Print&apos;
      iv_icon                = icon_activate
*      iv_qinfo               =
*      iv_allowed             = ABAP_TRUE
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.
  ENDIF.
  &quot;Add button into GUI status at for function F02
  falv-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = zcl_falv_dynamic_status=&gt;b_02
      iv_text                = &apos;Disable Print&apos;
      iv_icon                = icon_active_inactive
*      iv_qinfo               =
*      iv_allowed             = ABAP_TRUE
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.

  ENDIF.


  &quot;In default when we use full screen FALV, Grid toolbar is switched off, we must turn it on )
  falv-&gt;layout-&gt;set_no_toolbar( abap_false ).

  &quot;we Add buttons to ALV grid toolbar, I&apos;ll use same function like in GUI status
  falv-&gt;add_button(
    EXPORTING
      iv_function  = zcl_falv_dynamic_status=&gt;b_01
      iv_icon      = icon_activate
*      iv_quickinfo =
*      iv_butn_type =
*      iv_disabled  =
       iv_text      = &apos;Enable Print&apos;
*      iv_checked   =
  ).
  &quot;we Add buttons to ALV grid toolbar, I&apos;ll use same function like in GUI status
  falv-&gt;add_button(
    EXPORTING
      iv_function  = zcl_falv_dynamic_status=&gt;b_02
      iv_icon      = icon_active_inactive
*      iv_quickinfo =
*      iv_butn_type =
*      iv_disabled  =
       iv_text      = &apos;Disable Print&apos;
*      iv_checked   =
  ).

  &quot;remove button &quot;Details&quot; &amp; &quot;Info&quot; from standard Grid functions
  falv-&gt;delete_button( falv-&gt;mc_fc_detail ).
  falv-&gt;delete_button( falv-&gt;mc_fc_info ).
  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV06" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Full Screen Layout" LENGTH="29 "/>
    <textElement ID="S" KEY="P_USEMAR" ENTRY="        Use Mark Field?" LENGTH="23 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV full screen with layout changes
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv06.

TYPES: BEGIN OF t_sflight,
         mark TYPE bcselect.
        INCLUDE TYPE sflight.
TYPES: END OF t_sflight.

DATA: sflight TYPE STANDARD TABLE OF t_sflight.


PARAMETER: p_usemar AS CHECKBOX.

START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed
*Begin SMD
  DATA: falv TYPE REF TO zcl_falv.
*  data(falv) = zcl_falv=&gt;create( changing ct_table = sflight ).
  zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*Begin SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV06&apos;.

  &quot;All layout settings have set method in layout object of FALV
  &quot;it can be udated before output or during runtime of program
  falv-&gt;layout-&gt;set_zebra( abap_true  ).
  falv-&gt;layout-&gt;set_no_merging( abap_true ).

  &quot;additionally there is a attribute mark field which when is set
  &quot;then fcat for it is changed so it&apos;s checkbox field and
  &quot;when you&apos;ll use standard select all/deselect all functions then
  &quot;it will check/uncheck checkbox instead of selecting/deselecting rows
  IF p_usemar EQ abap_true.
    falv-&gt;set_mark_field( &apos;MARK&apos; ).
  ENDIF.

  &quot;user Layout option save changed to user-specific only
  falv-&gt;layout_save = &apos;U&apos;.
  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV07" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Full Screen Columns" LENGTH="30 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV full screen with fieldcatalog update
&quot;! done by Lukasz Pegiel for http://abapblog.com

REPORT zdemo_falv07.

DATA: sflight TYPE STANDARD TABLE OF sflight.


START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed
*Begin SMD
  DATA: falv TYPE REF TO zcl_falv.
*  data(falv) = zcl_falv=&gt;create( changing ct_table = sflight ).
  zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*Emd SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV07&apos;.


  &quot;Changing some of field catalog settings
  falv-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_hotspot( abap_true ).
  falv-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_color( &apos;C700&apos; ).

  falv-&gt;column( &apos;PLANETYPE&apos; )-&gt;set_color( &apos;C300&apos; ).
  falv-&gt;column( &apos;PLANETYPE&apos; )-&gt;set_no_merging( abap_true ).

  falv-&gt;column( &apos;PAYMENTSUM&apos; )-&gt;set_no_zero( abap_true ).

  &quot;or

*Begin SMD
  DATA: price TYPE REF TO zcl_falv_column.
*  data(price) = falv-&gt;column( &apos;PRICE&apos; ).
  price = falv-&gt;column( &apos;PRICE&apos; ).
*End SMD
  price-&gt;set_no_out( abap_true ).
*Begin SMD
  DATA: occup TYPE REF TO zcl_falv_column.
*  data(occup) = falv-&gt;column( &apos;SEATSOCC&apos; ).
  occup = falv-&gt;column( &apos;SEATSOCC&apos; ).
*End SMD
  occup-&gt;set_no_zero( abap_true ).
  occup-&gt;set_no_merging( abap_true  ).



  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV08" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Mass Replace Function" LENGTH="32 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV with mass replace function
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv08.

DATA: sflight TYPE STANDARD TABLE OF sflight.


START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed
*Begom SMD
  DATA: falv TYPE REF TO zcl_falv.
*  data(falv) = zcl_falv=&gt;create( changing ct_table = sflight ).
  zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV08&apos;.

  &quot;set whole grid editable
  falv-&gt;layout-&gt;set_edit( abap_true ).
  falv-&gt;set_editable( iv_modify = abap_true ).

  &quot;show default grid toolbar
  falv-&gt;layout-&gt;set_no_toolbar( abap_false ).

  &quot;Add mass replace function to grid toolbar (can be also added to GUI STATUS as well )
  falv-&gt;add_button(
    EXPORTING
      iv_function  = falv-&gt;fc_mass_replace
       iv_icon      = icon_replace
*      iv_quickinfo =
*      iv_butn_type =
*      iv_disabled  =
       iv_text      = &apos;Mass replace&apos;
*      iv_checked   =
  ).

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV09" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Cell Settings" LENGTH="24 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV with cell settings
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv09.

TYPES: BEGIN OF t_sflight.
        INCLUDE TYPE sflight.
TYPES:  styles TYPE lvc_t_styl,
        END OF t_sflight.

DATA: sflight TYPE STANDARD TABLE OF t_sflight.


*----------------------------------------------------------------------*
*       CLASS lcl_test DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test DEFINITION INHERITING FROM zcl_falv.
  PUBLIC SECTION.

  PROTECTED SECTION.
    &quot;redefinition of event handler
    METHODS evt_hotspot_click REDEFINITION.
  PRIVATE SECTION.

ENDCLASS.                    &quot;lcl_test DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_test IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test IMPLEMENTATION.

  METHOD evt_hotspot_click.
    CASE e_column_id-fieldname.
      WHEN &apos;SEATSMAX&apos;.
        me-&gt;set_cell_disabled(
          EXPORTING
            iv_fieldname = e_column_id-fieldname
            iv_row       = es_row_no-row_id
        ).
        me-&gt;set_cell_button(
          EXPORTING
            iv_fieldname = &apos;PRICE&apos;
            iv_row       = es_row_no-row_id
        ).

        me-&gt;set_cell_hotspot(
          EXPORTING
            iv_fieldname = &apos;CARRID&apos;
            iv_row       = es_row_no-row_id
        ).

        me-&gt;soft_refresh( ).
    ENDCASE.
  ENDMETHOD.                    &quot;evt_hotspot_click

ENDCLASS.                    &quot;lcl_test IMPLEMENTATION

START-OF-SELECTION.

  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;creation of falv with local redefinition
  DATA falv TYPE REF TO lcl_test.
*Begin SMD
  DATA: lo_falv TYPE REF TO zcl_falv.
*  falv ?= lcl_test=&gt;create( exporting  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*                              changing ct_table = sflight    ) .
  lcl_test=&gt;create( EXPORTING  i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
                              CHANGING ct_table = sflight  rv_falv = lo_falv  ) .
  falv ?= lo_falv.
*End SMD


  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV09&apos;.

  &quot;set whole grid editable
  falv-&gt;layout-&gt;set_edit( abap_true ).
  falv-&gt;set_editable( iv_modify = abap_true ).

  &quot;Set style column name
  falv-&gt;layout-&gt;set_stylefname( &apos;STYLES&apos; ).

  falv-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_hotspot( abap_true  ).

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV10" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Colors" LENGTH="17 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV full screen with color settings
&quot;! done by Lukasz Pegiel for http://abapblog.com

REPORT zdemo_falv10.

TYPES: BEGIN OF t_sflight.
        INCLUDE TYPE sflight.
TYPES:  cell_color TYPE lvc_t_scol,
        row_color  TYPE char4,
        END OF t_sflight.

DATA: sflight TYPE STANDARD TABLE OF t_sflight.

START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed
*Begin SMD
  DATA: falv TYPE REF TO zcl_falv.
*  data(falv) = zcl_falv=&gt;create( changing ct_table = sflight ).
  zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV10&apos;.


  &quot;Changing some of field catalog settings for column colors
  falv-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_color( &apos;C700&apos; ).

  &quot;setting of color fields -&gt; this must be done before calling
  &quot;set_row_colors or set_cell_color
  falv-&gt;layout-&gt;set_ctab_fname( &apos;CELL_COLOR&apos; ).
  falv-&gt;layout-&gt;set_info_fname( &apos;ROW_COLOR&apos;  ).

  &quot;change some row colors
  DO 10 TIMES.
    falv-&gt;set_row_color(
      EXPORTING
        iv_color = &apos;C300&apos;
        iv_row   = 2 * sy-index
    ).
  ENDDO.

  &quot;change some cell colors.
*Begin SMD
  DATA: ls_color TYPE lvc_s_colo.
  ls_color-col = 5.
  ls_color-int = 0.
  ls_color-inv = 0.

*End SMD
  DO 10 TIMES.
    falv-&gt;set_cell_color(
      EXPORTING
        iv_fieldname = &apos;PLANETYPE&apos;
*Begin SMD
*        iv_color     = value #( col = 5 int = 0 inv = 0  )
iv_color     = ls_color
*End SMD
        iv_row       = 3 * sy-index
    ).

  ENDDO.



  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV11" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Editable" LENGTH="19 "/>
    <textElement ID="S" KEY="P_CELL" ENTRY="        Set cell editable" LENGTH="25 "/>
    <textElement ID="S" KEY="P_COLUMN" ENTRY="        Set column editable" LENGTH="27 "/>
    <textElement ID="S" KEY="P_WHOLE" ENTRY="        Set whole grid editable" LENGTH="31 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV with edit settings
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv11.

TYPES: BEGIN OF t_sflight.
        INCLUDE TYPE sflight.
TYPES:  styles TYPE lvc_t_styl,
        END OF t_sflight.

DATA: sflight TYPE STANDARD TABLE OF t_sflight.


PARAMETERS: p_whole  RADIOBUTTON GROUP gr1 DEFAULT &apos;X&apos;,
            p_column RADIOBUTTON GROUP gr1,
            p_cell   RADIOBUTTON GROUP gr1.


START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed

*Begin SMD
  DATA: falv TYPE REF TO zcl_falv.
*  data(falv) = zcl_falv=&gt;create( changing ct_table = sflight ).
  zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV11&apos;.

  IF p_whole EQ abap_true.
    &quot;set whole grid editable
    falv-&gt;layout-&gt;set_edit( abap_true ).
  ELSEIF p_column EQ abap_true.
    falv-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_edit( abap_true ).
    falv-&gt;column( &apos;PLANETYPE&apos; )-&gt;set_edit( abap_true ).
  ELSE.
    &quot;Set style column name
    falv-&gt;layout-&gt;set_stylefname( &apos;STYLES&apos; ).
    DO 20 TIMES.
      falv-&gt;set_cell_enabled(
        EXPORTING
          iv_fieldname = &apos;FLDATE&apos;
          iv_row       = 2 * sy-index
          ).
    ENDDO.
  ENDIF.

  &quot;Change grid to edit mode
  falv-&gt;set_editable( iv_modify = abap_true ).

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV12" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Error Log" LENGTH="20 "/>
    <textElement ID="S" KEY="P_EMBEED" ENTRY="        Embeeded Error Log" LENGTH="26 "/>
    <textElement ID="S" KEY="P_NOTEMB" ENTRY="        Popup Error Log" LENGTH="23 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV with error log
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv12.

DATA: sflight TYPE STANDARD TABLE OF sflight.


PARAMETERS: p_embeed RADIOBUTTON GROUP gr1 DEFAULT &apos;X&apos;,
            p_notemb RADIOBUTTON GROUP gr1.


START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed
*Begin SMD
  DATA: falv TYPE REF TO zcl_falv.
*End SMD
  IF p_embeed EQ abap_true.
*Begin SMD
*   data(falv) = zcl_falv=&gt;create( exporting i_applog_embedded = abap_true  changing ct_table = sflight ).
    zcl_falv=&gt;create( EXPORTING i_applog_embedded = abap_true  CHANGING ct_table = sflight rv_falv = falv ).
*End SMD
  ELSE.
*Begin SMD
*   falv = zcl_falv=&gt;create( changing ct_table = sflight ).
    zcl_falv=&gt;create( CHANGING ct_table = sflight rv_falv = falv ).
*End SMD
  ENDIF.
  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV12&apos;.

  &quot;set whole grid editable
  falv-&gt;layout-&gt;set_edit( abap_true ).
  &quot;Change grid to edit mode
  falv-&gt;set_editable( iv_modify = abap_true ).

  &quot;Display full screen grid
  falv-&gt;display( ).</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV13" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Mix Demo" LENGTH="14 "/>
   </language>
  </textPool>
  <dynpros>
   <dynpro PROG="ZDEMO_FALV13" DNUM="0100" FNUM="0100" BZMX="0 " BZBR="0 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="200 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="Demo FALV">
    <dynprofield FNAM="CC_MAIN" DIDX="00C8" FLG1="00" FLG2="30" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="FF" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="0A" ADEZ="0A"/>
    <dynprofield FNAM="OK_CODE" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
 module pbo.

PROCESS AFTER INPUT.
 module pai.</dynproflowsource>
   </dynpro>
  </dynpros>
  <source>&quot;! This is demo for FALV Mix Demo. It contains many features, many FALVs in one program
&quot;! and a usage of a own screen with own container and FALV
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv13.

TYPES: BEGIN OF t_sflight.
        INCLUDE TYPE sflight.
TYPES: style TYPE lvc_t_styl,
       END OF t_sflight.

DATA: sflight TYPE STANDARD TABLE OF t_sflight.
SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

*----------------------------------------------------------------------*
*       CLASS lcl_test DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test DEFINITION INHERITING FROM zcl_falv.
  PUBLIC SECTION.

  PROTECTED SECTION.
    METHODS evt_at_set_title REDEFINITION.
  PRIVATE SECTION.

ENDCLASS.                    &quot;lcl_test DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_test IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_test IMPLEMENTATION.

  METHOD evt_at_set_title.

  ENDMETHOD.                    &quot;evt_at_set_title

ENDCLASS.                    &quot;lcl_test IMPLEMENTATION

DATA: falv_screen TYPE REF TO lcl_test.
DATA: ok_code TYPE sy-ucomm.


START-OF-SELECTION.
  &quot;creation of falv with local redefinition
  DATA falv_redef TYPE REF TO lcl_test.
*Begin SMD
*  falv_redef ?= lcl_test=&gt;create( exporting i_applog_embedded = abap_false  i_popup = abap_true
*                              i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*                              changing ct_table = sflight    ) .
  DATA: lo_falv TYPE REF TO zcl_falv.
  lcl_test=&gt;create( EXPORTING i_applog_embedded = abap_false  i_popup = abap_true
                              i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
                              CHANGING ct_table = sflight  rv_falv = lo_falv  ) .
  falv_redef ?= lo_falv.
*Emd SMD

  falv_redef-&gt;add_button(
    EXPORTING
      iv_function  = &apos;F111&apos;
      iv_icon      = icon_refresh
      iv_butn_type = zcl_falv=&gt;button_normal
  ).
  falv_redef-&gt;delete_button( zcl_falv=&gt;mc_fc_detail ).
  falv_redef-&gt;display( ).
  &quot;creation of standard falv
*Begin SMD
*  data(falv_stand) = zcl_falv=&gt;create( exporting i_applog_embedded = abap_true changing ct_table = sflight   ).
  DATA: falv_stand TYPE REF TO zcl_falv.
  zcl_falv=&gt;create( EXPORTING i_applog_embedded = abap_true CHANGING ct_table = sflight rv_falv = falv_stand  ).
*End SMD

  falv_stand-&gt;gui_status-&gt;add_button(
    EXPORTING
      iv_button              = falv_stand-&gt;gui_status-&gt;b_15
      iv_text                = &apos;F15&apos;
      iv_icon                = icon_refresh
      iv_qinfo               = &apos;Test d&apos;
      iv_allowed             = abap_true
    EXCEPTIONS
      button_already_filled  = 1
      button_does_not_exists = 2
      icon_and_text_empty    = 3
      OTHERS                 = 4
  ).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
  falv_stand-&gt;gui_status-&gt;add_button(
  EXPORTING
    iv_button              = falv_stand-&gt;gui_status-&gt;b_16
    iv_text                = &apos;F16&apos;
    iv_icon                = icon_refresh
    iv_qinfo               = &apos;Test d&apos;
    iv_allowed             = abap_true
  EXCEPTIONS
    button_already_filled  = 1
    button_does_not_exists = 2
    icon_and_text_empty    = 3
    OTHERS                 = 4
).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  falv_stand-&gt;gui_status-&gt;add_button(
  EXPORTING
    iv_button              = falv_stand-&gt;gui_status-&gt;b_17
    iv_text                = &apos;F17&apos;
    iv_icon                = icon_refresh
    iv_qinfo               = &apos;Test d&apos;
    iv_allowed             = abap_true
  EXCEPTIONS
    button_already_filled  = 1
    button_does_not_exists = 2
    icon_and_text_empty    = 3
    OTHERS                 = 4
).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  falv_stand-&gt;gui_status-&gt;add_button(
EXPORTING
  iv_button              = falv_stand-&gt;gui_status-&gt;b_18
  iv_text                = &apos;F18&apos;
  iv_icon                = icon_refresh
  iv_qinfo               = &apos;Test d&apos;
  iv_allowed             = abap_true
EXCEPTIONS
  button_already_filled  = 1
  button_does_not_exists = 2
  icon_and_text_empty    = 3
  OTHERS                 = 4
).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  falv_stand-&gt;gui_status-&gt;add_button(
EXPORTING
  iv_button              = falv_stand-&gt;gui_status-&gt;b_19
  iv_text                = &apos;F19&apos;
  iv_icon                = icon_refresh
  iv_qinfo               = &apos;Test d&apos;
  iv_allowed             = abap_true
EXCEPTIONS
  button_already_filled  = 1
  button_does_not_exists = 2
  icon_and_text_empty    = 3
  OTHERS                 = 4
).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  falv_stand-&gt;gui_status-&gt;add_button(
EXPORTING
  iv_button              = falv_stand-&gt;gui_status-&gt;b_13
  iv_text                = &apos;F13&apos;
  iv_icon                = icon_refresh
  iv_qinfo               = &apos;Test d&apos;
  iv_allowed             = abap_true
EXCEPTIONS
  button_already_filled  = 1
  button_does_not_exists = 2
  icon_and_text_empty    = 3
  OTHERS                 = 4
).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  falv_stand-&gt;gui_status-&gt;add_button(
  EXPORTING
    iv_button              = falv_stand-&gt;gui_status-&gt;b_14
    iv_text                = &apos;F14&apos;
    iv_icon                = icon_refresh
    iv_qinfo               = &apos;Test d&apos;
    iv_allowed             = abap_true
  EXCEPTIONS
    button_already_filled  = 1
    button_does_not_exists = 2
    icon_and_text_empty    = 3
    OTHERS                 = 4
).
  IF sy-subrc &lt;&gt; 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


  falv_stand-&gt;display( ).

  &quot;copy of standard falv + some changes of descriptions
*Begin SMD
*  data(falv_stand_copy) = falv_stand-&gt;create_by_copy(  ).
  DATA: falv_stand_copy TYPE REF TO zcl_falv.
  falv_stand_copy = falv_stand-&gt;create_by_copy(  ).
*End SMD
  falv_stand_copy-&gt;column( &apos;CARRID&apos; )-&gt;set_scrtext_l( &apos;test&apos; ).
  falv_stand_copy-&gt;column( &apos;CARRID&apos; )-&gt;set_scrtext_m( &apos;test&apos; ).
  falv_stand_copy-&gt;column( &apos;CARRID&apos; )-&gt;set_scrtext_s( &apos;test&apos; ).
  falv_stand_copy-&gt;column( &apos;CARRID&apos; )-&gt;set_reptext( &apos;test&apos; ).
  falv_stand_copy-&gt;variant-report = sy-repid.
  falv_stand_copy-&gt;layout_save = &apos;X&apos;.
  falv_stand_copy-&gt;layout-&gt;set_zebra( abap_true  ).
  falv_stand_copy-&gt;display( ).

  &quot;copy of falv with own local redefinitions
*Begin SMD
*  data(falv_redef_copy) = falv_redef-&gt;create_by_copy(  ).
  DATA: falv_redef_copy TYPE REF TO zcl_falv.
  falv_redef_copy = falv_redef-&gt;create_by_copy(  ).
*End SMD
  falv_redef_copy-&gt;display( ).

  falv_stand-&gt;display( ).

  falv_stand_copy-&gt;display( ).

  falv_redef_copy-&gt;column( &apos;SEATSMAX&apos; )-&gt;set_edit( abap_true ).
  falv_redef_copy-&gt;layout-&gt;set_edit( abap_true ).
  falv_redef_copy-&gt;set_editable( ).
  falv_redef_copy-&gt;layout-&gt;set_stylefname( &apos;STYLE&apos; ).
  falv_redef_copy-&gt;set_cell_disabled(
    EXPORTING
      iv_fieldname = &apos;SEATSMAX&apos;
      iv_row       = 1
  ).
  falv_redef_copy-&gt;add_button(
    EXPORTING
      iv_function  = zcl_falv=&gt;fc_mass_replace
      iv_icon      = icon_replace
  ).
  falv_redef_copy-&gt;refresh_table_display( ).
  falv_redef_copy-&gt;display( ).

  falv_stand-&gt;display( ).

  falv_redef_copy-&gt;display( ).

  CALL SCREEN 100.
*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO  OUTPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE pbo OUTPUT.
  SET PF-STATUS &apos;DYNAMIC_STATUS_PART&apos; OF PROGRAM &apos;SAPLZFALV&apos;.
  IF falv_screen IS INITIAL.
*Begin SMD
*    falv_screen ?= lcl_test=&gt;create( exporting
*      i_parent = NEW cl_gui_custom_container( container_name = &apos;CC_MAIN&apos; )
*      i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
*      CHANGING ct_table = sflight    ) .
    DATA: lo_falv2 TYPE REF TO zcl_falv,
          lo_container TYPE REF TO cl_gui_custom_container.
    CREATE OBJECT lo_container
      EXPORTING
        container_name = &apos;CC_MAIN&apos;.
    lcl_test=&gt;create( EXPORTING
      i_parent = lo_container
      i_subclass = cl_abap_classdescr=&gt;describe_by_name( p_name = &apos;LCL_TEST&apos; )
      CHANGING ct_table = sflight  rv_falv = lo_falv2  ) .
    falv_screen ?=   lo_falv2.
*End SMD
    falv_screen-&gt;column( &apos;CARRID&apos; )-&gt;set_reptext( &apos;test&apos; ).
    falv_screen-&gt;display( ).
  ENDIF.
ENDMODULE.                    &quot;pbo OUTPUT

*----------------------------------------------------------------------*
*  MODULE pai INPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE pai INPUT.
  falv_screen-&gt;pai(
    EXPORTING
      iv_dynnr = sy-dynnr
    CHANGING
      c_ucomm  = ok_code
  ).

ENDMODULE.                    &quot;pai INPUT</source>
 </PROG>
 <PROG NAME="ZDEMO_FALV14" VARCL="X" DBAPL="S" SUBC="1" RMAND="001" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Demo Popup" LENGTH="16 "/>
    <textElement ID="S" KEY="P_COLEND" ENTRY="        End column" LENGTH="18 "/>
    <textElement ID="S" KEY="P_COLST" ENTRY="        Start column" LENGTH="20 "/>
    <textElement ID="S" KEY="P_DEFAU" ENTRY="        Default size" LENGTH="20 "/>
    <textElement ID="S" KEY="P_ROWEND" ENTRY="        End row" LENGTH="15 "/>
    <textElement ID="S" KEY="P_ROWST" ENTRY="        Start row" LENGTH="17 "/>
    <textElement ID="S" KEY="P_SET" ENTRY="        Customized size" LENGTH="23 "/>
   </language>
  </textPool>
  <source>&quot;! This is demo for FALV standard fast call of pppup
&quot;! done by Lukasz Pegiel for http://abapblog.com
REPORT zdemo_falv14.

DATA: sflight TYPE STANDARD TABLE OF sflight.


PARAMETERS: p_defau  RADIOBUTTON GROUP gr1 DEFAULT &apos;X&apos;,
            p_set    RADIOBUTTON GROUP gr1,
            p_rowst  TYPE i,
            p_rowend TYPE i,
            p_colst  TYPE i,
            p_colend TYPE i.

START-OF-SELECTION.


  SELECT * UP TO 100 ROWS
*Begin SMD
*  INTO CORRESPONDING FIELDS OF TABLE @sflight
  INTO CORRESPONDING FIELDS OF TABLE sflight
*End SMD
  FROM sflight.

  &quot;FALV creation with only table passed
*Begin SMD
*  data(falv) = zcl_falv=&gt;create( exporting i_popup = abap_true changing ct_table = sflight ).
  DATA: falv TYPE REF TO zcl_falv.
  zcl_falv=&gt;create( EXPORTING i_popup = abap_true CHANGING ct_table = sflight rv_falv = falv ).
*End SMD

  &quot;Add title variable
  falv-&gt;title_v1 = &apos;ZDEMO_FALV14&apos;.

  IF p_defau EQ abap_true.
    &quot;Display popup with default size
    falv-&gt;display( ).
  ELSE.
    &quot;display popup with customized size
    falv-&gt;display(
        iv_start_row    = p_rowst
        iv_start_column = p_colst
        iv_end_row      = p_rowend
        iv_end_column   = p_colend
    ).
  ENDIF.</source>
 </PROG>
</nugget>
