<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZDEMO_FALV16">
 <PROG NAME="ZDEMO_FALV16" VARCL="X" DBAPL="S" SUBC="1" RMAND="100" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="FALV: Split container on custom container screen" LENGTH="48 "/>
   </language>
  </textPool>
  <dynpros>
   <dynpro PROG="ZDEMO_FALV16" DNUM="0100" FNUM="0100" BZMX="200 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="200 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="Demo scree">
    <dynprofield FNAM="MAIN" DIDX="00C8" FLG1="00" FLG2="30" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="FF" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="0A" ADEZ="0A"/>
    <dynprofield FNAM="OK_CODE" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>process before output.
  module pbo.
*
process after input.
  module pai.</dynproflowsource>
   </dynpro>
  </dynpros>
  <source>report zdemo_falv16.


data: spfli type standard table of spfli,
      sflight type standard table of sflight,
      falv_first type ref to zcl_falv,
      falv_second type ref to zcl_falv,
      splitter type ref to cl_gui_splitter_container.

      constants: custom_container_name type char30 value &apos;MAIN&apos;.


      initialization.

      select * up to 50 rows into corresponding fields of table @spfli
        from spfli.

      select * up to 100 rows into corresponding fields of table @sflight
        from sflight.


      call screen 0100.

     module pbo output.
        set pf-status &apos;DYNAMIC_STATUS&apos; of program &apos;SAPLZFALV&apos;.

        if splitter is initial.
            splitter = new cl_gui_splitter_container( columns = 1
                                                      rows = 2
                                                      parent = new cl_gui_custom_container( container_name = custom_container_name )
                                                     ).
            falv_first = zcl_falv=&gt;create( exporting i_parent =  splitter-&gt;get_container(
                                                                                        row       = 1
                                                                                        column    = 1
                                                                                    )
                                           changing ct_table = spfli ).

            falv_second = zcl_falv=&gt;create( exporting i_parent = splitter-&gt;get_container(
                                                                                        row       = 2
                                                                                        column    = 1
                                                                                    )
                                           changing ct_table = sflight ).
           falv_first-&gt;display( ).
           falv_second-&gt;display( ).
        endif.
     endmodule.

     module pai input.

        case sy-ucomm.
            when &apos;BACK&apos; or &apos;UP&apos; or &apos;EXIT&apos;.
             leave to screen 0.
         endcase.

     endmodule.</source>
 </PROG>
</nugget>
