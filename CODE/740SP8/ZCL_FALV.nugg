<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZCL_FALV">
 <CLAS CLSNAME="ZCL_FALV" VERSION="1" LANGU="E" DESCRIPT="Fast ALV" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CL_GUI_ALV_GRID">
  <types CLSNAME="ZCL_FALV" CMPNAME="T_COLUMN" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="3" TYPE="ZCL_FALV_COLUMN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <types CLSNAME="ZCL_FALV" CMPNAME="T_SUBCL_CALL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="10 " SRCCOLUMN1="11 " SRCROW2="15 " SRCCOLUMN2="29 " TYPESRC_LENG="192 " TYPESRC="begin of t_subcl_call,
             progname type progname,
             line     type i,
             column   type i,
             class    type string,
           end of t_subcl_call
"/>
  <types CLSNAME="ZCL_FALV" CMPNAME="TT_SUBCL_CALL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="16 " SRCCOLUMN1="11 " SRCROW2="16 " SRCCOLUMN2="94 " TYPESRC_LENG="86 " TYPESRC="tt_subcl_call type sorted table of t_subcl_call with unique key progname line column
"/>
  <friends CLSNAME="ZCL_FALV" REFCLSNAME="ZCL_FALV_LAYOUT" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <implementing CLSNAME="ZCL_FALV" REFCLSNAME="IF_OS_CLONE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
  <events CLSNAME="ZCL_FALV" CMPNAME="AT_SET_PF_STATUS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " EVTDECLTYP="0" BCEVTCAT="00"/>
  <events CLSNAME="ZCL_FALV" CMPNAME="AT_SET_TITLE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " EVTDECLTYP="0" BCEVTCAT="00"/>
  <localImplementation></localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_FALV" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="APPLICATION_LOG_EMBEDDED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUILT_IN_SCREEN" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_CHECKBOX" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="25 " ATTDECLTYP="2" ATTVALUE="&apos;5&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_MENU" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " ATTDECLTYP="2" ATTVALUE="&apos;2&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_MENU_DEFAULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " ATTDECLTYP="2" ATTVALUE="&apos;1&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_MENU_ENTRY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="26 " ATTDECLTYP="2" ATTVALUE="&apos;6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_NORMAL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " ATTDECLTYP="2" ATTVALUE="&apos;0&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_RADIOBUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " ATTDECLTYP="2" ATTVALUE="&apos;4&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="BUTTON_SEPARATOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " ATTDECLTYP="2" ATTVALUE="&apos;3&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TB_BTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="CC_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;CC_GRID&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR30" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="COLUMNS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="7 " SRCCOLUMN1="10 " SRCROW2="7 " SRCCOLUMN2="73 " TYPESRC_LENG="66 " TYPESRC="columns type sorted table of t_column with unique key table_line
"/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="C_FSCR_REPID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;SAPLZFALV&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-REPID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="C_SCREEN_FULL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;0100&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-DYNNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="C_SCREEN_POPUP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;0200&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-DYNNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="DELAY_CHANGE_SELECTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="46 " ATTDECLTYP="0" ATTRDONLY="X" ATTVALUE="20" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="DELAY_MOVE_CURRENT_CELL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="45 " ATTDECLTYP="0" ATTRDONLY="X" ATTVALUE="20" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="EXCLUDE_FUNCTIONS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="31 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="UI_FUNCTIONS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FCAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="32 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_T_FCAT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_BACK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " ATTDECLTYP="2" ATTVALUE="&apos;BACK&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_CANCEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " ATTDECLTYP="2" ATTVALUE="&apos;CANCEL&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_EXIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " ATTDECLTYP="2" ATTVALUE="&apos;EXIT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_FIND" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " ATTDECLTYP="2" ATTVALUE="&apos;FIND&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_FIND_NEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " ATTDECLTYP="2" ATTVALUE="&apos;FINDNEXT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_FIRST_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " ATTDECLTYP="2" ATTVALUE="&apos;PGHOME&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_LAST_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " ATTDECLTYP="2" ATTVALUE="&apos;PGEND&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_MASS_REPLACE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " ATTDECLTYP="2" ATTVALUE="&apos;MASS_REPL&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_NEXT_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " ATTDECLTYP="2" ATTVALUE="&apos;PGDOWN&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_PREVIOUS_PAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " ATTDECLTYP="2" ATTVALUE="&apos;PGUP&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_PRINT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " ATTDECLTYP="2" ATTVALUE="&apos;PRINT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_SAVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " ATTDECLTYP="2" ATTVALUE="&apos;&amp;DATA_SAVE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FC_UP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " ATTDECLTYP="2" ATTVALUE="&apos;UP&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="FILTER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="34 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_T_FILT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="GUI_STATUS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="37 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_FALV_DYNAMIC_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="HEIGHT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="LAYOUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="36 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_FALV_LAYOUT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="LAYOUT_SAVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="30 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR01" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="LVC_LAYOUT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="35 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_S_LAYO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="MAIN_CONTAINER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="27 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="OUTTAB" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="39 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="RESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SCREEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="38 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-DYNNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SORT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="33 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LVC_T_SORT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SPLIT_CONTAINER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="28 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_SPLITTER_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="SUBCLASS_TYPE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_ABAP_TYPEDESCR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="40 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V2" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="41 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V3" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="42 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V4" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="43 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TITLE_V5" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="44 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TOOLBAR_ADDED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TTB_BUTTON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TOOLBAR_DELETED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TTB_BUTTON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="TOOLBAR_DISABLED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TTB_BUTTON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FALV" CMPNAME="VARIANT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="29 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DISVARIANT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_FALV" REFCLSNAME="CL_GUI_ALV_GRID" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZCL_FALV" REFCLSNAME="CL_GUI_ALV_GRID" VERSION="1" MTDNAME="SET_FRONTEND_FIELDCATALOG" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_FALV" REFCLSNAME="CL_GUI_ALV_GRID" VERSION="1" MTDNAME="SET_FRONTEND_LAYOUT" EXPOSURE="2"/>
  </inheritance>
  <interfaceMethod CLSNAME="ZCL_FALV" CPDNAME="IF_OS_CLONE~CLONE">
   <source>method if_os_clone~clone.
    system-call objmgr clone me to result.
  endmethod.</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_ICON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ICON_D" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_QUICKINFO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ICONQUICK" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_BUTN_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TB_BTYPE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_DISABLED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TEXT40" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ADD_BUTTON" SCONAME="IV_CHECKED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <source>method add_button.
    if not line_exists( toolbar_added[ function = iv_function ] ).
      insert value #( function = iv_function
                      icon = conv #( iv_icon )
                      quickinfo = iv_quickinfo
                      butn_type = iv_butn_type
                      disabled = iv_disabled
                      text = iv_text
                      checked = iv_checked
                        ) into table toolbar_added .

      delete toolbar_deleted where function = iv_function.
      me-&gt;refresh_toolbar( ).
    endif.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="BUILD_COLUMNS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method build_columns.
    loop at fcat assigning field-symbol(&lt;fcat&gt;).
      data(column) = new zcl_falv_column( iv_fieldname = &lt;fcat&gt;-fieldname io_falv = me ).
      insert column into table columns.
    endloop.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CHECK_IF_CALLED_FROM_SUBCLASS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CHECK_IF_CALLED_FROM_SUBCLASS" SCONAME="RO_SUBCLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method check_if_called_from_subclass.
*    types: t_tokens     type table of stokex,
*           t_statements type table of sstmnt,
*           t_levels     type table of slevel.
*
*    data: callstack      type abap_callstack,
*          et_callstack   type sys_callst,
*          src            type table of string,
*          program        type char255,
*          tokens         type table of stokes,
*          owerflow       type table of stokex,
*          statements     type table of sstmnt,
*          keywords       type table of char255,
*          levels         type table of slevel,
*          overflow(4096).          .
*
*    call function &apos;SYSTEM_CALLSTACK&apos;
**      exporting
**        max_level    = 0
*      importing
*        callstack    = callstack
*        et_callstack = et_callstack[].    &quot; System Callstack Table
*
*
*    data:
*      progtab  type table of string,
*      progline type string,
*      idx      type sy-tabix,
*      moff     type i,
*      counter  type i.
*
*    field-symbols &lt;progline&gt; type string.
*
*    program = callstack[ 3 ]-mainprogram.
*    read report program into src.
*
*    scan abap-source src
*              tokens      into tokens
*              levels      into levels
*              statements  into statements
*              &quot;REPLACING   edit_include_tab
*              include program from program
*              frame   program from program
*
*              &quot;overflow into owerflow
*              with comments
**              WITH DECLARATIONS
**              WITH BLOCKS
*              with includes.
*
**    scan abap-source src tokens into tokens
**                         statements into statements
**                         &quot;WITH LIST TOKENIZATION
**                         with includes
**                         with comments
**                         WITH TYPE-POOLS
**                         PRESERVING IDENTIFIER ESCAPING
**&quot;                         with declarations
**                         with analysis.
*
*    data(comp) = cl_abap_compiler=&gt;create(
*                   p_name             =  callstack[ 3 ]-mainprogram
*                   p_include          =  callstack[ 3 ]-include
**                 p_includes         =
**                 p_substitutions    =
**                 p_only_interface   =
*                   p_no_package_check = abap_true
*               ).
*
*
*    comp-&gt;get_single_ref(
*      exporting
*        p_full_name       =  &apos;\TY:ZCL_FALV\ME:CREATE&apos;   &quot; Complete Name of Object
*        p_grade           =  1   &quot; Grade of Use
*      importing
*        p_result          =    data(res2) &quot; Where-Used List
*      exceptions
*        others            = 5
*    ).
*    if sy-subrc &lt;&gt; 0.
** message id sy-msgid type sy-msgty number sy-msgno
**            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*    endif.
*
*
*    assign src[ callstack[ 3 ]-line ] to field-symbol(&lt;line&gt;).
*    if &lt;line&gt; is assigned.
*
*      data: teststr type string.
*      data: tokst type abptokens.
*      loop at src assigning field-symbol(&lt;res&gt;).
*        if teststr is not initial.
*          teststr = teststr &amp;&amp; cl_abap_char_utilities=&gt;newline &amp;&amp; &lt;res&gt;.
*        else.
*          teststr = &lt;res&gt;.
*        endif.
**        do &lt;res&gt;-offset times.
**          data(current_char) = &lt;res&gt;-offset - sy-index.
**          if &lt;line&gt;+current_char(1) eq ` `.
**            exit.
**          endif.
**        enddo.
**
**        &quot;method call can be done directly from beginning of the line
**        &quot;so I must check if there is a space in current character or not
**        &quot;one more time
**        if &lt;line&gt;+current_char(1) eq ` `.
**          add 1 to current_char.
**        endif.
**        data(size) = &lt;res&gt;-offset - current_char.
**        data(class) = &lt;line&gt;+current_char(size).
**
**        if class ne &apos;ZCL_FALV&apos;.
**          &quot;inheritance used ?
**          &quot;try to check if we can use class
**
**        endif.
*
*      endloop.
*
*      cl_abap_parser=&gt;get_tokens(
*       exporting
*         source = teststr
*       importing
*         tokens =  data(toks)    &quot; Sequence of qualified tokens
*     ).
*
*      data(stack_other) = cl_abap_get_call_stack=&gt;get_call_stack( ).
*
*    endif.
*

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="COLUMN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="COLUMN" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_FCAT-FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="COLUMN" SCONAME="RV_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_FALV_COLUMN"/>
   <source>method column.
    try.
        rv_column = columns[  table_line-&gt;fieldname = iv_fieldname ].
      catch cx_sy_itab_line_not_found.

    endtry.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="0" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_SHELLSTYLE" VERSION="1" LANGU="E" DESCRIPT="Control Style" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PARVALUE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_LIFETIME" VERSION="1" LANGU="E" DESCRIPT="Lifetime" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_PARENT" VERSION="1" LANGU="E" DESCRIPT="Parent Container" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_APPL_EVENTS" VERSION="1" LANGU="E" DESCRIPT="Register Events as Application Events" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR01" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_PARENTDBG" VERSION="1" LANGU="E" DESCRIPT="Internal, Do not Use" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_APPLOGPARENT" VERSION="1" LANGU="E" DESCRIPT="Container for Application Log" CMPTYPE="1" MTDTYPE="2" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_GRAPHICSPARENT" VERSION="1" LANGU="E" DESCRIPT="Container for Graphics" CMPTYPE="1" MTDTYPE="2" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_NAME" VERSION="1" LANGU="E" DESCRIPT="Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="8 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="I_FCAT_COMPLETE" VERSION="1" LANGU="E" DESCRIPT="Boolean Variable (X=True, Space=False)" CMPTYPE="1" MTDTYPE="2" EDITORDER="9 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SAP_BOOL" PARVALUE="SPACE"/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_CNTL_CREATE" VERSION="1" LANGU="E" DESCRIPT="Error Creating Control" MTDTYPE="2" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_CNTL_INIT" VERSION="1" LANGU="E" DESCRIPT="Error While Initializing Control" MTDTYPE="2" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_CNTL_LINK" VERSION="1" LANGU="E" DESCRIPT="Error While Linking Control" MTDTYPE="2" EDITORDER="3 "/>
   <exception CLSNAME="ZCL_FALV" CMPNAME="CONSTRUCTOR" SCONAME="ERROR_DP_CREATE" VERSION="1" LANGU="E" DESCRIPT="Error While Creating DataProvider Control" MTDTYPE="2" EDITORDER="4 "/>
   <source>method constructor.
    super-&gt;constructor(
      exporting
        i_shellstyle      = i_shellstyle    &quot; Control Style
        i_lifetime        = i_lifetime    &quot; Lifetime
        i_parent          = i_parent    &quot; Parent Container
        i_appl_events     = i_appl_events    &quot; Register Events as Application Events
        i_parentdbg       = i_parentdbg    &quot; Internal, Do not Use
        i_applogparent    = i_applogparent    &quot; Container for Application Log
        i_graphicsparent  = i_graphicsparent    &quot; Container for Graphics
        i_name            = i_name    &quot; Name
        i_fcat_complete   = i_fcat_complete  &quot; Boolean Variable (X=True, Space=False)
      exceptions
        error_cntl_create = 1
        error_cntl_init   = 2
        error_cntl_link   = 3
        error_dp_create   = 4
        others            = 5
    ).
    if sy-subrc &lt;&gt; 0.
      case sy-subrc.
        when 1.
          raise error_cntl_create.
        when 2.
          raise error_cntl_init.
        when 3.
          raise error_cntl_link.
        when 4.
          raise error_dp_create.
      endcase.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CREATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_PARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_APPLOGPARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_POPUP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_APPLOG_EMBEDDED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="I_SUBCLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_ABAP_TYPEDESCR" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="CT_TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE" SCONAME="RV_FALV" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_FALV"/>
   <source>method create.
    data: built_in_screen type abap_bool.
    data: main_parent type ref to cl_gui_container.
    data: parent type ref to cl_gui_container.
    data: applog type ref to cl_gui_container.

    check_if_called_from_subclass( ).

    if cl_gui_alv_grid=&gt;offline( ) is not initial.
      &quot;To fool bg call
      data(docking_parent) = new cl_gui_docking_container( dynnr = switch #( i_popup when abap_true then c_screen_popup
                                                                                     when abap_false then c_screen_full )
                                                           repid = c_fscr_repid
                                                                 ).
      main_parent ?= docking_parent.

    endif.

    &quot;We need to call full screen ALV as container was not passed
    if i_parent is initial.

      built_in_screen = abap_true.
      try.

          if main_parent is initial.
            data(custom_container) = new cl_gui_custom_container(
                      container_name = cc_name
                      dynnr          = switch #( i_popup when abap_true then c_screen_popup
                                                         when abap_false then c_screen_full )
                      repid          = c_fscr_repid
                      no_autodef_progid_dynnr = abap_true
                      ).
            main_parent ?= custom_container.
          endif.

          if i_applog_embedded eq abap_true.
            &quot; Create split container, log at bottom, grid at top.
            &quot;Log hidden as default, will appear when error will be thrown.
            data(split_container) = new cl_gui_splitter_container(
                link_dynnr              = switch #( i_popup when abap_true then c_screen_popup
                                                 when abap_false then c_screen_full )
                link_repid              = c_fscr_repid
                 parent                  = main_parent
                 rows                    = 2
                 columns                 = 1
            ).
            parent ?= split_container-&gt;get_container( row = 1 column    = 1 ).
            applog = split_container-&gt;get_container( row = 2 column    = 1 ).
          else.
            parent ?= main_parent.
          endif.
        catch cx_root.
          &quot;Something is wrong...
      endtry.
    else.
      if main_parent is not initial.

        parent ?= main_parent.
        custom_container ?= parent.

      else.

        applog ?= i_applogparent.
        if applog is initial and i_applog_embedded eq abap_true.
          custom_container ?= i_parent.
          split_container = new cl_gui_splitter_container(
               parent                  = custom_container
               rows                    = 2
               columns                 = 1
          ).
          parent ?= split_container-&gt;get_container( row = 1 column    = 1 ).
          applog = split_container-&gt;get_container( row = 2 column    = 1 ).
        else.
          parent ?= i_parent.
          custom_container ?= i_parent.
        endif.

      endif.

    endif.
    if i_subclass is not initial.
      data: subclass type ref to object.
      data(sublcass_abs_name) = i_subclass-&gt;absolute_name.
*        data(subclass_type) = cl_abap_classdescr=&gt;describe_by_name( p_name = i_subclass ).
      create object subclass type (sublcass_abs_name)
       exporting
        i_parent       = parent
        i_applogparent = applog.
      rv_falv ?= subclass.
      rv_falv-&gt;subclass_type = i_subclass.
*    elseif cl_abap_classdescr=&gt;describe_by_object_ref( me )-&gt;absolute_name ne &apos;ZCL_FALV&apos;.
*

    else.
      create object rv_falv
        exporting
          i_parent       = parent
          i_applogparent = applog.
    endif.
    set handler rv_falv-&gt;evt_after_refresh for rv_falv.
    set handler rv_falv-&gt;evt_after_user_command for rv_falv.
    set handler rv_falv-&gt;evt_before_ucommand_internal for rv_falv.
    set handler rv_falv-&gt;evt_before_user_command for rv_falv.
    set handler rv_falv-&gt;evt_btn_click for rv_falv.
    set handler rv_falv-&gt;evt_data_changed for rv_falv.
    set handler rv_falv-&gt;evt_data_changed_internal for rv_falv.
    set handler rv_falv-&gt;evt_data_changed_finished for rv_falv.
    set handler rv_falv-&gt;evt_double_click for rv_falv.
    set handler rv_falv-&gt;evt_hotspot_click for rv_falv.
    set handler rv_falv-&gt;evt_menu_button for rv_falv.
    set handler rv_falv-&gt;evt_onf1 for rv_falv.
    set handler rv_falv-&gt;evt_onf4 for rv_falv.
    set handler rv_falv-&gt;evt_subtotal_text for rv_falv.
    set handler rv_falv-&gt;evt_toolbar_internal for rv_falv.
    set handler rv_falv-&gt;evt_toolbar for rv_falv.
    set handler rv_falv-&gt;evt_user_command for rv_falv.
    set handler rv_falv-&gt;evt_user_command_internal for rv_falv.
    set handler rv_falv-&gt;evt_at_set_pf_status for rv_falv.
    set handler rv_falv-&gt;evt_at_set_title for rv_falv.
    set handler rv_falv-&gt;evt_top_of_page for rv_falv.
    set handler rv_falv-&gt;evt_delayed_callback for rv_falv.
    set handler rv_falv-&gt;evt_delayed_changed_sel_call for rv_falv.
    set handler rv_falv-&gt;evt_ondrag for rv_falv.
    set handler rv_falv-&gt;evt_ondrop for rv_falv.
    set handler rv_falv-&gt;evt_ondropcomplete for rv_falv.
    set handler rv_falv-&gt;evt_ondropgetflavor for rv_falv.
    set handler rv_falv-&gt;evt_drop_external_file for rv_falv.

    rv_falv-&gt;set_delay_change_selection(
      exporting
        time   =  rv_falv-&gt;delay_change_selection
      exceptions
        error  = 1
        others = 2
    ).
    if sy-subrc &lt;&gt; 0.
    endif.

    rv_falv-&gt;set_delay_move_current_cell(
      exporting
       time   = rv_falv-&gt;delay_move_current_cell
      exceptions
        error  = 1
        others = 2
    ).
    if sy-subrc &lt;&gt; 0.
    endif.

*    rv_falv-&gt;register_delayed_event(
*      exporting
*        i_event_id =  rv_falv-&gt;mc_evt_delayed_change_select
*      exceptions
*        error      = 1
*        others     = 2
*    ).
*    if sy-subrc &lt;&gt; 0.
*    endif.


    rv_falv-&gt;set_output_table( changing ct_table = ct_table ).
    rv_falv-&gt;fcat = rv_falv-&gt;lvc_fcat_from_itab( it_table = ct_table ).
    rv_falv-&gt;set_frontend_fieldcatalog( it_fieldcatalog = rv_falv-&gt;fcat ).
    rv_falv-&gt;application_log_embedded = i_applog_embedded.
    rv_falv-&gt;built_in_screen = built_in_screen.
    rv_falv-&gt;build_columns( ).
    rv_falv-&gt;layout = new zcl_falv_layout( rv_falv ).

    rv_falv-&gt;gui_status = new zcl_falv_dynamic_status( ).
    rv_falv-&gt;screen = switch #( i_popup when abap_true then c_screen_popup
                                        when abap_false then c_screen_full ).
    if built_in_screen eq abap_true and rv_falv-&gt;screen eq c_screen_full.
      &quot;default in full screen
      rv_falv-&gt;layout-&gt;set_no_toolbar( abap_true ).
    endif.
    rv_falv-&gt;main_container ?= custom_container.
    rv_falv-&gt;split_container = split_container.
*    rv_falv-&gt;variant-report = sy-repid.
    if split_container is not initial.
      rv_falv-&gt;hide_applog( ).
    endif.

    rv_falv-&gt;layout_save = &apos;A&apos;.
    rv_falv-&gt;variant-report = sy-cprog.
    rv_falv-&gt;variant-username = sy-uname.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="I_PARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="I_APPLOGPARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="I_POPUP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="CREATE_BY_COPY" SCONAME="RV_FALV" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_FALV"/>
   <source>method create_by_copy.
    data: built_in_screen type abap_bool.
    data: main_parent type ref to cl_gui_container.

    if cl_gui_alv_grid=&gt;offline( ) is not initial.
      &quot;To fool bg call
      data(docking_parent) = new cl_gui_docking_container( dynnr = switch #( i_popup when abap_true then c_screen_popup
                                                                                     when abap_false then c_screen_full )
                                                           repid = c_fscr_repid
                                                                 ).

      main_parent  ?= docking_parent.
    endif.


    &quot;We need to call full screen ALV as container was not passed
    if i_parent is initial.
      built_in_screen = abap_true.
      try.
          if main_parent is initial.
            data(custom_container) = new cl_gui_custom_container(
                      container_name = cc_name
                      dynnr          = switch #( i_popup when abap_true then c_screen_popup
                                                         when abap_false then c_screen_full )
                      repid          = c_fscr_repid
                      no_autodef_progid_dynnr = abap_true
                      ).
            main_parent ?= custom_container.

          endif.
          if application_log_embedded eq abap_true.
            &quot; Create split container, log at bottom, grid at top.
            &quot;Log hidden as default, will appear when error will be thrown.
            data(split_container) = new cl_gui_splitter_container(
                link_dynnr              = switch #( i_popup when abap_true then c_screen_popup
                                                 when abap_false then c_screen_full )
                link_repid              = c_fscr_repid
                 parent                  = main_parent
                 rows                    = 2
                 columns                 = 1
            ).
            i_parent ?= split_container-&gt;get_container( row = 1 column    = 1 ).
            i_applogparent = split_container-&gt;get_container( row = 2 column    = 1 ).
          else.
            i_parent ?= main_parent.
          endif.
        catch cx_root.
          &quot;Something is wrong...
      endtry.
    else.

      if main_parent is initial.

        main_parent ?= i_parent.

      endif.

    endif.

    if me-&gt;subclass_type is not initial.
      data: subclass type ref to object.
      data(sublcass_abs_name) = subclass_type-&gt;absolute_name.
      create object subclass type (sublcass_abs_name)
       exporting
        i_parent       = main_parent
        i_applogparent = i_applogparent.

      rv_falv ?= subclass.
      rv_falv-&gt;subclass_type = subclass_type.
    else.
      create object rv_falv
        exporting
          i_parent       = main_parent
          i_applogparent = i_applogparent.
    endif.

    set handler rv_falv-&gt;evt_after_refresh for rv_falv.
    set handler rv_falv-&gt;evt_after_user_command for rv_falv.
    set handler rv_falv-&gt;evt_before_ucommand_internal for rv_falv.
    set handler rv_falv-&gt;evt_before_user_command for rv_falv.
    set handler rv_falv-&gt;evt_btn_click for rv_falv.
    set handler rv_falv-&gt;evt_data_changed for rv_falv.
    set handler rv_falv-&gt;evt_data_changed_internal for rv_falv.
    set handler rv_falv-&gt;evt_data_changed_finished for rv_falv.
    set handler rv_falv-&gt;evt_double_click for rv_falv.
    set handler rv_falv-&gt;evt_hotspot_click for rv_falv.
    set handler rv_falv-&gt;evt_menu_button for rv_falv.
    set handler rv_falv-&gt;evt_onf1 for rv_falv.
    set handler rv_falv-&gt;evt_onf4 for rv_falv.
    set handler rv_falv-&gt;evt_subtotal_text for rv_falv.
    set handler rv_falv-&gt;evt_toolbar_internal for rv_falv.
    set handler rv_falv-&gt;evt_toolbar for rv_falv.
    set handler rv_falv-&gt;evt_user_command for rv_falv.
    set handler rv_falv-&gt;evt_user_command_internal for rv_falv.
    set handler rv_falv-&gt;evt_at_set_pf_status for rv_falv.
    set handler rv_falv-&gt;evt_at_set_title for rv_falv.
    set handler rv_falv-&gt;evt_top_of_page for rv_falv.
    set handler rv_falv-&gt;evt_delayed_callback for rv_falv.
    set handler rv_falv-&gt;evt_delayed_changed_sel_call for rv_falv.
    set handler rv_falv-&gt;evt_ondrag for rv_falv.
    set handler rv_falv-&gt;evt_ondrop for rv_falv.
    set handler rv_falv-&gt;evt_ondropcomplete for rv_falv.
    set handler rv_falv-&gt;evt_ondropgetflavor for rv_falv.
    set handler rv_falv-&gt;evt_drop_external_file for rv_falv.

    rv_falv-&gt;set_delay_change_selection(
      exporting
        time   =  me-&gt;delay_change_selection
      exceptions
        error  = 1
        others = 2
    ).
    if sy-subrc &lt;&gt; 0.
    endif.

    rv_falv-&gt;set_delay_move_current_cell(
      exporting
       time   = me-&gt;delay_move_current_cell
      exceptions
        error  = 1
        others = 2
    ).
    if sy-subrc &lt;&gt; 0.
    endif.


    field-symbols: &lt;outtab&gt; type standard table.
    assign me-&gt;outtab-&gt;* to &lt;outtab&gt;.
    rv_falv-&gt;set_output_table( changing ct_table = &lt;outtab&gt; ).
    rv_falv-&gt;fcat = rv_falv-&gt;lvc_fcat_from_itab( it_table = &lt;outtab&gt; ).
    rv_falv-&gt;sort = me-&gt;sort.
    rv_falv-&gt;filter = me-&gt;filter.
    rv_falv-&gt;set_frontend_fieldcatalog( it_fieldcatalog = me-&gt;fcat ).
    rv_falv-&gt;application_log_embedded = application_log_embedded.
    rv_falv-&gt;built_in_screen = built_in_screen.
    rv_falv-&gt;build_columns( ).
    rv_falv-&gt;layout = new zcl_falv_layout( io_falv = rv_falv ).
    rv_falv-&gt;gui_status ?= me-&gt;gui_status-&gt;if_os_clone~clone( ). &quot;clone object
    rv_falv-&gt;lvc_layout = me-&gt;lvc_layout.
    rv_falv-&gt;variant = me-&gt;variant.
    rv_falv-&gt;screen = switch #( i_popup when abap_true then c_screen_popup
                                        when abap_false then c_screen_full ).

    rv_falv-&gt;main_container ?= custom_container.
    rv_falv-&gt;split_container = split_container.
    if split_container is not initial.
      rv_falv-&gt;hide_applog( ).
    endif.
    rv_falv-&gt;title_v1 = me-&gt;title_v1.
    rv_falv-&gt;title_v2 = me-&gt;title_v2.
    rv_falv-&gt;title_v3 = me-&gt;title_v3.
    rv_falv-&gt;title_v4 = me-&gt;title_v4.
    rv_falv-&gt;exclude_functions = me-&gt;exclude_functions.
    rv_falv-&gt;toolbar_added = me-&gt;toolbar_added.
    rv_falv-&gt;toolbar_deleted = me-&gt;toolbar_deleted.
    rv_falv-&gt;toolbar_disabled = me-&gt;toolbar_disabled.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="DELETE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DELETE_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <source>method delete_button.
    delete toolbar_added where function = iv_function.
    if sy-subrc ne 0.
      insert value #( function = iv_function ) into table toolbar_deleted.
      if sy-subrc ne 0.
      endif.
    endif.
    me-&gt;refresh_toolbar( ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="DISABLE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISABLE_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <source>method disable_button.
    try.
        toolbar_added[ function = iv_function ]-disabled = abap_true.
      catch cx_sy_itab_line_not_found.
    endtry.
    insert value #( function = iv_function ) into table toolbar_disabled.
    if sy-subrc ne 0.
    endif.
    me-&gt;refresh_toolbar( ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_FORCE_GRID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_START_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_START_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_END_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="DISPLAY" SCONAME="IV_END_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <source>method display.
    field-symbols: &lt;outtab&gt; type standard table.
    if built_in_screen eq abap_true and iv_force_grid eq abap_false.
      if screen eq c_screen_popup and iv_start_row is initial
                                  and iv_start_column is initial
                                  and iv_end_row is initial
                                  and iv_end_column is initial.
        iv_start_row = 1.
        iv_start_column = 1.
        iv_end_row = 20.
        iv_end_column = 150.
      endif.
      call function &apos;Z_FALV_DISPLAY&apos;
        exporting
          io_falv         = me
          iv_start_row    = iv_start_row
          iv_start_column = iv_start_column
          iv_end_row      = iv_end_row
          iv_end_column   = iv_end_column.
      .
    else.
      assign outtab-&gt;* to &lt;outtab&gt;.
      me-&gt;set_table_for_first_display(
        exporting
*            i_buffer_active               =     &quot; Buffering Active
*            i_bypassing_buffer            =     &quot; Switch Off Buffer
*            i_consistency_check           =     &quot; Starting Consistency Check for Interface Error Recognition
*            i_structure_name              =     &quot; Internal Output Table Structure Name
          is_variant                     =     variant
          i_save                        =      layout_save
*            i_default                     = &apos;X&apos;    &quot; Default Display Variant
          is_layout                     =      lvc_layout
*            is_print                      =     &quot; Print Control
*            it_special_groups            =     &quot; Field Groups
          it_toolbar_excluding          =     exclude_functions
*            it_hyperlink                  =     &quot; Hyperlinks
*            it_alv_graphics               =     &quot; Table of Structure DTC_S_TC
*            it_except_qinfo               =     &quot; Table for Exception Quickinfo
*            ir_salv_adapter               =     &quot; Interface ALV Adapter
        changing
          it_outtab                     =    &lt;outtab&gt; &quot; Output Table
          it_fieldcatalog               =     fcat
          it_sort                       =     sort &quot; Sort Criteria
          it_filter                     =     filter &quot; Filter Criteria
        exceptions
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          others                        = 4
      ).
      if sy-subrc eq 0.
        if split_container is not initial.
          split_container-&gt;set_focus(
            exporting
              control           =     me
            exceptions
              cntl_error        = 1
              cntl_system_error = 2
              others            = 3
          ).
          if sy-subrc &lt;&gt; 0.
          endif.
          me-&gt;hide_applog( ).
        else.
          me-&gt;parent-&gt;set_focus(
            exporting
              control           =  me
            exceptions
              cntl_error        = 1
              cntl_system_error = 2
              others            = 3
          ).
          if sy-subrc &lt;&gt; 0.
          endif.
        endif.
        cl_gui_cfw=&gt;flush(
          exceptions
            cntl_system_error = 1
            cntl_error        = 2
            others            = 3
        ).
        if sy-subrc &lt;&gt; 0.
        endif.
        me-&gt;set_visible( abap_true ).
        me-&gt;parent-&gt;set_visible( abap_true ).
        me-&gt;main_container-&gt;set_visible( abap_true ).
        if me-&gt;split_container is not initial.
          me-&gt;split_container-&gt;set_visible( abap_true ).
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="ENABLE_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="ENABLE_BUTTON" SCONAME="IV_FUNCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNC"/>
   <source>method enable_button.
    try.
        toolbar_added[ function = iv_function ]-disabled = abap_false.
      catch cx_sy_itab_line_not_found.
    endtry.
    delete toolbar_disabled where function = iv_function.
    me-&gt;refresh_toolbar( ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_REFRESH" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="AFTER_REFRESH" BCMTDCAT="00" BCMTDSYN="0">
   <source>method evt_after_refresh.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="AFTER_USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" SCONAME="E_SAVED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_AFTER_USER_COMMAND" SCONAME="E_NOT_PROCESSED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_after_user_command.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AT_SET_PF_STATUS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="23 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZCL_FALV" REFCMPNAME="AT_SET_PF_STATUS" BCMTDCAT="00" BCMTDSYN="0">
   <source>method evt_at_set_pf_status.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_AT_SET_TITLE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="24 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZCL_FALV" REFCMPNAME="AT_SET_TITLE" BCMTDCAT="00" BCMTDSYN="0">
   <source>method evt_at_set_title.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_UCOMMAND_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="BEFORE_USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_UCOMMAND_INTERNAL" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_before_ucommand_internal.
    field-symbols: &lt;outtab&gt; type standard table.
    case e_ucomm.
      when me-&gt;mc_fc_select_all.
        if layout-&gt;mark_field is not initial and
           line_exists( fcat[ fieldname = layout-&gt;mark_field checkbox = abap_true ] ).
          assign outtab-&gt;* to &lt;outtab&gt;.
          loop at &lt;outtab&gt; assigning field-symbol(&lt;line&gt;).
            assign component layout-&gt;mark_field of structure &lt;line&gt; to field-symbol(&lt;mark&gt;).
            if sy-subrc eq 0.
              &lt;mark&gt; = abap_true.
            endif.
          endloop.
          me-&gt;soft_refresh( ).
          set_user_command( i_ucomm = space ).
        endif.
      when me-&gt;mc_fc_deselect_all.
        if layout-&gt;mark_field is not initial and
          line_exists( fcat[ fieldname = layout-&gt;mark_field checkbox = abap_true ] ).
          assign outtab-&gt;* to &lt;outtab&gt;.
          loop at &lt;outtab&gt; assigning &lt;line&gt;.
            assign component layout-&gt;mark_field of structure &lt;line&gt; to &lt;mark&gt;.
            if sy-subrc eq 0.
              &lt;mark&gt; = abap_false.
            endif.
          endloop.
          me-&gt;soft_refresh( ).
          set_user_command( i_ucomm = space ).
        endif.
    endcase.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_USER_COMMAND" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="BEFORE_USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BEFORE_USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_before_user_command.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_BTN_CLICK" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="BUTTON_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BTN_CLICK" SCONAME="ES_COL_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_BTN_CLICK" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_btn_click.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DATA_CHANGED" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="ER_DATA_CHANGED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_ONF4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_ONF4_BEFORE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_ONF4_AFTER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_data_changed.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_FINISHED" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DATA_CHANGED_FINISHED" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_FINISHED" SCONAME="E_MODIFIED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_FINISHED" SCONAME="ET_GOOD_CELLS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_data_changed_finished.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DATA_CHANGED" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="ER_DATA_CHANGED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_ONF4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_ONF4_BEFORE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_ONF4_AFTER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DATA_CHANGED_INTERNAL" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_data_changed_internal.
    if er_data_changed-&gt;mt_protocol is not initial.
      show_applog( ).
    else.
      hide_applog( ).
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DELAYED_CALLBACK" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DELAYED_CALLBACK" BCMTDCAT="00" BCMTDSYN="0">
   <source>method evt_delayed_callback.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DELAYED_CHANGED_SEL_CALL" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DELAYED_CHANGED_SEL_CALLBACK" BCMTDCAT="00" BCMTDSYN="0">
   <source>method evt_delayed_changed_sel_call.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DOUBLE_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" SCONAME="E_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" SCONAME="E_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DOUBLE_CLICK" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_double_click.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_DROP_EXTERNAL_FILE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="22 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DROP_EXTERNAL_FILES" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_DROP_EXTERNAL_FILE" SCONAME="FILES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_drop_external_file.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="HOTSPOT_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" SCONAME="E_ROW_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" SCONAME="E_COLUMN_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_HOTSPOT_CLICK" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_hotspot_click.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_MENU_BUTTON" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="MENU_BUTTON" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_MENU_BUTTON" SCONAME="E_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_MENU_BUTTON" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_menu_button.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDRAG" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONDRAG" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDRAG" SCONAME="E_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDRAG" SCONAME="E_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDRAG" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDRAG" SCONAME="E_DRAGDROPOBJ" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_ondrag.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROP" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="20 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONDROP" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROP" SCONAME="E_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROP" SCONAME="E_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROP" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROP" SCONAME="E_DRAGDROPOBJ" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_ondrop.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPCOMPLETE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="21 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONDROPCOMPLETE" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPCOMPLETE" SCONAME="E_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPCOMPLETE" SCONAME="E_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPCOMPLETE" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPCOMPLETE" SCONAME="E_DRAGDROPOBJ" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_ondropcomplete.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPGETFLAVOR" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONDROPGETFLAVOR" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPGETFLAVOR" SCONAME="E_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPGETFLAVOR" SCONAME="E_COLUMN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPGETFLAVOR" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPGETFLAVOR" SCONAME="E_DRAGDROPOBJ" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONDROPGETFLAVOR" SCONAME="E_FLAVORS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>METHOD evt_ondropgetflavor.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONF1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" SCONAME="E_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF1" SCONAME="ER_EVENT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_onf1.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="ONF4" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="E_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="E_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="ES_ROW_NO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="ER_EVENT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="ET_BAD_CELLS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_ONF4" SCONAME="E_DISPLAY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_onf4.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="SUBTOTAL_TEXT" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" SCONAME="ES_SUBTOTTXT_INFO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" SCONAME="EP_SUBTOT_LINE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_SUBTOTAL_TEXT" SCONAME="E_EVENT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_subtotal_text.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="TOOLBAR" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR" SCONAME="E_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR" SCONAME="E_INTERACTIVE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_toolbar.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="TOOLBAR" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR_INTERNAL" SCONAME="E_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOOLBAR_INTERNAL" SCONAME="E_INTERACTIVE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_toolbar_internal.
    loop at toolbar_added assigning field-symbol(&lt;tb&gt;).
      insert &lt;tb&gt; into table e_object-&gt;mt_toolbar[].
    endloop.
    loop at toolbar_disabled assigning &lt;tb&gt;.
      try.
          e_object-&gt;mt_toolbar[ function = &lt;tb&gt;-function ]-disabled = abap_true.
        catch cx_sy_itab_line_not_found.

      endtry.
    endloop.
    loop at toolbar_deleted assigning &lt;tb&gt;.
      data(tabix) = sy-tabix.
      delete e_object-&gt;mt_toolbar where function = &lt;tb&gt;-function.
      if sy-subrc ne 0.
      endif.
    endloop.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_TOP_OF_PAGE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="TOP_OF_PAGE" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOP_OF_PAGE" SCONAME="E_DYNDOC_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_TOP_OF_PAGE" SCONAME="TABLE_INDEX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_top_of_page.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_user_command.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND_INTERNAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EVT_USER_COMMAND_INTERNAL" SCONAME="E_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method evt_user_command_internal.
    case e_ucomm.
      when fc_back.
        leave to screen 0.
      when fc_exit.
        leave to screen 0.
      when fc_up.
        leave to screen 0.
      when fc_cancel.
        leave to screen 0.
      when fc_mass_replace.
        mass_replace( ).
    endcase.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="EXCLUDE_FUNCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="EXCLUDE_FUNCTION" SCONAME="IV_UCOMM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UCOMM"/>
   <source>method exclude_function.
    if not line_exists( exclude_functions[ table_line = iv_ucomm ] ).
      insert iv_ucomm into table exclude_functions.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="HIDE_APPLOG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method hide_applog.
    if split_container is not initial.
      split_container-&gt;set_row_sash(
        exporting
          id                =  1   &quot; Row Splitter Bar ID
          type              =  split_container-&gt;type_sashvisible   &quot; Attribute
          value             =  0   &quot; Value
        exceptions
          cntl_error        = 1
          cntl_system_error = 2
          others            = 3
      ).
      if sy-subrc &lt;&gt; 0.
      endif.
      split_container-&gt;set_row_height(
        exporting
          id                =   2 &quot; Row ID
          height            =   0  &quot; Height
        exceptions
          cntl_error        = 1
          cntl_system_error = 2
          others            = 3
      ).
      if sy-subrc &lt;&gt; 0.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="LVC_FCAT_FROM_ITAB" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="LVC_FCAT_FROM_ITAB" SCONAME="IT_TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="LVC_FCAT_FROM_ITAB" SCONAME="RT_FCAT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_T_FCAT"/>
   <source>method lvc_fcat_from_itab.
    data: table type ref to data.
    create data table like it_table.
    assign table-&gt;* to field-symbol(&lt;table&gt;).
    try.
        cl_salv_table=&gt;factory( importing
                                  r_salv_table   = data(salv_table)
                                changing
                                  t_table        = &lt;table&gt;  ).
        rt_fcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(
            r_columns      = salv_table-&gt;get_columns( ) &quot; ALV Filter
            r_aggregations = salv_table-&gt;get_aggregations( ) &quot; ALV Aggregations
    ).
      catch cx_root.
    endtry.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="MASS_REPLACE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method mass_replace.
    field-symbols: &lt;outtab&gt; type standard table.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      call function &apos;Z_FALV_MASS_REPLACE&apos;
        exporting
          io_grid   = cast cl_gui_alv_grid( me )
        changing
          ct_outtab = &lt;outtab&gt;.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="PAI" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="PAI" SCONAME="IV_DYNNR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-DYNNR" PARVALUE="SY-DYNNR"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="PAI" SCONAME="C_UCOMM" VERSION="1" LANGU="E" DESCRIPT="ABAP System Field: PAI-Triggering Function Code" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-UCOMM" PARVALUE="SY-UCOMM"/>
   <source>method pai.
    raise event user_command exporting e_ucomm = c_ucomm.

    me-&gt;set_function_code(
       changing
         c_ucomm = c_ucomm ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="PBO" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="PBO" SCONAME="IV_DYNNR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-DYNNR" PARVALUE="SY-DYNNR"/>
   <source>method pbo.

    gui_status-&gt;show_gui_status( ).
    raise event at_set_pf_status .

    gui_status-&gt;show_title(
      exporting
        iv_text1 = title_v1
        iv_text2 = title_v2
        iv_text3 = title_v3
        iv_text4 = title_v4
        iv_text5 = title_v5
    ).
    raise event at_set_title.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="REFRESH_TOOLBAR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method refresh_toolbar.
    try.
        me-&gt;set_toolbar_interactive(  ).
      catch cx_root.
        &quot;in case method is called before the display of grid
        &quot;no need to do anything with that
    endtry.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_BUTTON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_BUTTON" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_BUTTON" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>method set_cell_button.
    field-symbols: &lt;outtab&gt; type standard table,
                   &lt;styles&gt; type lvc_t_styl.
    get_frontend_layout( importing es_layout =  lvc_layout ).
    check lvc_layout-stylefname is not initial.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      if sy-subrc eq 0.
        assign component lvc_layout-stylefname of structure &lt;row&gt; to &lt;styles&gt;.
        if sy-subrc eq 0.
          try.
              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_button.
            catch cx_sy_itab_line_not_found.
              insert value #( fieldname = iv_fieldname style = mc_style_button ) into table &lt;styles&gt;.
          endtry.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" SCONAME="IV_COLOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_COLO"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_COLOR" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>method set_cell_color.
    field-symbols: &lt;outtab&gt; type standard table,
                   &lt;colors&gt; type lvc_t_scol.
    get_frontend_layout( importing es_layout =  lvc_layout ).
    check lvc_layout-ctab_fname is not initial.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      if sy-subrc eq 0.
        assign component lvc_layout-ctab_fname of structure &lt;row&gt; to &lt;colors&gt;.
        if sy-subrc eq 0.
          try.
              &lt;colors&gt;[ fname = iv_fieldname ]-color = iv_color.
            catch cx_sy_itab_line_not_found.
              insert value #( fname = iv_fieldname color = iv_color ) into table &lt;colors&gt;.
          endtry.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_DISABLED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_DISABLED" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_DISABLED" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>method set_cell_disabled.
    field-symbols: &lt;outtab&gt; type standard table,
                   &lt;styles&gt; type lvc_t_styl.
    get_frontend_layout( importing es_layout =  lvc_layout ).
    check lvc_layout-stylefname is not initial.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      if sy-subrc eq 0.
        assign component lvc_layout-stylefname of structure &lt;row&gt; to &lt;styles&gt;.
        if sy-subrc eq 0.
          try.
              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_disabled.
            catch cx_sy_itab_line_not_found.
              insert value #( fieldname = iv_fieldname style = mc_style_disabled ) into table &lt;styles&gt;.
          endtry.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_ENABLED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_ENABLED" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_ENABLED" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>method set_cell_enabled.
    field-symbols: &lt;outtab&gt; type standard table,
                   &lt;styles&gt; type lvc_t_styl.
    get_frontend_layout( importing es_layout =  lvc_layout ).
    check lvc_layout-stylefname is not initial.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      if sy-subrc eq 0.
        assign component lvc_layout-stylefname of structure &lt;row&gt; to &lt;styles&gt;.
        if sy-subrc eq 0.
          try.
              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_enabled.
            catch cx_sy_itab_line_not_found.
              insert value #( fieldname = iv_fieldname style = mc_style_enabled ) into table &lt;styles&gt;.
          endtry.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_HOTSPOT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_HOTSPOT" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FIELDNAME"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_CELL_HOTSPOT" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>method set_cell_hotspot.
    field-symbols: &lt;outtab&gt; type standard table,
                   &lt;styles&gt; type lvc_t_styl.
    get_frontend_layout( importing es_layout =  lvc_layout ).
    check lvc_layout-stylefname is not initial.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      if sy-subrc eq 0.
        assign component lvc_layout-stylefname of structure &lt;row&gt; to &lt;styles&gt;.
        if sy-subrc eq 0.
          try.
              &lt;styles&gt;[ fieldname = iv_fieldname ]-style = mc_style_hotspot.
            catch cx_sy_itab_line_not_found.
              insert value #( fieldname = iv_fieldname style = mc_style_hotspot ) into table &lt;styles&gt;.
          endtry.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_EDITABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_EDITABLE" SCONAME="IV_MODIFY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_FALSE"/>
   <source>method set_editable.
    me-&gt;set_ready_for_input( i_ready_for_input = 1 ).
    if iv_modify eq abap_true.
      me-&gt;register_edit_event(
        exporting
          i_event_id =  me-&gt;mc_evt_modified
        exceptions
          error      = 1
          others     = 2
      ).
      if sy-subrc &lt;&gt; 0.
*        message id sy-msgid type sy-msgty number sy-msgno
*                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      endif.
    else.
      me-&gt;register_edit_event(
        exporting
          i_event_id =  me-&gt;mc_evt_enter
        exceptions
          error      = 1
          others     = 2
      ).
      if sy-subrc &lt;&gt; 0.
*        message id sy-msgid type sy-msgty number sy-msgno
*                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="CL_GUI_ALV_GRID" CMPNAME="SET_FRONTEND_FIELDCATALOG" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method set_frontend_fieldcatalog.
    fcat = it_fieldcatalog.
    super-&gt;set_frontend_fieldcatalog( fcat ).
  endmethod.</source>
  </method>
  <method CLSNAME="CL_GUI_ALV_GRID" CMPNAME="SET_FRONTEND_LAYOUT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method set_frontend_layout.
    lvc_layout = is_layout.
    super-&gt;set_frontend_layout( is_layout ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_MARK_FIELD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_MARK_FIELD" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_FCAT-FIELDNAME"/>
   <source>method set_mark_field.
    if line_exists( fcat[ fieldname = iv_fieldname ] ).
      layout-&gt;mark_field = iv_fieldname.
      check iv_fieldname is not initial.
      column( iv_fieldname )-&gt;set_checkbox( abap_true ).
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_OUTPUT_TABLE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_OUTPUT_TABLE" SCONAME="CT_TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <source>method set_output_table.
    get reference of ct_table into outtab.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_PARENT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_PARENT" SCONAME="IO_PARENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method set_parent.
    me-&gt;parent ?= io_parent.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_READONLY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method set_readonly.
    me-&gt;set_ready_for_input( i_ready_for_input = 1 ).
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SET_ROW_COLOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_ROW_COLOR" SCONAME="IV_COLOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CHAR04"/>
   <parameter CLSNAME="ZCL_FALV" CMPNAME="SET_ROW_COLOR" SCONAME="IV_ROW" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LVC_S_ROID-ROW_ID"/>
   <source>method set_row_color.
    field-symbols: &lt;outtab&gt; type standard table,
                   &lt;color&gt;  type char04.
    get_frontend_layout( importing es_layout =  lvc_layout ).
    check lvc_layout-info_fname is not initial.
    assign outtab-&gt;* to &lt;outtab&gt;.
    if sy-subrc eq 0.
      assign &lt;outtab&gt;[ iv_row ] to field-symbol(&lt;row&gt;).
      if sy-subrc eq 0.
        assign component lvc_layout-info_fname of structure &lt;row&gt; to &lt;color&gt;.
        if sy-subrc eq 0.
          &lt;color&gt; = iv_color.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SHOW_APPLOG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method show_applog.
    if split_container is not initial.
      split_container-&gt;set_row_sash(
        exporting
          id                =  1   &quot; Row Splitter Bar ID
          type              =  split_container-&gt;type_sashvisible   &quot; Attribute
          value             =  1   &quot; Value
        exceptions
          cntl_error        = 1
          cntl_system_error = 2
          others            = 3
      ).
      if sy-subrc &lt;&gt; 0.
      endif.
      split_container-&gt;get_row_height(
        exporting
          id                =  2   &quot; Row ID
        importing
          result            =  height   &quot; Result Code
        exceptions
          cntl_error        = 1
          cntl_system_error = 2
          others            = 3
      ).
      if sy-subrc eq 0 and height eq 0.
        split_container-&gt;set_row_height(
          exporting
            id                =   2 &quot; Row ID
            height            =   15  &quot; Height
          importing
            result           = result
          exceptions
            cntl_error        = 1
            cntl_system_error = 2
            others            = 3
        ).
        if sy-subrc &lt;&gt; 0.
        endif.
      endif.
    endif.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_FALV" CMPNAME="SOFT_REFRESH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method soft_refresh.
    me-&gt;refresh_table_display(
      exporting
        is_stable      =     conv #(&apos;XX&apos;) &quot; With Stable Rows/Columns
        i_soft_refresh =     abap_true&quot; Without Sort, Filter, etc.
      exceptions
        finished       = 1
        others         = 2
    ).
    if sy-subrc &lt;&gt; 0.
*     message id sy-msgid type sy-msgty number sy-msgno
*                with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    endif.
  endmethod.</source>
  </method>
 </CLAS>
</nugget>
